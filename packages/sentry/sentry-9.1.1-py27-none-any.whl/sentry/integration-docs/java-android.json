{
  "html": "<h2 id=\"installation\">Installation</h2>\n\n<p>Using Gradle (Android Studio) in your <code class=\"highlighter-rouge\">app/build.gradle</code> add:</p>\n\n<pre class=\"highlight\"><code><span class=\"n\">compile</span> <span class=\"s1\">'io.sentry:sentry-android:1.7.16'</span>\n\n<span class=\"c1\">// this dependency is not required if you are already using your own</span>\n<span class=\"c1\">// slf4j implementation</span>\n<span class=\"n\">compile</span> <span class=\"s1\">'org.slf4j:slf4j-nop:1.7.25'</span>\n</code></pre>\n\n<p>For other dependency managers see the <a href=\"https://search.maven.org/#artifactdetails%7Cio.sentry%7Csentry-android%7C1.7.16%7Cjar\">central Maven repository</a>.\n\n</p>\n<h2 id=\"usage\">Usage</h2>\n\n<p>Now you can use <code class=\"highlighter-rouge\">Sentry</code> to capture events anywhere in your application:</p>\n\n<pre class=\"highlight\"><code><span class=\"kn\">import</span> <span class=\"nn\">io.sentry.context.Context</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">io.sentry.event.BreadcrumbBuilder</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">io.sentry.event.UserBuilder</span><span class=\"o\">;</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">MyClass</span> <span class=\"o\">{</span>\n    <span class=\"cm\">/**\n      * An example method that throws an exception.\n      */</span>\n    <span class=\"kt\">void</span> <span class=\"nf\">unsafeMethod</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n        <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"nf\">UnsupportedOperationException</span><span class=\"o\">(</span><span class=\"s\">\"You shouldn't call this!\"</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"cm\">/**\n      * Note that the ``Sentry.init`` method must be called before the static API\n      * is used, otherwise a ``NullPointerException`` will be thrown.\n      */</span>\n    <span class=\"kt\">void</span> <span class=\"nf\">logWithStaticAPI</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n        <span class=\"cm\">/*\n         Record a breadcrumb in the current context which will be sent\n         with the next event(s). By default the last 100 breadcrumbs are kept.\n         */</span>\n        <span class=\"n\">Sentry</span><span class=\"o\">.</span><span class=\"na\">getContext</span><span class=\"o\">().</span><span class=\"na\">recordBreadcrumb</span><span class=\"o\">(</span>\n            <span class=\"k\">new</span> <span class=\"nf\">BreadcrumbBuilder</span><span class=\"o\">().</span><span class=\"na\">setMessage</span><span class=\"o\">(</span><span class=\"s\">\"User made an action\"</span><span class=\"o\">).</span><span class=\"na\">build</span><span class=\"o\">()</span>\n        <span class=\"o\">);</span>\n\n        <span class=\"c1\">// Set the user in the current context.</span>\n        <span class=\"n\">Sentry</span><span class=\"o\">.</span><span class=\"na\">getContext</span><span class=\"o\">().</span><span class=\"na\">setUser</span><span class=\"o\">(</span>\n            <span class=\"k\">new</span> <span class=\"nf\">UserBuilder</span><span class=\"o\">().</span><span class=\"na\">setEmail</span><span class=\"o\">(</span><span class=\"s\">\"hello@sentry.io\"</span><span class=\"o\">).</span><span class=\"na\">build</span><span class=\"o\">()</span>\n        <span class=\"o\">);</span>\n\n        <span class=\"cm\">/*\n         This sends a simple event to Sentry using the statically stored instance\n         that was created in the ``main`` method.\n         */</span>\n        <span class=\"n\">Sentry</span><span class=\"o\">.</span><span class=\"na\">capture</span><span class=\"o\">(</span><span class=\"s\">\"This is a test\"</span><span class=\"o\">);</span>\n\n        <span class=\"k\">try</span> <span class=\"o\">{</span>\n            <span class=\"n\">unsafeMethod</span><span class=\"o\">();</span>\n        <span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"n\">Exception</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"c1\">// This sends an exception event to Sentry using the statically stored instance</span>\n            <span class=\"c1\">// that was created in the ``main`` method.</span>\n            <span class=\"n\">Sentry</span><span class=\"o\">.</span><span class=\"na\">capture</span><span class=\"o\">(</span><span class=\"n\">e</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>", 
  "link": "https://docs.sentry.io/clients/java/modules/android/", 
  "id": "java-android", 
  "name": "Android"
}
