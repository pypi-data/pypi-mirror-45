
# parser_FormulaParser_parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQUALleftLESSEQGREATEREQNOTEQUALleftGREATERLESSleftPLUSMINUSleftMULTDIVleftCARETleftAMPleftPERCENTleftUMINUSABSOLUTE_CELL AMP APOSTROPHE CARET COLON COMMA DECIMAL DIV EQUAL EXCLAMATION FUNCTION GREATER GREATEREQ HASH LBRACKET LESS LESSEQ LPAREN MINUS MIXED_CELL MULT NOTEQUAL NUMBER PERCENT PLUS QUOTATION RBRACKET RELATIVE_CELL RPAREN SEMICOLON SINGLESPACE STRING VARIABLE WHITESPACE XLERRORexpressions : expression\n        expression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression MULT expression\n                  | expression DIV expression\n                  | expression AMP expression\n        \n        expression : expression GREATER expression\n                   | expression LESS expression\n                   | expression GREATEREQ expression\n                   | expression LESSEQ expression\n                   | expression EQUAL expression\n                   | expression NOTEQUAL expression\n        expression : MINUS expression %prec UMINUS\n        expression : NUMBER\n                   | NUMBER DECIMAL NUMBER\n                   | NUMBER CARET NUMBER\n                   | NUMBER PERCENT\n        \n        expression : STRING\n        \n        expression : FUNCTION LPAREN RPAREN\n        \n        expression : FUNCTION LPAREN expseq RPAREN\n        \n        expseq : expression\n               | expseq COMMA expression\n               | expseq COMMA COMMA expression\n               | expseq SEMICOLON SEMICOLON expression\n               | expseq SEMICOLON expression\n        \n        expression : XLERROR\n        \n        expression : array\n        \n        array : LBRACKET expseq RBRACKET\n        \n        expression : LPAREN expression RPAREN\n        \n        expression : variable_sequence\n        \n        variable_sequence : VARIABLE\n        \n        variable_sequence : variable_sequence DECIMAL VARIABLE\n        \n        expression :  cell\n        \n        cell : ABSOLUTE_CELL\n             | RELATIVE_CELL\n             | MIXED_CELL\n             | ABSOLUTE_CELL COLON ABSOLUTE_CELL\n             | ABSOLUTE_CELL COLON RELATIVE_CELL\n             | ABSOLUTE_CELL COLON MIXED_CELL\n             | RELATIVE_CELL COLON ABSOLUTE_CELL\n             | RELATIVE_CELL COLON RELATIVE_CELL\n             | RELATIVE_CELL COLON MIXED_CELL\n             | MIXED_CELL COLON ABSOLUTE_CELL\n             | MIXED_CELL COLON RELATIVE_CELL\n             | MIXED_CELL COLON MIXED_CELL\n        '
    
_lr_action_items = {'CARET':([1,],[17,]),'NOTEQUAL':([1,2,5,7,9,11,12,13,14,15,16,19,22,24,26,40,41,42,43,44,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,],[-14,-35,-36,-33,-18,-31,-30,-26,-27,28,-34,-17,28,-13,28,-16,-15,-41,-42,-40,-28,-44,-45,-43,-19,-29,-32,-12,-7,-8,28,-9,-10,-2,-6,-5,-3,-4,-38,-39,-37,28,28,-20,28,28,]),'LESS':([1,2,5,7,9,11,12,13,14,15,16,19,22,24,26,40,41,42,43,44,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,],[-14,-35,-36,-33,-18,-31,-30,-26,-27,30,-34,-17,30,-13,30,-16,-15,-41,-42,-40,-28,-44,-45,-43,-19,-29,-32,30,-7,-8,30,30,30,-2,-6,-5,-3,-4,-38,-39,-37,30,30,-20,30,30,]),'NUMBER':([0,3,6,10,17,18,25,28,29,30,31,32,33,34,35,36,37,38,45,46,69,71,],[1,1,1,1,40,41,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'LBRACKET':([0,3,6,10,25,28,29,30,31,32,33,34,35,36,37,38,45,46,69,71,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'COLON':([2,5,16,],[20,23,39,]),'MIXED_CELL':([0,3,6,10,20,23,25,28,29,30,31,32,33,34,35,36,37,38,39,45,46,69,71,],[5,5,5,5,43,49,5,5,5,5,5,5,5,5,5,5,5,5,67,5,5,5,5,]),'RELATIVE_CELL':([0,3,6,10,20,23,25,28,29,30,31,32,33,34,35,36,37,38,39,45,46,69,71,],[2,2,2,2,42,48,2,2,2,2,2,2,2,2,2,2,2,2,66,2,2,2,2,]),'MINUS':([0,1,2,3,5,6,7,9,10,11,12,13,14,15,16,19,22,24,25,26,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,],[6,-14,-35,6,-36,6,-33,-18,6,-31,-30,-26,-27,37,-34,-17,37,-13,6,37,6,6,6,6,6,6,6,6,6,6,6,-16,-15,-41,-42,-40,6,6,-28,-44,-45,-43,-19,-29,-32,37,37,37,37,37,37,-2,-6,-5,-3,-4,-38,-39,-37,6,37,6,37,-20,37,37,]),'MULT':([1,2,5,7,9,11,12,13,14,15,16,19,22,24,26,40,41,42,43,44,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,],[-14,-35,-36,-33,-18,-31,-30,-26,-27,38,-34,-17,38,-13,38,-16,-15,-41,-42,-40,-28,-44,-45,-43,-19,-29,-32,38,38,38,38,38,38,38,-6,-5,38,-4,-38,-39,-37,38,38,-20,38,38,]),'RPAREN':([1,2,5,7,9,11,12,13,14,16,19,22,24,25,26,40,41,42,43,44,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,],[-14,-35,-36,-33,-18,-31,-30,-26,-27,-34,-17,-21,-13,51,53,-16,-15,-41,-42,-40,-28,-44,-45,-43,-19,73,-29,-32,-12,-7,-8,-11,-9,-10,-2,-6,-5,-3,-4,-38,-39,-37,-25,-22,-20,-24,-23,]),'SEMICOLON':([1,2,5,7,9,11,12,13,14,16,19,21,22,24,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,],[-14,-35,-36,-33,-18,-31,-30,-26,-27,-34,-17,45,-21,-13,-16,-15,-41,-42,-40,69,-28,-44,-45,-43,-19,45,-29,-32,-12,-7,-8,-11,-9,-10,-2,-6,-5,-3,-4,-38,-39,-37,-25,-22,-20,-24,-23,]),'GREATEREQ':([1,2,5,7,9,11,12,13,14,15,16,19,22,24,26,40,41,42,43,44,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,],[-14,-35,-36,-33,-18,-31,-30,-26,-27,32,-34,-17,32,-13,32,-16,-15,-41,-42,-40,-28,-44,-45,-43,-19,-29,-32,-12,-7,-8,32,-9,-10,-2,-6,-5,-3,-4,-38,-39,-37,32,32,-20,32,32,]),'PLUS':([1,2,5,7,9,11,12,13,14,15,16,19,22,24,26,40,41,42,43,44,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,],[-14,-35,-36,-33,-18,-31,-30,-26,-27,34,-34,-17,34,-13,34,-16,-15,-41,-42,-40,-28,-44,-45,-43,-19,-29,-32,34,34,34,34,34,34,-2,-6,-5,-3,-4,-38,-39,-37,34,34,-20,34,34,]),'AMP':([1,2,5,7,9,11,12,13,14,15,16,19,22,24,26,40,41,42,43,44,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,],[-14,-35,-36,-33,-18,-31,-30,-26,-27,35,-34,-17,35,-13,35,-16,-15,-41,-42,-40,-28,-44,-45,-43,-19,-29,-32,35,35,35,35,35,35,35,-6,35,35,35,-38,-39,-37,35,35,-20,35,35,]),'$end':([1,2,4,5,7,9,11,12,13,14,15,16,19,24,40,41,42,43,44,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,73,],[-14,-35,0,-36,-33,-18,-31,-30,-26,-27,-1,-34,-17,-13,-16,-15,-41,-42,-40,-28,-44,-45,-43,-19,-29,-32,-12,-7,-8,-11,-9,-10,-2,-6,-5,-3,-4,-38,-39,-37,-20,]),'FUNCTION':([0,3,6,10,25,28,29,30,31,32,33,34,35,36,37,38,45,46,69,71,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'STRING':([0,3,6,10,25,28,29,30,31,32,33,34,35,36,37,38,45,46,69,71,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'DECIMAL':([1,11,12,54,],[18,-31,27,-32,]),'PERCENT':([1,],[19,]),'EQUAL':([1,2,5,7,9,11,12,13,14,15,16,19,22,24,26,40,41,42,43,44,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,],[-14,-35,-36,-33,-18,-31,-30,-26,-27,31,-34,-17,31,-13,31,-16,-15,-41,-42,-40,-28,-44,-45,-43,-19,-29,-32,-12,-7,-8,-11,-9,-10,-2,-6,-5,-3,-4,-38,-39,-37,31,31,-20,31,31,]),'LPAREN':([0,3,6,8,10,25,28,29,30,31,32,33,34,35,36,37,38,45,46,69,71,],[10,10,10,25,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'VARIABLE':([0,3,6,10,25,27,28,29,30,31,32,33,34,35,36,37,38,45,46,69,71,],[11,11,11,11,11,54,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'GREATER':([1,2,5,7,9,11,12,13,14,15,16,19,22,24,26,40,41,42,43,44,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,],[-14,-35,-36,-33,-18,-31,-30,-26,-27,29,-34,-17,29,-13,29,-16,-15,-41,-42,-40,-28,-44,-45,-43,-19,-29,-32,29,-7,-8,29,29,29,-2,-6,-5,-3,-4,-38,-39,-37,29,29,-20,29,29,]),'XLERROR':([0,3,6,10,25,28,29,30,31,32,33,34,35,36,37,38,45,46,69,71,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'LESSEQ':([1,2,5,7,9,11,12,13,14,15,16,19,22,24,26,40,41,42,43,44,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,],[-14,-35,-36,-33,-18,-31,-30,-26,-27,33,-34,-17,33,-13,33,-16,-15,-41,-42,-40,-28,-44,-45,-43,-19,-29,-32,-12,-7,-8,33,-9,-10,-2,-6,-5,-3,-4,-38,-39,-37,33,33,-20,33,33,]),'RBRACKET':([1,2,5,7,9,11,12,13,14,16,19,21,22,24,40,41,42,43,44,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,],[-14,-35,-36,-33,-18,-31,-30,-26,-27,-34,-17,47,-21,-13,-16,-15,-41,-42,-40,-28,-44,-45,-43,-19,-29,-32,-12,-7,-8,-11,-9,-10,-2,-6,-5,-3,-4,-38,-39,-37,-25,-22,-20,-24,-23,]),'COMMA':([1,2,5,7,9,11,12,13,14,16,19,21,22,24,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,],[-14,-35,-36,-33,-18,-31,-30,-26,-27,-34,-17,46,-21,-13,-16,-15,-41,-42,-40,71,-28,-44,-45,-43,-19,46,-29,-32,-12,-7,-8,-11,-9,-10,-2,-6,-5,-3,-4,-38,-39,-37,-25,-22,-20,-24,-23,]),'DIV':([1,2,5,7,9,11,12,13,14,15,16,19,22,24,26,40,41,42,43,44,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,],[-14,-35,-36,-33,-18,-31,-30,-26,-27,36,-34,-17,36,-13,36,-16,-15,-41,-42,-40,-28,-44,-45,-43,-19,-29,-32,36,36,36,36,36,36,36,-6,-5,36,-4,-38,-39,-37,36,36,-20,36,36,]),'ABSOLUTE_CELL':([0,3,6,10,20,23,25,28,29,30,31,32,33,34,35,36,37,38,39,45,46,69,71,],[16,16,16,16,44,50,16,16,16,16,16,16,16,16,16,16,16,16,68,16,16,16,16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'variable_sequence':([0,3,6,10,25,28,29,30,31,32,33,34,35,36,37,38,45,46,69,71,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'cell':([0,3,6,10,25,28,29,30,31,32,33,34,35,36,37,38,45,46,69,71,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'expseq':([3,25,],[21,52,]),'expressions':([0,],[4,]),'expression':([0,3,6,10,25,28,29,30,31,32,33,34,35,36,37,38,45,46,69,71,],[15,22,24,26,22,55,56,57,58,59,60,61,62,63,64,65,70,72,74,75,]),'array':([0,3,6,10,25,28,29,30,31,32,33,34,35,36,37,38,45,46,69,71,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expressions","S'",1,None,None,None),
  ('expressions -> expression','expressions',1,'p_expressions','parser.py',70),
  ('expression -> expression PLUS expression','expression',3,'p_expression_arithmetic_operator','parser.py',75),
  ('expression -> expression MINUS expression','expression',3,'p_expression_arithmetic_operator','parser.py',76),
  ('expression -> expression MULT expression','expression',3,'p_expression_arithmetic_operator','parser.py',77),
  ('expression -> expression DIV expression','expression',3,'p_expression_arithmetic_operator','parser.py',78),
  ('expression -> expression AMP expression','expression',3,'p_expression_arithmetic_operator','parser.py',79),
  ('expression -> expression GREATER expression','expression',3,'p_expression_logical_operator','parser.py',101),
  ('expression -> expression LESS expression','expression',3,'p_expression_logical_operator','parser.py',102),
  ('expression -> expression GREATEREQ expression','expression',3,'p_expression_logical_operator','parser.py',103),
  ('expression -> expression LESSEQ expression','expression',3,'p_expression_logical_operator','parser.py',104),
  ('expression -> expression EQUAL expression','expression',3,'p_expression_logical_operator','parser.py',105),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_logical_operator','parser.py',106),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','parser.py',123),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',128),
  ('expression -> NUMBER DECIMAL NUMBER','expression',3,'p_expression_number','parser.py',129),
  ('expression -> NUMBER CARET NUMBER','expression',3,'p_expression_number','parser.py',130),
  ('expression -> NUMBER PERCENT','expression',2,'p_expression_number','parser.py',131),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',144),
  ('expression -> FUNCTION LPAREN RPAREN','expression',3,'p_expression_function','parser.py',150),
  ('expression -> FUNCTION LPAREN expseq RPAREN','expression',4,'p_expression_wargs','parser.py',156),
  ('expseq -> expression','expseq',1,'p_expression_expseq','parser.py',162),
  ('expseq -> expseq COMMA expression','expseq',3,'p_expression_expseq','parser.py',163),
  ('expseq -> expseq COMMA COMMA expression','expseq',4,'p_expression_expseq','parser.py',164),
  ('expseq -> expseq SEMICOLON SEMICOLON expression','expseq',4,'p_expression_expseq','parser.py',165),
  ('expseq -> expseq SEMICOLON expression','expseq',3,'p_expression_expseq','parser.py',166),
  ('expression -> XLERROR','expression',1,'p_xlerror','parser.py',178),
  ('expression -> array','expression',1,'p_expression_array','parser.py',184),
  ('array -> LBRACKET expseq RBRACKET','array',3,'p_array','parser.py',190),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','parser.py',196),
  ('expression -> variable_sequence','expression',1,'p_expression_varseq','parser.py',202),
  ('variable_sequence -> VARIABLE','variable_sequence',1,'p_variable','parser.py',208),
  ('variable_sequence -> variable_sequence DECIMAL VARIABLE','variable_sequence',3,'p_variable_seq','parser.py',214),
  ('expression -> cell','expression',1,'p_expression_cell','parser.py',221),
  ('cell -> ABSOLUTE_CELL','cell',1,'p_cell','parser.py',227),
  ('cell -> RELATIVE_CELL','cell',1,'p_cell','parser.py',228),
  ('cell -> MIXED_CELL','cell',1,'p_cell','parser.py',229),
  ('cell -> ABSOLUTE_CELL COLON ABSOLUTE_CELL','cell',3,'p_cell','parser.py',230),
  ('cell -> ABSOLUTE_CELL COLON RELATIVE_CELL','cell',3,'p_cell','parser.py',231),
  ('cell -> ABSOLUTE_CELL COLON MIXED_CELL','cell',3,'p_cell','parser.py',232),
  ('cell -> RELATIVE_CELL COLON ABSOLUTE_CELL','cell',3,'p_cell','parser.py',233),
  ('cell -> RELATIVE_CELL COLON RELATIVE_CELL','cell',3,'p_cell','parser.py',234),
  ('cell -> RELATIVE_CELL COLON MIXED_CELL','cell',3,'p_cell','parser.py',235),
  ('cell -> MIXED_CELL COLON ABSOLUTE_CELL','cell',3,'p_cell','parser.py',236),
  ('cell -> MIXED_CELL COLON RELATIVE_CELL','cell',3,'p_cell','parser.py',237),
  ('cell -> MIXED_CELL COLON MIXED_CELL','cell',3,'p_cell','parser.py',238),
]
