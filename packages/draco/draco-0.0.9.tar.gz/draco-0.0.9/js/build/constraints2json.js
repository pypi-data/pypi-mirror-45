export default function constraints2json(constraintsAsp, weightsAsp) {
    const constraints = constraintsAsp.match(CONSTRAINT_MATCH);
    if (!constraints) {
        throw Error('invalid constraints');
    }
    const result = constraints.map((s) => {
        const doc = getDoc(s);
        const asp = getAsp(s);
        return {
            ...doc,
            ...asp,
        };
    });
    if (weightsAsp) {
        const weights = weightsAsp.match(WEIGHTS_MATCH);
        const weightMap = getWeightMap(weights);
        if (!weights) {
            throw Error('invalid weights');
        }
        for (const constraint of result) {
            const name = constraint.name;
            constraint.weight = weightMap[name];
        }
    }
    return result;
}
function getDoc(s) {
    const docMatch = s.match(DOC_MATCH);
    if (docMatch) {
        const docString = docMatch[0];
        const descriptionParts = DESCRIPTION_EXTRACT.exec(docString);
        if (descriptionParts) {
            return {
                description: descriptionParts[1],
            };
        }
    }
    return null;
}
function getAsp(s) {
    const aspMatch = s.match(ASP_MATCH);
    if (aspMatch) {
        const asp = aspMatch.join('\n');
        const typeExtract = TYPE_EXTRACT.exec(asp);
        if (!typeExtract) {
            throw Error(`invalid asp: ${asp}`);
        }
        const type = typeExtract[1];
        const nameExtract = NAME_EXTRACT.exec(asp);
        if (!nameExtract) {
            throw Error(`invalid asp: ${asp}`);
        }
        const name = nameExtract[1];
        return {
            type,
            name,
            asp,
        };
    }
    return null;
}
function getWeightMap(weights) {
    const map = {};
    for (const weight of weights) {
        const nameExtract = WEIGHT_NAME_EXTRACT.exec(weight);
        if (!nameExtract) {
            throw Error(`invalid weight: ${weight}`);
        }
        const name = nameExtract[1];
        const valueExtract = WEIGHT_VALUE_EXTRACT.exec(weight);
        if (!valueExtract) {
            throw Error(`invalid weight: ${weight}`);
        }
        const value = +valueExtract[1];
        map[name] = value;
    }
    return map;
}
const CONSTRAINT_MATCH = /%\s*@constraint(?:(.+)\n)+/g;
const DOC_MATCH = /(%.*\n)+/g;
const DESCRIPTION_EXTRACT = /@constraint\s+(.*)/;
const ASP_MATCH = /^[^%].*/gm;
const TYPE_EXTRACT = /(\w+)\(/;
const NAME_EXTRACT = /\((\w+),?.*?\)/;
const WEIGHTS_MATCH = /#const.*/g;
const WEIGHT_NAME_EXTRACT = /#const\s+(\w+?)_weight/;
const WEIGHT_VALUE_EXTRACT = /=\s*(\d+)/;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RyYWludHMyanNvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9jb25zdHJhaW50czJqc29uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWNBLE1BQU0sQ0FBQyxPQUFPLFVBQVUsZ0JBQWdCLENBQUMsY0FBc0IsRUFBRSxVQUFtQjtJQUNsRixNQUFNLFdBQVcsR0FBRyxjQUFjLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDM0QsSUFBSSxDQUFDLFdBQVcsRUFBRTtRQUNoQixNQUFNLEtBQUssQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0tBQ3BDO0lBRUQsTUFBTSxNQUFNLEdBQUcsV0FBVyxDQUFDLEdBQUcsQ0FDNUIsQ0FBQyxDQUFTLEVBQWMsRUFBRTtRQUN4QixNQUFNLEdBQUcsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdEIsTUFBTSxHQUFHLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3RCLE9BQU87WUFDTCxHQUFHLEdBQUc7WUFDTixHQUFHLEdBQUc7U0FDUCxDQUFDO0lBQ0osQ0FBQyxDQUNGLENBQUM7SUFFRixJQUFJLFVBQVUsRUFBRTtRQUNkLE1BQU0sT0FBTyxHQUFHLFVBQVUsQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDaEQsTUFBTSxTQUFTLEdBQUcsWUFBWSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRXhDLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDWixNQUFNLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1NBQ2hDO1FBRUQsS0FBSyxNQUFNLFVBQVUsSUFBSSxNQUFNLEVBQUU7WUFDL0IsTUFBTSxJQUFJLEdBQUcsVUFBVSxDQUFDLElBQUksQ0FBQztZQUM3QixVQUFVLENBQUMsTUFBTSxHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUNyQztLQUNGO0lBRUQsT0FBTyxNQUFNLENBQUM7QUFDaEIsQ0FBQztBQUVELFNBQVMsTUFB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