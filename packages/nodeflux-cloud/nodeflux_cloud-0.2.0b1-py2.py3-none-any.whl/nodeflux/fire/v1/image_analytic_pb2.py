# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: nodeflux/fire/v1/image_analytic.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from google.rpc import status_pb2 as google_dot_rpc_dot_status__pb2
from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from nodeflux.analytics.v1 import analytic_pb2 as nodeflux_dot_analytics_dot_v1_dot_analytic__pb2
from nodeflux.analytics.v1 import face_demography_pb2 as nodeflux_dot_analytics_dot_v1_dot_face__demography__pb2
from nodeflux.analytics.v1 import face_detection_pb2 as nodeflux_dot_analytics_dot_v1_dot_face__detection__pb2
from nodeflux.analytics.v1 import face_recognition_pb2 as nodeflux_dot_analytics_dot_v1_dot_face__recognition__pb2
from nodeflux.analytics.v1 import vehicle_detection_pb2 as nodeflux_dot_analytics_dot_v1_dot_vehicle__detection__pb2
from nodeflux.analytics.v1 import license_plate_recognition_pb2 as nodeflux_dot_analytics_dot_v1_dot_license__plate__recognition__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='nodeflux/fire/v1/image_analytic.proto',
  package='nodeflux.fire.v1',
  syntax='proto3',
  serialized_options=_b('\n\023io.nodeflux.fire.v1B\022ImageAnalyticProtoP\001Z/gitlab.com/nodefluxio/nodefluxapis/fire/v1;fire\370\001\001'),
  serialized_pb=_b('\n%nodeflux/fire/v1/image_analytic.proto\x12\x10nodeflux.fire.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/rpc/status.proto\x1a\x19google/protobuf/any.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a$nodeflux/analytics/v1/analytic.proto\x1a+nodeflux/analytics/v1/face_demography.proto\x1a*nodeflux/analytics/v1/face_detection.proto\x1a,nodeflux/analytics/v1/face_recognition.proto\x1a-nodeflux/analytics/v1/vehicle_detection.proto\x1a\x35nodeflux/analytics/v1/license_plate_recognition.proto\"U\n\x19\x42\x61tchImageAnalyticRequest\x12\x38\n\x08requests\x18\x01 \x03(\x0b\x32&.nodeflux.fire.v1.ImageAnalyticRequest\"r\n\x14ImageAnalyticRequest\x12&\n\x05image\x18\x01 \x01(\x0b\x32\x17.nodeflux.fire.v1.Image\x12\x32\n\tanalytics\x18\x02 \x03(\x0b\x32\x1f.nodeflux.analytics.v1.Analytic\"U\n\x05Image\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x0c\x12\x0b\n\x03url\x18\x02 \x01(\t\x12\x31\n\x08metadata\x18\x03 \x01(\x0b\x32\x1f.nodeflux.fire.v1.ImageMetadata\"\xaa\x01\n\rImageMetadata\x12;\n\x06labels\x18\x01 \x03(\x0b\x32+.nodeflux.fire.v1.ImageMetadata.LabelsEntry\x12-\n\ttimestamp\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"X\n\x1a\x42\x61tchImageAnalyticResponse\x12:\n\tresponses\x18\x01 \x03(\x0b\x32\'.nodeflux.fire.v1.ImageAnalyticResponse\"\xc2\x03\n\x15ImageAnalyticResponse\x12\"\n\x06status\x18\x01 \x01(\x0b\x32\x12.google.rpc.Status\x12(\n\nextensions\x18\x02 \x03(\x0b\x32\x14.google.protobuf.Any\x12=\n\x0f\x66\x61\x63\x65_detections\x18\x03 \x03(\x0b\x32$.nodeflux.analytics.v1.FaceDetection\x12\x41\n\x11\x66\x61\x63\x65_recognitions\x18\x04 \x03(\x0b\x32&.nodeflux.analytics.v1.FaceRecognition\x12@\n\x11\x66\x61\x63\x65_demographics\x18\x05 \x03(\x0b\x32%.nodeflux.analytics.v1.FaceDemography\x12\x43\n\x12vehicle_detections\x18\x06 \x03(\x0b\x32\'.nodeflux.analytics.v1.VehicleDetection\x12R\n\x1alicense_plate_recognitions\x18\x07 \x03(\x0b\x32..nodeflux.analytics.v1.LicensePlateRecognition2\xa0\x01\n\rImageAnalytic\x12\x8e\x01\n\x12\x42\x61tchImageAnalytic\x12+.nodeflux.fire.v1.BatchImageAnalyticRequest\x1a,.nodeflux.fire.v1.BatchImageAnalyticResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\"\x12/v1/analytic/image:\x01*B_\n\x13io.nodeflux.fire.v1B\x12ImageAnalyticProtoP\x01Z/gitlab.com/nodefluxio/nodefluxapis/fire/v1;fire\xf8\x01\x01\x62\x06proto3')
  ,
  dependencies=[google_dot_api_dot_annotations__pb2.DESCRIPTOR,google_dot_rpc_dot_status__pb2.DESCRIPTOR,google_dot_protobuf_dot_any__pb2.DESCRIPTOR,google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,nodeflux_dot_analytics_dot_v1_dot_analytic__pb2.DESCRIPTOR,nodeflux_dot_analytics_dot_v1_dot_face__demography__pb2.DESCRIPTOR,nodeflux_dot_analytics_dot_v1_dot_face__detection__pb2.DESCRIPTOR,nodeflux_dot_analytics_dot_v1_dot_face__recognition__pb2.DESCRIPTOR,nodeflux_dot_analytics_dot_v1_dot_vehicle__detection__pb2.DESCRIPTOR,nodeflux_dot_analytics_dot_v1_dot_license__plate__recognition__pb2.DESCRIPTOR,])




_BATCHIMAGEANALYTICREQUEST = _descriptor.Descriptor(
  name='BatchImageAnalyticRequest',
  full_name='nodeflux.fire.v1.BatchImageAnalyticRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='requests', full_name='nodeflux.fire.v1.BatchImageAnalyticRequest.requests', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=449,
  serialized_end=534,
)


_IMAGEANALYTICREQUEST = _descriptor.Descriptor(
  name='ImageAnalyticRequest',
  full_name='nodeflux.fire.v1.ImageAnalyticRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='image', full_name='nodeflux.fire.v1.ImageAnalyticRequest.image', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='analytics', full_name='nodeflux.fire.v1.ImageAnalyticRequest.analytics', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=536,
  serialized_end=650,
)


_IMAGE = _descriptor.Descriptor(
  name='Image',
  full_name='nodeflux.fire.v1.Image',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='nodeflux.fire.v1.Image.data', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='url', full_name='nodeflux.fire.v1.Image.url', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='metadata', full_name='nodeflux.fire.v1.Image.metadata', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=652,
  serialized_end=737,
)


_IMAGEMETADATA_LABELSENTRY = _descriptor.Descriptor(
  name='LabelsEntry',
  full_name='nodeflux.fire.v1.ImageMetadata.LabelsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='nodeflux.fire.v1.ImageMetadata.LabelsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='nodeflux.fire.v1.ImageMetadata.LabelsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=865,
  serialized_end=910,
)

_IMAGEMETADATA = _descriptor.Descriptor(
  name='ImageMetadata',
  full_name='nodeflux.fire.v1.ImageMetadata',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='labels', full_name='nodeflux.fire.v1.ImageMetadata.labels', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='nodeflux.fire.v1.ImageMetadata.timestamp', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_IMAGEMETADATA_LABELSENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=740,
  serialized_end=910,
)


_BATCHIMAGEANALYTICRESPONSE = _descriptor.Descriptor(
  name='BatchImageAnalyticResponse',
  full_name='nodeflux.fire.v1.BatchImageAnalyticResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='responses', full_name='nodeflux.fire.v1.BatchImageAnalyticResponse.responses', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=912,
  serialized_end=1000,
)


_IMAGEANALYTICRESPONSE = _descriptor.Descriptor(
  name='ImageAnalyticResponse',
  full_name='nodeflux.fire.v1.ImageAnalyticResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='nodeflux.fire.v1.ImageAnalyticResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='extensions', full_name='nodeflux.fire.v1.ImageAnalyticResponse.extensions', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='face_detections', full_name='nodeflux.fire.v1.ImageAnalyticResponse.face_detections', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='face_recognitions', full_name='nodeflux.fire.v1.ImageAnalyticResponse.face_recognitions', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='face_demographics', full_name='nodeflux.fire.v1.ImageAnalyticResponse.face_demographics', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vehicle_detections', full_name='nodeflux.fire.v1.ImageAnalyticResponse.vehicle_detections', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='license_plate_recognitions', full_name='nodeflux.fire.v1.ImageAnalyticResponse.license_plate_recognitions', index=6,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1003,
  serialized_end=1453,
)

_BATCHIMAGEANALYTICREQUEST.fields_by_name['requests'].message_type = _IMAGEANALYTICREQUEST
_IMAGEANALYTICREQUEST.fields_by_name['image'].message_type = _IMAGE
_IMAGEANALYTICREQUEST.fields_by_name['analytics'].message_type = nodeflux_dot_analytics_dot_v1_dot_analytic__pb2._ANALYTIC
_IMAGE.fields_by_name['metadata'].message_type = _IMAGEMETADATA
_IMAGEMETADATA_LABELSENTRY.containing_type = _IMAGEMETADATA
_IMAGEMETADATA.fields_by_name['labels'].message_type = _IMAGEMETADATA_LABELSENTRY
_IMAGEMETADATA.fields_by_name['timestamp'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_BATCHIMAGEANALYTICRESPONSE.fields_by_name['responses'].message_type = _IMAGEANALYTICRESPONSE
_IMAGEANALYTICRESPONSE.fields_by_name['status'].message_type = google_dot_rpc_dot_status__pb2._STATUS
_IMAGEANALYTICRESPONSE.fields_by_name['extensions'].message_type = google_dot_protobuf_dot_any__pb2._ANY
_IMAGEANALYTICRESPONSE.fields_by_name['face_detections'].message_type = nodeflux_dot_analytics_dot_v1_dot_face__detection__pb2._FACEDETECTION
_IMAGEANALYTICRESPONSE.fields_by_name['face_recognitions'].message_type = nodeflux_dot_analytics_dot_v1_dot_face__recognition__pb2._FACERECOGNITION
_IMAGEANALYTICRESPONSE.fields_by_name['face_demographics'].message_type = nodeflux_dot_analytics_dot_v1_dot_face__demography__pb2._FACEDEMOGRAPHY
_IMAGEANALYTICRESPONSE.fields_by_name['vehicle_detections'].message_type = nodeflux_dot_analytics_dot_v1_dot_vehicle__detection__pb2._VEHICLEDETECTION
_IMAGEANALYTICRESPONSE.fields_by_name['license_plate_recognitions'].message_type = nodeflux_dot_analytics_dot_v1_dot_license__plate__recognition__pb2._LICENSEPLATERECOGNITION
DESCRIPTOR.message_types_by_name['BatchImageAnalyticRequest'] = _BATCHIMAGEANALYTICREQUEST
DESCRIPTOR.message_types_by_name['ImageAnalyticRequest'] = _IMAGEANALYTICREQUEST
DESCRIPTOR.message_types_by_name['Image'] = _IMAGE
DESCRIPTOR.message_types_by_name['ImageMetadata'] = _IMAGEMETADATA
DESCRIPTOR.message_types_by_name['BatchImageAnalyticResponse'] = _BATCHIMAGEANALYTICRESPONSE
DESCRIPTOR.message_types_by_name['ImageAnalyticResponse'] = _IMAGEANALYTICRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

BatchImageAnalyticRequest = _reflection.GeneratedProtocolMessageType('BatchImageAnalyticRequest', (_message.Message,), dict(
  DESCRIPTOR = _BATCHIMAGEANALYTICREQUEST,
  __module__ = 'nodeflux.fire.v1.image_analytic_pb2'
  # @@protoc_insertion_point(class_scope:nodeflux.fire.v1.BatchImageAnalyticRequest)
  ))
_sym_db.RegisterMessage(BatchImageAnalyticRequest)

ImageAnalyticRequest = _reflection.GeneratedProtocolMessageType('ImageAnalyticRequest', (_message.Message,), dict(
  DESCRIPTOR = _IMAGEANALYTICREQUEST,
  __module__ = 'nodeflux.fire.v1.image_analytic_pb2'
  # @@protoc_insertion_point(class_scope:nodeflux.fire.v1.ImageAnalyticRequest)
  ))
_sym_db.RegisterMessage(ImageAnalyticRequest)

Image = _reflection.GeneratedProtocolMessageType('Image', (_message.Message,), dict(
  DESCRIPTOR = _IMAGE,
  __module__ = 'nodeflux.fire.v1.image_analytic_pb2'
  # @@protoc_insertion_point(class_scope:nodeflux.fire.v1.Image)
  ))
_sym_db.RegisterMessage(Image)

ImageMetadata = _reflection.GeneratedProtocolMessageType('ImageMetadata', (_message.Message,), dict(

  LabelsEntry = _reflection.GeneratedProtocolMessageType('LabelsEntry', (_message.Message,), dict(
    DESCRIPTOR = _IMAGEMETADATA_LABELSENTRY,
    __module__ = 'nodeflux.fire.v1.image_analytic_pb2'
    # @@protoc_insertion_point(class_scope:nodeflux.fire.v1.ImageMetadata.LabelsEntry)
    ))
  ,
  DESCRIPTOR = _IMAGEMETADATA,
  __module__ = 'nodeflux.fire.v1.image_analytic_pb2'
  # @@protoc_insertion_point(class_scope:nodeflux.fire.v1.ImageMetadata)
  ))
_sym_db.RegisterMessage(ImageMetadata)
_sym_db.RegisterMessage(ImageMetadata.LabelsEntry)

BatchImageAnalyticResponse = _reflection.GeneratedProtocolMessageType('BatchImageAnalyticResponse', (_message.Message,), dict(
  DESCRIPTOR = _BATCHIMAGEANALYTICRESPONSE,
  __module__ = 'nodeflux.fire.v1.image_analytic_pb2'
  # @@protoc_insertion_point(class_scope:nodeflux.fire.v1.BatchImageAnalyticResponse)
  ))
_sym_db.RegisterMessage(BatchImageAnalyticResponse)

ImageAnalyticResponse = _reflection.GeneratedProtocolMessageType('ImageAnalyticResponse', (_message.Message,), dict(
  DESCRIPTOR = _IMAGEANALYTICRESPONSE,
  __module__ = 'nodeflux.fire.v1.image_analytic_pb2'
  # @@protoc_insertion_point(class_scope:nodeflux.fire.v1.ImageAnalyticResponse)
  ))
_sym_db.RegisterMessage(ImageAnalyticResponse)


DESCRIPTOR._options = None
_IMAGEMETADATA_LABELSENTRY._options = None

_IMAGEANALYTIC = _descriptor.ServiceDescriptor(
  name='ImageAnalytic',
  full_name='nodeflux.fire.v1.ImageAnalytic',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=1456,
  serialized_end=1616,
  methods=[
  _descriptor.MethodDescriptor(
    name='BatchImageAnalytic',
    full_name='nodeflux.fire.v1.ImageAnalytic.BatchImageAnalytic',
    index=0,
    containing_service=None,
    input_type=_BATCHIMAGEANALYTICREQUEST,
    output_type=_BATCHIMAGEANALYTICRESPONSE,
    serialized_options=_b('\202\323\344\223\002\027\"\022/v1/analytic/image:\001*'),
  ),
])
_sym_db.RegisterServiceDescriptor(_IMAGEANALYTIC)

DESCRIPTOR.services_by_name['ImageAnalytic'] = _IMAGEANALYTIC

# @@protoc_insertion_point(module_scope)
