#!python

import os,sys
import requests

functions_list = {
  0: "printHelp",
  1: "printVersion",
  2: "printList"
}

def _arguments_parser(arguments):
  actions_list = {
    "help": 0,
    "version": 1,
    "list": 2
  }
  try:
    _function_name=actions_list[arguments[0]]
  except:
    print("E! Not supported action. Try to use help.")
    sys.exit(1)
  return _function_name

def checkCredentials(function):

  print("PlatOps CLI")

  PLATOPS_KEY = os.environ['PLATOPS_KEY']
  if PLATOPS_KEY:

    def arguments_reader():
      if len(sys.argv) == 1:
        print("I! No actions were specified. Closed.")
        sys.exit(0)
      else:
        function_id=_arguments_parser(sys.argv[1::])
      return getattr(function(PLATOPS_KEY), functions_list[function_id])()

    return arguments_reader()

  else:

    print("E! No PLATOPS_KEY specified.\n")
    print("E! Please run `export PLATOPS_KEY=key`, where key is your API key.")
    sys.exit(1)


@checkCredentials
class StartUp(object):
  
  def __init__(self, PLATOPS_KEY):
    self.PLATOPS_KEY = PLATOPS_KEY

  def printVersion(self):
    print("Version: 0.0.1")

  def printHelp(self):
    print("help function")

  def printList(self):
    print("list function")
