Metadata-Version: 2.0
Name: deployfish
Version: 0.28.0
Summary: AWS ECS related deployment tools
Home-page: https://github.com/caltechads/deployfish
Author: Caltech IMSS ADS
Author-email: imss-ads-staff@caltech.edu
License: UNKNOWN
Keywords: aws,ecs,docker,devops
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Requires-Dist: PyYAML (==3.12)
Requires-Dist: boto3 (>=1.7.55)
Requires-Dist: botocore (>=1.10.55)
Requires-Dist: click (>=6.7)
Requires-Dist: requests (>=2.18.4)
Requires-Dist: tzlocal (>=1.4)

Introduction
============

.. include:: quickintro.rst

To use ``deployfish``, you

* Install ``deployfish``
* Define your tasks and services in ``deployfish.yml``
* Use ``deploy`` to start managing your tasks and services

A simple ``deployfish.yml`` looks like this::

    services:
      - name: my-service
        environment: prod
        cluster: my-cluster
        count: 2
        load_balancer:
          service_role_arn: arn:aws:iam::123142123547:role/ecsServiceRole
          load_balancer_name: my-service-elb
          container_name: my-service
          container_port: 80
        family: my-service
        network_mode: bridge
        task_role_arn: arn:aws:iam::123142123547:role/myTaskRole
        containers:
          - name: my-service
            image: 123142123547.dkr.ecr.us-west-2.amazonaws.com/my-service:0.0.1
            cpu: 128
            memory: 256
            ports:
              - "80"
            environment:
              - ENVIRONMENT=prod
              - ANOTHER_ENV_VAR=value
              - THIRD_ENV_VAR=value

See the ``examples/`` folder in this repository for example ``deployfish.yml``
files.


