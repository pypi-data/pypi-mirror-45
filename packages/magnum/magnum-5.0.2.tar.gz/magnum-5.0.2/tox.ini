[tox]
minversion = 1.6
envlist = py35,py27,pep8
skipsdist = True

[testenv]
usedevelop = True
install_command =
  pip install -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=stable/pike} -U {opts} {packages}
whitelist_externals = bash
                      find
                      rm
setenv =
   VIRTUAL_ENV={envdir}
   PYTHONWARNINGS=default::DeprecationWarning
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
passenv = TEMPEST_* OS_TEST_*
commands =
  find . -type f -name "*.py[c|o]" -delete
  rm -f .testrepository/times.dbm
  bash tools/pretty_tox.sh '{posargs}'

[testenv:debug]
commands = oslo_debug_helper -t magnum/tests/unit {posargs}

[testenv:debug-py27]
basepython = python2.7
commands = oslo_debug_helper -t magnum/tests/unit {posargs}

[testenv:debug-py35]
basepython = python3.5
commands = oslo_debug_helper -t magnum/tests/unit {posargs}

[testenv:functional-api]
sitepackages = True
setenv = {[testenv]setenv}
         OS_TEST_PATH=./magnum/tests/functional/api
         OS_TEST_TIMEOUT=7200
deps =
  {[testenv]deps}
commands =
  find . -type f -name "*.py[c|o]" -delete
  bash tools/pretty_tox.sh '{posargs}'

[testenv:functional-k8s]
sitepackages = True
setenv = {[testenv]setenv}
         OS_TEST_PATH=./magnum/tests/functional/k8s
         OS_TEST_TIMEOUT=7200
deps =
  {[testenv]deps}
commands =
  find . -type f -name "*.py[c|o]" -delete
  bash tools/pretty_tox.sh '{posargs}'

[testenv:functional-k8s-ironic]
sitepackages = True
setenv = {[testenv]setenv}
         OS_TEST_PATH=./magnum/tests/functional/k8s_ironic
         OS_TEST_TIMEOUT=7200
deps =
  {[testenv]deps}
commands =
  find . -type f -name "*.py[c|o]" -delete
  bash tools/pretty_tox.sh '{posargs}'

[testenv:functional-k8s-coreos]
sitepackages = True
setenv = {[testenv]setenv}
         OS_TEST_PATH=./magnum/tests/functional/k8s_coreos
         OS_TEST_TIMEOUT=7200
deps =
  {[testenv]deps}
commands =
  find . -type f -name "*.py[c|o]" -delete
  bash tools/pretty_tox.sh '{posargs}'

[testenv:functional-swarm]
sitepackages = True
setenv = {[testenv]setenv}
         OS_TEST_PATH=./magnum/tests/functional/swarm
         OS_TEST_TIMEOUT=7200
deps =
  {[testenv]deps}
commands =
  find . -type f -name "*.py[c|o]" -delete
  bash tools/pretty_tox.sh '{posargs}'

[testenv:functional-swarm-mode]
sitepackages = True
setenv = {[testenv]setenv}
         OS_TEST_PATH=./magnum/tests/functional/swarm_mode
         OS_TEST_TIMEOUT=7200
deps =
  {[testenv]deps}
commands =
  find . -type f -name "*.py[c|o]" -delete
  bash tools/pretty_tox.sh '{posargs}'

[testenv:functional-mesos]
sitepackages = True
setenv = {[testenv]setenv}
         OS_TEST_PATH=./magnum/tests/functional/mesos
         OS_TEST_TIMEOUT=7200
deps =
  {[testenv]deps}
commands =
  find . -type f -name "*.py[c|o]" -delete
  bash tools/pretty_tox.sh '{posargs}'

[testenv:pep8]
commands =
  doc8 -e .rst specs/ doc/source/ contrib/ CONTRIBUTING.rst HACKING.rst README.rst
  bash tools/flake8wrap.sh {posargs}
  bandit -r magnum -x tests -n5 -ll
  bash -c "find {toxinidir}                 \
      -not \( -type d -name .?\* -prune \)        \
      -not \( -type d -name doc -prune \)         \
      -not \( -type d -name contrib -prune \)     \
      -type f                                     \
      -name \*.sh                                 \
      -print0 | xargs -0 bashate -v -iE006,E010,E042 -eE005"

[testenv:venv]
commands = {posargs}

[testenv:bandit]
deps = -r{toxinidir}/test-requirements.txt
commands = bandit -r magnum -x tests -n5 -ll

[testenv:cover]
commands = {toxinidir}/tools/cover.sh {posargs}

[testenv:docs]
commands =
    doc8 -e .rst specs/ doc/source/ contrib/ CONTRIBUTING.rst HACKING.rst README.rst
    python setup.py build_sphinx

[testenv:genconfig]
commands =
    oslo-config-generator --config-file etc/magnum/magnum-config-generator.conf

[flake8]
# H106 Donâ€™t put vim configuration in source files
# H203 Use assertIs(Not)None to check for None
# H904 Delay string interpolations at logging calls
enable-extensions = H106,H203,H904
exclude = .venv,.git,.tox,dist,*lib/python*,*egg,build,tools,releasenotes

[hacking]
local-check-factory = magnum.hacking.checks.factory

[testenv:pip-missing-reqs]
# do not install test-requirements as that will pollute the virtualenv for
# determining missing packages
# this also means that pip-missing-reqs must be installed separately, outside
# of the requirements.txt files
deps = pip_missing_reqs
       -rrequirements.txt
commands=pip-missing-reqs -d --ignore-file=magnum/tests/* magnum

[testenv:releasenotes]
commands =
  rm -rf releasenotes/build
  sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:install-guide]
commands = sphinx-build -a -E -W -d install-guide/build/doctrees -b html install-guide/source install-guide/build/html

[testenv:api-ref]
commands =
  rm -rf api-ref/build
  sphinx-build -W -b html -d api-ref/build/doctrees api-ref/source api-ref/build/html
