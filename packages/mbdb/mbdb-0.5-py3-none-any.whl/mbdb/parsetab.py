
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CREATE DATABASE DELETE FROM IDENTIFIER INSERT INT INTO NUMBER OPERATOR SELECT SET SHOW STR STRING TABLE UPDATE VALUES WHEREstatement : UPDATE identifier SET update_values WHERE conditionupdate_values : identifier \'=\' value\n\t\t\t\t\t | update_values \',\' identifier \'=\' valuestatement : DELETE FROM identifier WHERE conditioncondition : identifier operator valueoperator : OPERATORstatement : SELECT s_columns FROM identifier\n\t\t\t\t | SELECT s_columns FROM identifier WHERE conditions_columns : identifier\n\t\t\t\t | s_columns \',\' identifierstatement : INSERT INTO identifier VALUES \'(\' values \')\' values : value\n\t\t\t  | values \',\' valuestatement : CREATE TABLE identifier columnsstatement : SHOW CREATE TABLE identifierstatement : CREATE DATABASE identifiercolumns : \'(\' list \')\'list : identifier type\n\t\t\t| list "," identifier typeidentifier : IDENTIFIERtype : NUMBER\n\t\t\t| STRINGvalue : INT\n\t\t\t | STR'
    
_lr_action_items = {'UPDATE':([0,],[2,]),'DELETE':([0,],[3,]),'SELECT':([0,],[4,]),'INSERT':([0,],[5,]),'CREATE':([0,7,],[6,16,]),'SHOW':([0,],[7,]),'$end':([1,9,23,28,31,33,38,44,45,46,50,53,59,60,],[0,-20,-16,-7,-14,-15,-4,-23,-24,-1,-8,-17,-5,-11,]),'IDENTIFIER':([2,4,10,13,14,15,17,19,20,24,27,32,35,36,39,54,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'FROM':([3,9,11,12,29,],[10,-20,19,-9,-10,]),'INTO':([5,],[13,]),'TABLE':([6,16,],[14,24,]),'DATABASE':([6,],[15,]),'SET':([8,9,],[17,-20,]),',':([9,11,12,26,29,41,43,44,45,51,52,55,56,57,63,64,65,],[-20,20,-9,36,-10,54,-2,-23,-24,61,-12,-18,-21,-22,-3,-13,-19,]),'WHERE':([9,18,26,28,43,44,45,63,],[-20,27,35,39,-2,-23,-24,-3,]),'VALUES':([9,21,],[-20,30,]),'(':([9,22,30,],[-20,32,40,]),'=':([9,25,47,],[-20,34,58,]),'OPERATOR':([9,37,],[-20,49,]),'NUMBER':([9,42,62,],[-20,56,56,]),'STRING':([9,42,62,],[-20,57,57,]),'INT':([34,40,48,49,58,61,],[44,44,44,-6,44,44,]),'STR':([34,40,48,49,58,61,],[45,45,45,-6,45,45,]),')':([41,44,45,51,52,55,56,57,64,65,],[53,-23,-24,60,-12,-18,-21,-22,-13,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'identifier':([2,4,10,13,14,15,17,19,20,24,27,32,35,36,39,54,],[8,12,18,21,22,23,25,28,29,33,37,42,37,47,37,62,]),'s_columns':([4,],[11,]),'update_values':([17,],[26,]),'columns':([22,],[31,]),'condition':([27,35,39,],[38,46,50,]),'list':([32,],[41,]),'value':([34,40,48,58,61,],[43,52,59,63,64,]),'operator':([37,],[48,]),'values':([40,],[51,]),'type':([42,62,],[55,65,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> UPDATE identifier SET update_values WHERE condition','statement',6,'p_statement_update','sqlparser.py',84),
  ('update_values -> identifier = value','update_values',3,'p_update_values','sqlparser.py',90),
  ('update_values -> update_values , identifier = value','update_values',5,'p_update_values','sqlparser.py',91),
  ('statement -> DELETE FROM identifier WHERE condition','statement',5,'p_statement_delete','sqlparser.py',103),
  ('condition -> identifier operator value','condition',3,'p_condition','sqlparser.py',109),
  ('operator -> OPERATOR','operator',1,'p_operator','sqlparser.py',115),
  ('statement -> SELECT s_columns FROM identifier','statement',4,'p_statement_select','sqlparser.py',121),
  ('statement -> SELECT s_columns FROM identifier WHERE condition','statement',6,'p_statement_select','sqlparser.py',122),
  ('s_columns -> identifier','s_columns',1,'p_s_columns','sqlparser.py',128),
  ('s_columns -> s_columns , identifier','s_columns',3,'p_s_columns','sqlparser.py',129),
  ('statement -> INSERT INTO identifier VALUES ( values )','statement',7,'p_statement_insert','sqlparser.py',141),
  ('values -> value','values',1,'p_statement_values','sqlparser.py',147),
  ('values -> values , value','values',3,'p_statement_values','sqlparser.py',148),
  ('statement -> CREATE TABLE identifier columns','statement',4,'p_statement_create_table','sqlparser.py',160),
  ('statement -> SHOW CREATE TABLE identifier','statement',4,'p_statement_show_create_table','sqlparser.py',166),
  ('statement -> CREATE DATABASE identifier','statement',3,'p_statement_create_db','sqlparser.py',172),
  ('columns -> ( list )','columns',3,'p_columns','sqlparser.py',178),
  ('list -> identifier type','list',2,'p_list','sqlparser.py',183),
  ('list -> list , identifier type','list',4,'p_list','sqlparser.py',184),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','sqlparser.py',195),
  ('type -> NUMBER','type',1,'p_type','sqlparser.py',200),
  ('type -> STRING','type',1,'p_type','sqlparser.py',201),
  ('value -> INT','value',1,'p_value','sqlparser.py',206),
  ('value -> STR','value',1,'p_value','sqlparser.py',207),
]
