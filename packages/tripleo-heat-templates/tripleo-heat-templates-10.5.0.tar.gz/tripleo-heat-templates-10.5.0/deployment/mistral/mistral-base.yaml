heat_template_version: rocky

description: >
  Openstack Mistral base service. Shared for all Mistral services.

parameters:
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json

  Debug:
    default: false
    description: Set to True to enable debugging on all services.
    type: boolean
  MistralDebug:
    default: ''
    description: Set to True to enable debugging Mistral services.
    type: string
    constraints:
      - allowed_values: [ '', 'true', 'True', 'TRUE', 'false', 'False', 'FALSE']
  MistralPassword:
    description: The password for the Mistral service and db account, used by the Mistral services.
    type: string
    hidden: true
  KeystoneRegion:
    type: string
    default: 'regionOne'
    description: Keystone region for endpoint
  NotificationDriver:
    type: string
    default: 'messagingv2'
    description: Driver or drivers to handle sending notifications.
  RpcPort:
    default: 5672
    description: The network port for messaging backend
    type: number
  RpcUserName:
    default: guest
    description: The username for messaging backend
    type: string
  RpcPassword:
    description: The password for messaging backend
    type: string
    hidden: true
  RpcUseSSL:
    default: false
    description: >
        Messaging client subscriber parameter to specify
        an SSL connection to the messaging host.
    type: string
  MistralMaxMissedHeartbeats:
    type: number
    default: 15
    description: >
        The maximum amount of missed heartbeats to be allowed.
        If set to 0 then this feature is disabled. See check_interval for more
        details.
    constraints:
      - range: { min: 0 }
  MistralCheckInterval:
    type: number
    default: 20
    description: >
        How often (in seconds) action executions are checked.
        For example when check_interval is 10, check action
        executions every 10 seconds. When the checker runs it will
        transit all running action executions to error if the last
        heartbeat received is older than 10 * max_missed_heartbeats
        seconds. If set to 0 then this feature is disabled.
    constraints:
      - range: { min: 0 }
  MistralFirstHeartbeatTimeout:
    type: number
    default: 3600
    description: >
        The first heartbeat is handled differently, to provide a
        grace period in case there is no available executor to handle
        the action execution. For example when
        first_heartbeat_timeout = 3600, wait 3600 seconds before
        closing the action executions that never received a heartbeat.
    constraints:
      - range: { min: 0 }

parameter_groups:
- label: deprecated
  description: |
   The following parameters are deprecated and will be removed. They should not
   be relied on for new deployments. If you have concerns regarding deprecated
   parameters, please contact the TripleO development team on IRC or the
   OpenStack mailing list.
  parameters:
  - RpcPort
  - RpcUserName
  - RpcPassword
  - RpcUseSSL

conditions:
  service_debug_unset: {equals : [{get_param: MistralDebug}, '']}

outputs:
  role_data:
    description: Shared role data for the Mistral services.
    value:
      service_name: mistral_base
      config_settings:
        mistral::database_connection:
          make_url:
            scheme: {get_param: [EndpointMap, MysqlInternal, protocol]}
            username: mistral
            password: {get_param: MistralPassword}
            host: {get_param: [EndpointMap, MysqlInternal, host]}
            path: /mistral
            query:
              read_default_file: /etc/my.cnf.d/tripleo.cnf
              read_default_group: tripleo
        mistral::notification_driver: {get_param: NotificationDriver}
        mistral::debug:
          if:
          - service_debug_unset
          - {get_param: Debug }
          - {get_param: MistralDebug }
        mistral::rpc_response_timeout: 120
        mistral::max_missed_heartbeats: {get_param: MistralMaxMissedHeartbeats}
        mistral::check_interval: {get_param: MistralCheckInterval}
        mistral::first_heartbeat_timeout: {get_param: MistralFirstHeartbeatTimeout}
        mistral::keystone::authtoken::project_name: 'service'
        mistral::keystone::authtoken::user_domain_name: 'Default'
        mistral::keystone::authtoken::project_domain_name: 'Default'
        mistral::keystone::authtoken::password: {get_param: MistralPassword}
        mistral::keystone::authtoken::www_authenticate_uri: {get_param: [EndpointMap, KeystoneV3Internal, uri]}
        mistral::keystone::authtoken::auth_uri: {get_param: [EndpointMap, KeystoneV3Internal, uri]}
        mistral::keystone::authtoken::auth_url: {get_param: [EndpointMap, KeystoneInternal, uri_no_suffix]}
        mistral::keystone_ec2_uri:
          list_join:
          - ''
          - - {get_param: [EndpointMap, KeystoneV3Internal, uri]}
            - '/ec2tokens'
      service_config_settings:
        keystone:
          mistral::keystone::auth::tenant: 'service'
          mistral::keystone::auth::public_url: {get_param: [EndpointMap, MistralPublic, uri]}
          mistral::keystone::auth::internal_url: {get_param: [EndpointMap, MistralInternal, uri]}
          mistral::keystone::auth::admin_url: {get_param: [EndpointMap, MistralAdmin, uri]}
          mistral::keystone::auth::password: {get_param: MistralPassword}
          mistral::keystone::auth::region: {get_param: KeystoneRegion}
        mysql:
          mistral::db::mysql::user: mistral
          mistral::db::mysql::host: {get_param: [EndpointMap, MysqlInternal, host_nobrackets]}
          mistral::db::mysql::dbname: mistral
          mistral::db::mysql::password: {get_param: MistralPassword}
          mistral::db::mysql::allowed_hosts:
            - '%'
            - "%{hiera('mysql_bind_host')}"
