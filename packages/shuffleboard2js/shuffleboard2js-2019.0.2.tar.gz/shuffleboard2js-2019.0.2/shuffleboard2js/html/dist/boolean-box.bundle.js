!function(o){var e={};function r(t){if(e[t])return e[t].exports;var n=e[t]={i:t,l:!1,exports:{}};return o[t].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=o,r.c=e,r.d=function(o,e,t){r.o(o,e)||Object.defineProperty(o,e,{enumerable:!0,get:t})},r.r=function(o){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(o,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(o,"__esModule",{value:!0})},r.t=function(o,e){if(1&e&&(o=r(o)),8&e)return o;if(4&e&&"object"==typeof o&&o&&o.__esModule)return o;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:o}),2&e&&"string"!=typeof o)for(var n in o)r.d(t,n,function(e){return o[e]}.bind(null,n));return t},r.n=function(o){var e=o&&o.__esModule?function(){return o.default}:function(){return o};return r.d(e,"a",e),e},r.o=function(o,e){return Object.prototype.hasOwnProperty.call(o,e)},r.p="",r(r.s=459)}({1:function(o,e){o.exports=riot},166:function(o,e,r){o.exports=r.p+"assets/media/boolean-box.png"},459:function(o,e,r){o.exports=r(460)},460:function(o,e,r){"use strict";r.r(e);r(461),r(462);var t=r(166),n=r.n(t);dashboard.registerWidget("boolean-box",{label:"Boolean Box",category:"Basic",acceptedTypes:["boolean"],image:n.a,minX:2,minY:2,properties:{tag:"boolean-box-props",defaults:{colorWhenTrue:"#00ff00",colorWhenFalse:"#ff0000"}}})},461:function(o,e,r){r(1).tag2("boolean-box",'<div ref="background" class="background"></div>','boolean-box .background,[data-is="boolean-box"] .background{ width: 100%; height: 100%; }',"",function(o){this.on("update",()=>{let o="black";!0===this.opts.table?o=this.opts.properties.colorWhenTrue:!1===this.opts.table&&(o=this.opts.properties.colorWhenFalse),$(this.refs.background).css("background",o)})})},462:function(o,e,r){r(1).tag2("boolean-box-props",'<form> <div class="form-group row"> <label for="colorWhenTrue" class="col-sm-4 col-form-label text-right">Color when true</label> <div class="col-sm-8"> <input class="form-control" id="colorWhenTrue" riot-value="{opts.properties.colorWhenTrue}" onchange="{onColorWhenTrueChange}" type="{\'color\'}"> </div> </div> <div class="form-group row"> <label for="colorWhenFalse" class="col-sm-4 col-form-label text-right">Color when false</label> <div class="col-sm-8"> <input class="form-control" id="colorWhenFalse" riot-value="{opts.properties.colorWhenFalse}" onchange="{onColorWhenFalseChange}" type="{\'color\'}"> </div> </div> </form>',"","",function(o){this.onColorWhenTrueChange=(o=>{const e=o.target.value;this.opts.properties.colorWhenTrue=e}),this.onColorWhenFalseChange=(o=>{const e=o.target.value;this.opts.properties.colorWhenFalse=e})})}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,