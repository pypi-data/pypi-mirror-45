# Global Travis CI step definitions that will be used by all jobs unless
# explicitly overriden in the jobs.include matrix.

language: python
# We need to be able to install packages.
sudo: required
python: "3.6"

services:
  - redis-server

addons:
  # NOTE: We need to use the postgresql addon since the default PostgreSQL
  # service provided on Trusty machines is PostgreSQL 9.2.
  postgresql: "10"
  apt:
    packages:
    - postgresql-10
    - postgresql-client-10

before_install:
  # NOTE: We need to manually reconfigure PostgreSQL 10 since Travis CI doesn't
  # provide standard configuration out-of-the-box.
  # For more details, see:
  # https://github.com/travis-ci/travis-ci/issues/8537#issuecomment-416467506
  - sudo sed -i 's/port = 5433/port = 5432/' /etc/postgresql/10/main/postgresql.conf
  - sudo cp /etc/postgresql/{9.6,10}/main/pg_hba.conf
  - sudo service postgresql restart

install: pip install tox

script: tox -e $TOX_ENV

# Build stages.
jobs:
  include:
    - stage: test
      env:
        - TOX_ENV=py36
        # Set environment variables with information how to use the required
        # services.
        - DRFR_POSTGRESQL_USER=postgres
        - DRFR_POSTGRESQL_PORT=5432
        - DRFR_REDIS_PORT=6379

    # NOTE: We undo almost all global Travis CI step definitions to ensure the
    # following Tox environments are run without access to any service.
    - stage: test
      env: TOX_ENV=docs
      services: []
      addons: {}
      before_install: skip
    - stage: test
      env: TOX_ENV=linters
      services: []
      addons: {}
      before_install: skip
    - stage: test
      env: TOX_ENV=packaging
      services: []
      addons: {}
      before_install: skip

    # NOTE: We undo many global Travis CI step definitions to ensure the
    # following Tox environment only has access to the PostgreSQL service.
    - stage: test
      env:
        - TOX_ENV=migrations
        # Set environment variables with information how to use the PostgreSQL
        # service.
        - DRFR_POSTGRESQL_USER=postgres
        - DRFR_POSTGRESQL_PORT=5432
      services:
        - postgresql

    # NOTE: We undo/change all the global Travis CI step definitions to ensure
    # building of source and wheel distributions is performed in a clean
    # environment.
    - stage: release
      services: []
      addons: {}
      before_install: skip
      # Project uses setuptools_scm to determine the version from a SCM tag.
      install: pip install setuptools_scm
      script: skip
      deploy:
        provider: pypi
        user: genialis-bot
        password:
          secure: "XsDBS7iX1m0dX8Obo33Y7iumPGDXXuaaB0NUlhrvpbBONc48YMhEQDnQtFTtfl8iMZpiP5XRrKxCahJ8Ge0DvtCw7P0OSEMnMm/ig6TggArY249dsHR6aOP5IQxyUeI/RftXWnTc0TszMdVzMYZx5gHtLpeK1h8DK4bapOahaIDYN0nx/b2zTLc+l+UzFrhmtpI9zHkX8yvWrjBQSWamko3ZNVKRdRzw1tIKP/7q3GugXBgIJzUDScVSQs7vYmbq3fVnm6e0vHf7xx4YUR7h6iPosjzXr28ChaNiSttWHKUUPqvE3HsImMMVE5PH1Vmz/f0Kgnq13D5RlD96MQ4lim8/sEvNJ+ww+K9TtdA6xP7y0vC36/pgoZndZ1PAuORE/usIfTXIM25HWlkx5ojTFMFB+reCb6qR3rOyxo0AF6UVpJZhhcMuK8/swtyz4MULpuAtf71ErpMAb2XUIqay8c2xnyPV9qWZqVcT4CpNJMQwo6Ec1l6Q8t54+Ewe7UIi/wCXDUmux+atI+dIFY+zR6XrHnOCHfnTjJ8HMG09WYNZ6rPDrAIjk1ZjRmJthnWL7EMRZopm3r+onFw/4r/gyTzr7qtKgl6g7uE/tBr7BueRcG2oImVTGhU8QZ6R5POk7Xas3Kv47rePZC0N6F3JIk3AAf8nbcRYMD63w05slok="
        distributions: sdist bdist_wheel
        on:
          # Enable deploying tags. By default, Travis CI only deploys from the
          # master branch.
          tags: true
      # Only build releases for tags starting with a Semantic Versioning 2.0
      # compatible version.
      if: tag =~ ^\d+\.\d+\.\d+
