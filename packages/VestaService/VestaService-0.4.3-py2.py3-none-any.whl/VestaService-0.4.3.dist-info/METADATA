Metadata-Version: 2.1
Name: VestaService
Version: 0.4.3
Summary: Code to facilitate creation of services and their integration to Vesta Service Gateway.
Home-page: https://github.com/crim-ca/Service
Author: Frederic Osterrath
Author-email: osterrfr@crim.ca
License: Apache 2.0
Keywords: Vesta,Service
Platform: linux_x86_64
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries :: Application Frameworks
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Requires-Dist: celery (==4.3.0)
Requires-Dist: requests[security] (>=2.20.0)
Requires-Dist: sentry-sdk

.. image:: https://travis-ci.org/crim-ca/Service.svg?branch=master

This package offers helper modules for Vesta services working in a distributed
Service architecture. The work being executed by these services might be an
annotation process or a form of conversion process taking a significant amount
of time thereby benefiting from a distributed processing system with a REST
interface.

Messages are communicated through a `Celery <http://www.celeryproject.org/>`_
distributed processing queue system. Celery can be configured to run with
various backends such as RabbitMQ or Reddis. It is mainly meant to work with
the Vesta `Service Gateway <http://vesta.crim.ca/docs/sg/latest/>`_ .

Requirements / installation
---------------------------

This package uses Python version 2.x.x but should be compatible with Py3K.
Tox tests are run regurlarly through the TravisCI on github. See the tox.ini
configuration file.

You can install the package from the Python package index such as::

   pip install VestaService

Alternatively one can install this package from source such as::

   pip install git+https://github.com/crim-ca/Service

Which should install all requirements such as Celery.

You can also install from a cloned version.

See the documentation for pip for more installation use cases.

Contribution
------------

Pull requests are most welcome. Please ensure you follow pep8 for any
modifications.


Release notes
=============

0.4.3
-----

* Upgraded Celery to 4.3.0

0.4.2
-----

* Really added Celery integration to sentry agent

0.4.1
-----

* Added Celery integration for sentry agent.

0.4.0
-----

* Uses sentry agent for bug reporting. See sentry documentation.

0.3.3
-----

* Changing version of requests to add flexibility.


0.3.2
-----

* Fix handling of service exception messages with UTF-8 content.

0.3.1
-----

* Add a Report class normalizing format of execution reports.

0.3.0
-----

* Add argument permitting annotation uploads in ZIP format.

0.2.3
-----

* Using the package requests[security] rather than requests to avoid download errors with python versions < 2.7.9
* For the download, passing the timeout and the max_try in parameters. Using shutil.copyfileobj to write file on disk

0.2.2
-----

* When sending a task, queue name must be given.

0.2.1
-----

* Honors a new key value called callback_url which is called at the end of a
  task.

0.2.0
-----

* py3k compatible

0.1
---

* First release


