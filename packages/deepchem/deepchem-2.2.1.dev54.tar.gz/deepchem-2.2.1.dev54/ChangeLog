CHANGES
=======

* wip
* Do not build gpu on osx
* GOGO
* GOGO
* GOGO
* Made test more tolerant
* Debugging
* Bug fix
* Fixed failing test cases
* Fixed failing test cases
* KerasModel supports TensorBoard
* Improved logic for generating weights for datasets
* Changed priority order of conda channels
* Combined conda install commands
* Don't specify version for pillow
* Update dependencies for DeepChem 2.2
* More features in KerasModel
* Uncertainty prediction of saliency mapping for KerasModel
* Improvements to defining loss for KerasModel
* Began creating KerasModel
* Fixed errors
* Converted graph layers from TensorGraph to Keras
* Converted lots of TensorGraph layers to Keras layers
* yapf
* Disabled MAML, which is currently broken
* Removed ANIRegression's nonstandard saving mechanism
* Replaced uses of deprecated layers
* Bug fix
* Replaced Saver with Checkpoint
* format code style
* merge duplicated codes for building featurizers
* modify function description
* use complexe names as IDs in dataset instead of numbers
* fix bug that PDB files do not match with labels
* add timestamp parameter for parallel computing
* add random seed parameter for splitter
* make it more easier to save and reload featurized and splitted dataset
* remove line 17 that is duplicated with line 8
* Fixed a failing test case
* Switched back to an older version of yapf
* Fixed failing test case
* Upgrade to TensorFlow 1.13.1
* Added attr-slow for the AtomicConvFeaturizer test
* Remove uses of deprecated APIs

2.2.0
-----

* Update setup.cfg
* Fix loading of MUV with \`reload = False\`
* Marked another test as flaky
* Marked a test as flaky
* Fixed test failures
* Changes to fix failing test cases
* Update README.md with author ordering
* Add files via upload
* Add files via upload
* Update test\_transformers.py
* Add files via upload
* Add files via upload
* Update transformers.py
* Update test\_transformers.py
* Update test\_transformers.py
* Add files via upload
* Add files via upload
* Update test\_transformers.py
* Add files via upload
* Add files via upload
* Add files via upload
* Add files via upload
* Upgrade to TensorFlow 1.12
* Added verbose for DiskDataset.transform
* BPSymmetryFunction -> BPSymmetryFunctionInput
* Splitters use random seed correctly
* Another attempt at getting metric to work
* Fixed errors running PDBBind example code
* Made test case a bit more reliable
* Improvements to SeqToSeq
* Removed the custom-predict method
* Fixes to remove batch size dependence
* Fixes and run training for longer
* Support kwargs for all Splitter methods
* Yapf
* Running example model using HAGCN
* A running DeepMHC model
* Use binding pockets for load\_pdbbind
* Yapf & sample size change
* Changed feature shapes to deal with tf.feature\_column
* Added make\_estimator for BPSymmetry, ANIRegression
* Added return out\_tensor for all layers
* Fixed error with shapes while loading
* Added documentation for layers
* Added layers mentioned in Conv-on-Graph
* deleting file from core TensorGraph directory
* Added tests for 4 more layers
* Minor-fix
* Added tests for DTNNEmbedding, DTNNExtract, WeaveGather
* removed-six-dependency
* Moved tests from tensorgraph.models to tensorgraph.tests; Changed some data loading
* AtomicConvFeaturizer and make\_estimators
* Moved test files in dc.feat to dc.feat.tests
* Fixing Python2.7 build error
* Working model of AtomicConvFeaturizer; Added tests to check feature generation
* Added AtomicConvFeaturizer for pdbbind\_datasets
* Added smiles\_to\_seq conversion to input\_fn and corresponding changes in text\_cnn
* Removed type casting from DTNNEmbedding; moved it to create\_estimators
* make\_estimator for DTNN graph model and added corresponding tests
* Changed organization to allow multi-class; changed default\_generator; fixed tests"
* Hopefully fixed yapf formatting
* make\_estimator for text\_cnn; corrections to DPNNEmbedding; Added tests
* Code to run distributed MultitaskClassifier
* Change predict\_proba to predic
* Changes
* Changes
* changes
* more changes
* local changes
* Changes
* Changes
* Tutorial start
* more cleanup
* syntax
* Citation information
* Cleanup
* Changes
* Another change
* bugfix
* dnasim cleanup
* bugfixes
* changes
* changes
* Partial cleanup
* remove
* changes
* Code to run distributed MultitaskClassifier
* Run yapf -i :crying-cat-face:
* pad\_batch() correctly handles labels with more than two dimensions
* Handle backwards compatibility where .sdf.csv exists storing tasks
* Fixed calculation of convolution output shape
* Fixed errors in computing layer output shapes and loading images
* If no CSV supplied, read task directly from .sdf with mol.getProp()
* Pass tasks into load\_sdf\_files so we can extract tasks from .sdf
* Diabetic retinopathy example supports saliency mapping
* Fixes to support ImageDataset
* ImageLoader.featurize() returns an ImageDataset
* Created ImageDataset
* fix for python3 incompatibility
* Fixed testing errors
* Added tests; Added missing warnings import in layers.py
* Added get\_layer\_weights to tensorgraph
* Fix reproducibility issues with pdbbind notebook; return pdbbind\_tasks instead of tasks
* fixed indentation error
* Revert "Import statement moved to top"
* Import statement moved to top
* Changed BEDROC to use rdkit; Added tests
* Added BEDROC metric
* Fixed yapf formatting issues, hopefully
* No multi-task for binary metrics
* Fix Metrics
* Added yapf formatting
* Added yapf formatting
* changed DiskDataset.from\_numpy to work with y=None
* Update yapf version to 0.22.0
* Deprecate function in dc.utils.save
* Fix formatting issues
* Update test in genome metrics
* Move genomic utility to deepchem/utils/genomics
* Remove timer, run with quiet
* Format files to comply code guidelines
* Fix median calculation
* Update sider\_graph\_conv\_one\_fold to fit with the current namespace
* Ignore pose generation tests
* Exclude docking tests
* Add timeout to vina download
* Also remove python 3.6
* Fix Install
* Upgrade pip
* GOGO
* install from conda-forge
* gogo
* data loader
* Added UV tasks
* Added factors/uv/kinase to loading functions
* Added missing entry removal & tasks
* Added Kinase/UV/Factors loading functions to run\_benchmark
* Added load functions to \_\_init\_\_
* Added molnet wrappers for UV/Kinase/Factors; To add tasks and missing entry removal
* DR models
* Optimization to atomic convolution
* yapf
* Changes
* lowering indentation level #1232
* Fixed more assumptions about array shapes
* Fixed more assumptions about array shapes
* Prevent DiskDataset from resizing arrays
* fix logger
* add weights
* fix data loader
* add support
* Fix
* cleanup
* Changes
* Removing some prints
* Loading functions
* Featurizing
* Fixed failing test case
* Implemented saliency mapping
* addressing issue #1384
* resolving issue #1384
* yapf
* Optimizations to AtomicConvolution
* Still trying to fix errors on Python 2
* Attempt to fix error on Python 2.7
* Parallelize RdkitGridFeaturizer
* adding slow attr to unit tests of unet and resnet
* adding avg pool to resnet50
* Comments
* close
* Unit test beginnings
* typo
* Yapf
* tests for Avg Pool
* Average pooling
* yapf
* Add loader
* minor typo in naming
* unit tests for resnet
* minor changes in resnet
* adding identity block
* conv block
* pdbbind mods
* Yapf
* Load uspto
* Fixing bugs in splitters
* Adding automated install for Py36 runtime
* Neural Fingerprints for the models I care about
* Neural Fingerprint Easy Access
* yapf
* Actually add test
* Specified ID Splitter
* Publish It
* Large Scale Screen Techniques
* Ready To Go
* Create graph\_convolutional\_networks\_for\_tox21\_on\_colab.ipynb
* Update
* Tutorial
* Test Featurizer
* Just Changes To Graph Convs
* initial commit for resnet50
* replacing language level assert statements
* shutil to remove tree
* more tests for UNET
* Update Travis To Start Testing 3.6
* dockerfile
* Use New Conda Variants
* Run simple save/load test
* Do All Builds
* Install test conda-verify
* Versions
* Install client and start tests
* Use python 3.6 and 3.7
* conda-build
* Wrong Conda
* Update Conda Build
* unittest for UNET
* bbbc2
* removing model as parameter from the class
* yapf
* molnet file
* Changes
* fixing Concat bug
* Fixes
* Adding tif image
* yapf
* adding loss
* change input to RGB and update ksize in MaxPool2D
* Updates
* More ImageLoader work
* First steps
* Yapf
* Add test that ISM scores nonzero
* Changes
* Bump semantic version minor number
* Updated
* updates

2.1.0
-----

* Yapf
* Remove another
* Removing
* Version bumps
* Yapf
* Add genomic metrics
* Update tests
* PWM metrics
* Create OntologyNodes for Gene Ontology
* SequenceDNN fixes
* OntologyModel supports classification
* Created OntologyModel
* removing \_\_init\_\_ and adding in setUp() for nosetest
* adding test\_ to the functions
* individual tests for DataTransforms
* Transformer object in DataTransforms
* yapf
* yapf
* Sampl working
* Adding None split
* Example running
* Continued debugging
* changes
* getting sweetlead working
* Yapf
* bace changes
* added more tests for rotation
* add remaining tests
* yapf
* minor change in test\_transformers
* test for gaussian blur
* comments for DataTransformers
* Dummy commit
* yapf
* Update gitignore to ignore vim swp files
* Fixing qm7\_sklearn
* yapf
* DataTransforms API for Images
* Fixes to examples
* correct the typo roc\_auc\_scores to roc\_auc\_score
* Fixed Estimators that log to Tensorboard
* tensorboard integration improvement
* Single conda-forge install
* Manually install numpy
* variable filter sizes enables in UNet
* Improved logic for reshaping inputs to TensorGraph
* Lingering Bio import
* Soft import Biopython, trim usage
* Add more tests
* Go with first option
* Path 3
* Path 2
* Path 1
* yapf
* added Pixel Error in metris
* Bump Yapf
* removed unet\_model and added architecture in the constructor itself
* modified UNet arch
* added jaccard index metric
* Set length by default
* Create issue template
* initial architecture for U-Net implementation
* Fixed more incorrect code in metrics and evaluator
* Hashable featurizers
* More fixes to metric code
* Fixed incorrect code in metrics
* Fixed error saving submodels
* Update Using\_Tensorboard.ipynb
* Reverted to older version of yapf
* Fixed failing tests
* NumpyDataset does not reshape its arrays
* Removed predict\_proba()
* Merged changes from master
* yapf
* rerun test
* fix failure
* fix compatibility issue
* qm7 updates
* add move\_mean argument
* Renamed MultiTask to Multitask
* Caste things to tensors of correct type
* Add seperation
* Marked some tests as flaky
* Increased number of epochs on test
* Adding LinearCosineDecay
* Added missing file
* Removed unimplemented argument
* Finished refactoring graph models
* Implemented uncertainty for MPNNModel
* Continuing to refactor graph models
* Renamed to PowerSign
* Renamed to PowerSign
* Remove the old commits
* Added a list cast to gaussian\_process.py to enable Python 3 compatibility
* Add powerSign optimizer to deepchem
* Add powerSign optimizer to deepchem
* Continuing to refactor graph models
* Merged changes
* update docs
* Fix OSX install
* dropout for DAG
* Move to contrib
* fix failure
* Refactored GraphConvModel to add features and fix bugs
* Update test\_graph\_models.py
* Update test\_graph\_models.py
* fix test failure
* quick fix for gc
* Updated conda activate command
* Tutorial on uncertainty
* yapf, added comments
* fix failure
* Created architecture for predicting uncertainty
* fix test failure
* Update qm7\_ANI.py
* ani1 perf fix
* make\_estimator support for graphconvmodel
* Fixed error on Python 2
* Version Bumps
* yapf
* Move deprecation to constructor
* Added TensorGraph.\_\_call\_\_()
* Use tf.matmul for batch matrix multiplication instead of tf.multiply with matrix and vector broadcast in MPNN's Edge Network Implementation #1188
* Continuing support for eager mode in TensorGraph
* Begin support for eager mode in TensorGraph
* Spell HingeLoss Correctly
* Fixed error in Python 2.7
* spelling
* Spelling
* lime\_dog
* Explaining Tox21 with LIME
* update fork and remove scscore
* python 2.7 doesn't have list.clear()
* yapf clearance\_dataset.py
* Made test more tolerant
* yapf
* convert None to string
* More layers support eager mode
* Add accuracy by changing outputs on the model
* Change radius to 2
* Added doc strings
* SAScore module
* yapfed
* Fix typo
* DAGTensorGraph Deprecation
* Convert DAGTensorGraph to DAGModel
* Deprecation for TextCNNTensorGraph
* Rename TextCNNTensorGraph to TextCNNModel
* MPNNTensorGraph Deprecation
* Rename MPNNTensorGraph to MPNNModel
* Deprecation of PetroskiSuchTensorGraph
* PetroskiSuchTensorGraph to PetroskiSuchModel
* DTNNTensorGraph deprecation setup
* Change DTNNTensorGraph to DTNNModel
* Continuing to convert layers
* Fix lint error
* Fix yapf on newly formatted deprecation notice
* Fix second name of model in deprecation warning
* Add accidentally removed ProgressiveMultitaskClassifier
* Remove cpu pin
* WeaveTensorModel to WeaveModel
* yapfed
* Fix addtional files
* Wrap old class call with deprecation
* Wrap old class call with deprecation message
* Fix model init
* Continuing to convert layers
* update setting
* update irv
* add estimator compatibility
* Converted more layers
* Beginning to convert layers to support eager mode
* Fix yapf identified formatting issues
* integrating the model to deepchem
* solved bug in issue  #1166, called lrelu correctly
* correcting the layers
* Update version in README
* using shared layers
* style fix
* Logging fixes
* Make deprecation a FutureWarning as DeprecationWarning does not seem to print message
* Deprecation subclass with warning and imports
* Fix GraphConvTensorGraph to GraphConvModel in notebook examples
* Fix GraphConvTensorGraph to GraphConvModel in tox21
* Fix GraphConvTensorGraph to GraphConvModel in qm7 example
* Fix GraphConvTensorGraph to GraphConvModel in hopv example
* Fix GraphConvTensorGraph to GraphConvModel in delaney example
* Fix GraphConvTensorGraph to GraphConvModel in clintox
* Fix GraphConvTensorGraph to GraphConvModel in chembl example
* Fix GraphConvTensorGraph to GraphConvModel in adme
* Fix GraphConvTensorGraph to GraphConvModel in moleculenet call
* Fix GraphConvTensorGraph to GraphConvModel in parent module
* Fix GraphConvTensorGraph to GraphConvModel in unittests
* Rename GraphConvTensorGraph to GraphConvModel in actual class
* Update version of tensorflow
* Update tox21\_graphcnn.py
* Python 27 I can't wait to not support you
* Unicode python2.7 support
* fit python 2 and doctests
* GOGO
* Made test less strict
* make\_estimator() works for RobustMultitaskClassifier, RobustMultitaskRegressor, and Sequential
* yapf
* add Progressive classifier
* adding scscore
* adding scscore
* Remove future import from previous commit
* Expand out the ConvMol Featurizer to accept atom-level features to be used as part of the vector of features assigned to each atom. This also requires a changes to the GraphConvTensorGraph class to be able to set the number of atom features that will be passed for each atom
* update splitter tutorial
* remove unnecessary else statements
* minor fixes
* raise ValueError() when split==None for qm7, qm8 and qm9 load modules
* update fork Merge branch 'master' of https://github.com/abster12/deepchem
* Added Documentation
* Minor changes to tutorial
* Ready to Go
* remove notebook
* add split==None feature for all the load\_function
* reformat using yapf
* init tut
* rewriting tests
* Created tutorial for tf.data and tf.estimator
* Fix README description
* Bumps back
* Dockerfile Update
* No more utf-8 in readme
* Updates to install script
* Corrected Softmax to SoftMax
* corrected errors and added tests for SparseSoftmaxCrossEntropy
* Improved test cases
* osx builds
* more bumps
* more bumps
* added converting NumpyDataset to tf.data via make\_iterator() method
* tests
* rewriting tests
* correcting errors
* remove tutorial and start it on a new branch
* changes in Hingeloss
* test for pickle added
* test for pickle added
* using tf.losses.hinge\_loss
* using tf.losses.hinge\_loss
* Fixed error on Python 2
* added documentation
* bumps
* Version Bumps
* return entire dataset when split is None
* start a new tutorial on tensorgraph layers using tensorflow eager

2.0.0
-----

* Version bump for 2.0 Cut
* ran yapf
* changed GPL to MIT license
* Added tests
* make\_estimator() works with MultiTaskClassifier and MultiTaskRegressor
* correcting errors
* correcting errors
* updated files
* added hingeloss
* added hingeloss
* added how to convert tf.data to NumpyDataset
* added hingeloss
* added hingeloss
* Only run doc tests for python 3.5
* More doctests fixes
* Update more doc strings
* Print after the FitTransform docstring
* fix failing test
* add logger instead of print statements
* included installation from source details
* formatted using yapf
* Updated tutorial and IndiceSplitter
* Updated tutorial and IndiceSplitter
* make\_estimator() supports Tensorboard
* MNIST Example added and reducing numpy matrix size
* make\_estimator() supports metrics
* added scscore files
* prevent generation of docs for tests
* initial commit for NumpyDataset Tutorial
* included installation from source details
* Initial implementation of make\_estimator()
* formatted using yapf
* 8x faster graph normalization
* Updated tutorial and IndiceSplitter
* Updated tutorial and IndiceSplitter
* removing outdated requirements file
* remove Direct from Source from README.md
* fixed model\_ops tests
* Added Dataset.make\_iterator()
* update sampels
* Removing more imports
* Moving back in model\_ops tests
* Changing imports in files
* Move
* fix conflict
* finishing tensorgraph progressive
* fix travis failure
* update progressive
* Moving dc.nn to contrib
* fix import
* progressive WIP
* yapf
* update docs
* recover file
* recover file
* merge master
* Weave save and load
* fix fault
* merge master
* update robustMT to tg
* Removing some imports
* remove vina test
* rename
* Adding tf\_new\_models to contrib
* Moving more stuff out to contrib
* Remove init from tests
* Rename directory
* Removed comments
* Moved robust/progressive models to contrib
* Moving contents out of tensorflow\_models
* Adopted Yutong's suggestions using R/S and E/Z labeling for atoms and bonds, and formatted the changed file with yapf. I am surprised to find ConvMolFeaturizer doesn't even use bond\_features
* tf 15 updates
* Pin Graph Gather
* update
* add chirality to atom features, including CW(clock wise), CCW(counter clock wise) and unspecified
* fix readme links
* Organizational Structure
* Update sampl\_graph\_conv.py
* Yapf
* Docs Update
* fix travis failure
* fix bugs and yapf
* merge conflice
* Install pbr manually
* docstrings and unit tests
* Test Fixes
* Tensorflow upgrade
* fix metric dimension bug in gaussian\_process.py
* Remove deploy alltogether for now
* Website Updates
* Don't cleanup before uploading to pypi
* yapf
* yapf
* finishing
* lr and irv update
* more bugfixes
* bugfixes
* Remove import
* test fixes
* Test fixes
* merge conflicts
* Fixes to README
* merge
* Update Using Tensorboard.ipynb
* tensorboard tutorial
* README and usability updates
* yapf
* changes
* Commenting out IRV
* yapfed
* yapfed
* small addition
* combine master
* update graph generating scripts
* yapf
* ensure all datasets have the same tasks
* NumpyDataset.merge
* Master Atom In Graph Featurizer
* Organize the logic better in tox21\_datasets.py
* Simplify logic in the tox21 laod function
* added test to the merge method checking the size of the tasks, and the shape of the new merged dataset
* fix that is valid if we assume that all datasets to merge have the same amount of tasks
* Commenting out many more old classes
* Copying out robust multitask
* remove unused vars
* Move simdna to conda forge
* add back in batch norm
* GOGO
* Ready
* Add epsilon to log
* annealing schedule comment
* fix tests
* Fix Tests
* Reset notebook
* Maybe ready for CR
* WIP
* docs
* Move around saved models
* PR comments
* ToInt32
* Minor fixes to comments
* GymEnvironment supports continuous action spaces
* update
* delete extra stuff
* update plotting script
* update
* add qm7
* update plotting script
* add plotting script
* Review comments
* update
* fix bugs
* update hyperparameters
* add mpnn classification
* attempt bugfix
* add molnet script
* update
* small name changes
* Bugfixes
* Initial fasta loader
* Cleanup and documentation
* Implemented continuous action spaces for A3C
* replace maxpool
* textcnn merge
* Using pip version
* yapf
* Add link to README.md
* new dense numpy format
* Add manifest to exclude datafiles
* setup.cfg
* Add badges to readme
* upload to pypi
* Added some more tests
* Pointing at deepchem fork
* yapf the setup file
* attempted fix
* bugfix
* only downgrade on OSX
* goose it because I don't know what is happening
* None is not an integer
* temporarily downgrade conda
* Undo yapf change
* added some sim tests
* Travis changes
* imports
* remove datasets debug statements
* imports and yapf
* yapf 20
* Enable Transfer Learning
* Tensorflow via pip -- this will make gpu builds easier
* featurizationTransformer
* move xgboost import
* forgot one test
* Update docs on special build of mdtraj
* move xgboost
* Cleanup
* Yapf
* Travis upgrade
* bring back multiple pythons
* disable-openmp
* Trying formatting with an older yapf version 0.17.0 to see if it passes Travis CI
* yapf attempts
* multiple pythons
* mdtraj conda recipe
* use custom mdtraj
* yapf attempt
* Bring back xgboost
* xgboost causes segfault
* upgrade pandas
* update mdtraj and xgboost
* graph conv bugs
* merge
* bump numpy and scikit-learn
* yapf
* Updated Docstring
* merge
* Attempting to fource new build to see if yapf errors persist
* Since the original 128-assay dataset is left intact, removing comparison script and references in documentation
* Use reference to deepchem data dir for smiles index generation
* Changes supporting creation of bioactitity datasets
* Tutorial updates
* local
* Some more local changes
* Cleanup
* yapf
* Remove deprecated fcnet models
* local changes
* Local changes
* Moved
* Left out change
* More dragonn changes
* Cleanups
* Merging in head
* remove cruft
* local
* ICU
* yapf
* Added documentation on MIX+GAN
* Yet another missed import
* local changes
* Changes
* Beginning dragonn adaptation
* Removing old sequential code
* Removing another dead import
* yapf
* Remove broken import
* Removing sequential tests
* Removed dangling tests
* Removing unnecessary files from PR
* Changes
* Cleanup
* Debugging
* Remove overfit tests
* Remove old overfit tests
* Continuing to implement MIX+GAN
* merged
* Trimmed
* local changes
* more dead code
* yapf
* renaming examples
* Began implementing MIX+GAN
* yapf formatting of the modified code
* docstring updates
* BUG: fix featurizer NamerError in benchmark\_curve.py
* BUG: fix featurizer NamerError in benchmark\_curve.py
* yapf
* Configurable GraphConvTensorGraph
* Created LSTM layer
* Fixed test failure
* Simplified names of TensorGraphMultiTask models
* Added missing default argument
* Can restore from any checkpoint, not just latest
* Fixed infinite loop
* Update MUV
* Actually save the results of the dataset transformations
* Updating loaded file naming as per suggesting from lilleswing
* update mdtraj
* Manual boost 1.59
* Fixing hardcoded path
* Feature for building multi-assay datasets based on related gene, allows building larger multitask datasets
* Also upgrade tf
* yapf upgrade
* Conda Forge has tf 1.4
* changed version string to 1.3.1
* made code formatting yapf compliant
* added version string
* Fix Graph Conv Construction
* Use queue for prediction
* Bug fixes
* Cleanup to examples
* re enable test
* Fix
* yapf
* s/dc/deepchem/
* DS update
* Initial impl of mol2vec for deepchem. Tested the features vs a random forest on ECFP4 - slighlty worse performance with AUCROC around .73 - but may be interesting for further research
* yapf upgrade
* update weekly benchmark run
* Yapf
* Improvements to MCTS
* short version
* yapf
* Website Update
* website version bump
* How does it look
* conda-forge
* Cleanup
* More docs
* Continuing to implement MCTS
* Add complete\_shuffle to DiskDataset
* cut
* use pip for now
* see if we pass tests
* Removing old sequential class
* Adding in mse loss
* Fixing some issues
* Forgot sequential file
* Sequential
* Bump version to 1.3.1 on README

1.3.1
-----

* Import flaky
* Add flaky note to test\_wgan
* Continuing to implement MCTS
* add test to flaky list
* no index in the csv file
* yapf
* version bump
* gotta remember this
* tests
* pass tests pls
* more cleanup:
* FIX: incorrect index
* removed reflections (they were not implemented)
* added sanitize flag
* docstrings + small stylistic changes
* do not use aromatic interactions is pose scoring and examples (they require sanitized molecules to work correctly)
* use kwargs to specify custom bins and cutoffs
* stylistic changes
* updated functions that use RdkitGridFeaturizer
* new implementation of pi interactions
* new implementation of \_transform
* more cleanup:
* basic cleanup:
* Fix seed
* MaxMin Splitter implementation
* Fix pad\_batches on None y or w
* Preserve behavior of batch\_size=None to iterate in shard\_size
* configproto
* Singleton csv works
* gzip csv vs hd5
* yapf
* Add additional tests for pad\_batches
* Fix iterbatches not iterating in batch\_size across shards
* yapf
* Began implementing MCTS algorithm for RL
* fix errors
* renaming
* remove redundant csv
* recover changes
* recover changes
* debug
* update
* Clean up README
* whack-a-mol I might need to do a more targeted pass
* try again
* remove slow tests from smoke testing
* Portable
* spacing
* Correct Version of DeepChem
* Install libsm6
* Remove print debug statement
* actually load legacy
* Fix travis
* Convert to list after type check
* quick fix
* Convert to list on saving
* numpy vs list
* Store metadata as hd5 file
* finish rdkit upgrade
* remove dead code
* Fix Tests
* Upgrade numpy
* update
* Convolutional layers support initializers
* Keep installing icu
* Move to stable
* rdkit upgrade
* Deepchem 1.3 docker and conda
* Dockerfile upgrade

1.3.0
-----

* molnet valid
* Move slow tests to jenkins
* Add configproto to TensorGraph kwargs to create custom sessions
* stop making docs
* iterate
* update jenkins molnet build
* yapf
* Created MNIST GAN example
* Merged changes from main branch
* Eliminated Shared, implemented shared() for convolutional layers
* Accidentally deleted
* Disabling UserWarning
* add curve script
* remove hyperparameters
* GAN duplicates discriminator instead of using is\_training flags
* Implemented Shared layer
* fix travis failures
* yapf
* changes for PR
* update
* Added Conv2DTranspose and Conv3DTranspose layers
* update docs
* docstrings
* docs and yapf
* merge
* Implemented WGAN
* updated docstring for compute\_charge\_dictionary
* test modified RdkitGridFeaturizer.\_voxelize
* deal with indices outside of the box in RdkitGridFeaturizer.\_voxelize
* corrected docstring and removed unused variable in featurize\_binding\_pocket\_ecfp
* tests for bug-fixes + cosmetic changes
* FIX: removed abs from convert\_atom\_to\_voxel and added a warning if coords are outside of the box (< 0 or >= max index)
* FIX: use rdkit instead of ob in compute\_charge\_dictionary
* more tests (splif + converting coords to voxels)
* Set model\_dir before restoring tensorgraph in load\_from\_dir
* yapf
* Replace tar call by python function from deepchem.utils
* deal with py2/py3 integers + change formatting in tests
* FIX: formatting in tested module
* better random string generation and more tests (ecfp and splif)
* check if returned obejcts have correct types
* tests for several functions defined in rdkit\_grid\_featurizer
* FIX: removed dots from file formats in get\_ligand\_filetype
* Created GAN class
* More attempts at fixing tests
* Trying to correct merge
* Fixed error in Python 2
* yapf and cleanup
* Fixed failing test case
* Fix numerical problems with gradient by adding a very small delta
* Fix Tests
* Try documentation again
* Documentation on Layer Splitter
* Created CGAN example
* textCNN
* Remove non-existant imports
* Created Divide layer
* GOGO
* Fix more tests
* Fix test\_overfit
* Quick fix
* yapf
* Use self interaction energies directly from paper
* textCNN
* Save via numpy
* readability
* Make sure can reload
* Weave single out\_tensor
* lilleswing comment
* Weave only one out\_layer
* file encoding
* Remove extra print
* Documentation update
* Add more data folder options to ANI
* Make anitools python2 friendly
* yapf
* yapf
* replace os call to tar by deepchem.utils.untargz\_file in qm9\_datasets.py
* Install from conda forge
* Add a function to uncompress .tar.gz file in python
* GOGO
* Can disable automatic checkpointing
* update fix
* Implemented submodels
* update fix
* update fix
* Merged changes from master branch
* Fixed bug when logging to tensorboard
* quick fix
* Different method for synchronizing queue
* update
* update
* update
* update documentation as well
* GOGO
* Added more documentation
* Return adjs from Graphcnnpool
* Added docstrings
* Add Tests
* Cleaned UP
* Implemented StopGradient
* Copy layers, initialize variables
* Add additional types and constraints
* Change to work on Python 2
* Clean up pool properly
* Prefetch shards for DiskDataset
* Minor optimization to TensorGraph
* Change to central finite difference
* Add unittest for gradient and ANIRegression
* Added test for notebook
* Implemented KL cost annealing
* update
* Added example for SeqToSeq fingerprint
* update for qm0
* qm9 per\_task
* Return embeddings as a numpy array
* Fixed error on Python 2
* Changed API to do prediction in bulk
* update
* update
* Graphconv error bar fix
* update
* update
* remove dill import
* Add support for model saving/loading
* update
* Roitberg
* update
* update
* update
* Bug fix
* update
* update
* update
* update
* multitask regression bug
* debugging
* Can use SeqToSeq as a variational autoencoder
* debugging for ani and mpnn
* update time splitting
* time splitter for pdbbind
* update
* debugging
* MPNN in benchmark suite
* yapfed models/tensorgraph/models/graph\_models.py
* recover
* fixes batch padding in predict: pad\_batches was always "True", now it follows the argument in "predict"
* update and merge master
* update
* update hyperparamopt
* update
* add krr\_ft
* update results
* update hyperparamopt
* tweaked text - fixed typos, changed deepchem to DeepChem, added author credit
* debugging
* yapf-ed
* temp save
* correct number of blank lines
* for automatic installation of dependencies
* dependencies for dataset\_preparation tutorial
* add dataset\_preparation notebook test
* fix file paths
* supplementary file for dataset\_preparation tutorial
* for rendering the notebook on the website
* add example experimental dataset
* Tutorial detailing the creation of a deepchem dataset from novel data
* Continuing to implement SeqToSeq
* Continuing to implement SeqToSeq
* yapf
* master merge
* Layers support math operators
* Beginning of support for sequence to sequence translation
* absolute imports
* Fix import
* Master Merge
* merge master
* MaxPool2D
* absolute import
* reset qm7\_ani
* yapf
* reset qm7\_ani
* Save and load ani
* Test
* tests for Conv3D and MaxPool3D
* Conv3D and MaxPool3D layers
* Resolve incorrect keyword argument name passed in Evaluator constructor for pcba\_sklearn
* Remembering to run yapf on pcba\_sklearn
* Catching two additional invalid uses of verbosity flag
* Resolve image whereby pcba\_sklearn example fails to train due to outdated parameters passed to Metric and related constructors
* added imports
* adding layers.py
* yapf
* tox21 sluice example
* New version of yapf
* Improve PCBA comments; ran yapf
* Redesigned Gather layer
* Miniconda
* Install jupyter sphinx extension
* Install sphinx before sphinx\_rtd\_theme
* yapf 17
* resolve conflict
* LAST YAPF
* Created Log layer
* better work now
* upstream master layer
* final edits
* better be the last yapf
* updates
* Created Gather layer
* yapf
* added tensorboard tutorial section
* fixed
* edits
* yapf (again)
* removed stack import
* fixed graph conv
* yapf
* fixed test\_layer\_splitter
* comments
* Notebook additions
* sluiceloss test and yapf
* all but sluice\_loss
* alphashare test
* added docstrings
* Might as well bump readme
* Image Location Updates
* Updates
* edits
* edited beta output
* yapf
* Bug fix
* sluice network and layer splitter
* Avoid importing networkx
* Updates
* yapf
* Changes
* Travis changes
* Changes
* Remove premature imports
* Don't use wget
* Transparent Logo
* Initial website change
* Fixed bug in get\_layer\_variables()
* PR comments
* Apparently ordering matters
* Add as a param for very large RidgeCVRegression
* yapf
* mark maml sine as flaky
* Wording
* No Queue at the Same Time As Tensorboard
* Adding MOre scikit learn models which don't take weights
* DONE
* Can pass input layers by position
* More fixes
* Removed obsolete code that caused errors
* Pin All deps
* zlib added to install script
* Update banner
* Basic website material
* TensorGraph uses a persistent Session
* Optimize BPS symmetry functions to not use the CPU
* Fixes
* Review changes
* temp save
* Simplifying layer handling
* Yapf and tests
* Remove print statements
* RandomGroupSplitter
* yapf
* yapf
* Bugfixes for transformers and add a L1Loss function
* Can pickle AttnLSTM
* LSTMStep pickles
* Attempting to make pickle work
* Changes
* No more one hot encoding in feed dict
* One last test fix
* deterministic kwarg into fit
* remove NPE when tasks is None
* yapf
* Add mode where left out
* Yapf
* More improvements to example
* graph models need to have deterministic in interface
* yapf
* Call the function I created
* merge
* Remove kernel spec
* yapf
* Shuffle the dataset while fitting by default
* play pong for 2 minutes
* Play pong only for 5 minutes
* Pong error handling for render
* cmake
* install zlib
* Temporarily don't cleanup after myself
* Install atari and gym for noteboko tests
* Desired Results For Tox21 Multitask Network has degraded
* GOGO
* updates to tests
* Git Ignore Updates
* update performance table
* More improvements to example
* Cleanup
* Improvements to MAML example
* yapf
* Test CV size as well
* Reset setup.cfg
* GOGO
* yapf
* more cleanup
* more cleanup
* Cleanup
* Debugging and yapf
* Batching of tasks for MAML
* Created example for MAML
* Bug fix to converting layers to tensors
* yapf
* Tweaking
* Attempting refactor
* optimization direction
* hpsearch results
* Adding to tests
* Renaming
* yapf
* potential fix
* Updated to MAML code
* variable sizes of training set
* Initial implementation of MAML
* Updates
* Automatic conversion of Layers to Tensors
* Fix typo
* Examples test framework
* temp save
* Adding biology to header
* Bugfixes
* yapfed
* Deprecation warnings
* Added option for setting activation function
* Added new TensorGraph notebook
* k-fold fixes
* yapfed
* yapfed
* benchmark integration
* Adding tg notebook
* yapf
* removed outputs
* update hyperparamopt
* update docs
* Update TF version in README.md
* removed transformer and outputs arg
* Added Pong example
* Remove the Environment used for testing notebooks
* No longer remove cpu only TF
* back to one core at a time
* Move 5 minute test to jenkins
* yapf
* use all the cores on the box
* Try using both cores for nose tests
* Fat finger install script
* wget -nv
* Quiter Log for installing
* Conda recipe folder
* GPGO hyperparamopt
* TF 1.2 and Conda
* edited graph\_conv
* temporarily disable tensorboard
* more args
* tf 1.2.1
* TF 1.2
* less
* GOGO
* yapf
* pass per\_task\_metrics arg
* debug
* Couple of small bugfixes
* GPGO
* Fixed bug in computing shape of Flatten layer
* Fixed error on Python 2
* Conv1D and Conv2D are more tolerant of input shape
* PPO can batch rollouts
* GPGO hyperparamopt
* Actually Works
* Fixed failing test case
* yapf
* Implemented Layer.shape
* Fixing quantum notebook
* Fixing solubility model
* merge conflicts
* Local changes
* yapfed
* GPGO
* fix jenkins
* yapf
* renaming benchmark scripts
* removednaming functionality
* edits
* MNIST notebook run
* Mark Tests
* yapf
* add summary operation to tg
* yapfed
* fix bugs
* unit tests
* yapf
* Addy to flaky list
* Environment can specify dtypes of state arrays
* yapf
* yapf
* yapf
* initial\_state fatfinger
* general cleanup
* final cleanup
* Try again
* GOGO
* notebook tests
* refinement and changes
* yapf
* Update docstring
* Yapfed
* yapf and docs
* MPNN debug
* Notebook changes}
* remove comments
* Fixing multitask networks ipynb
* Created API for TensorGraph optimizers
* MPNN first example
* yapf
* Renaming directories
* BACE updates
* add docs
* Making error message vanish
* pass n\_classes arg to metric.compute\_metric
* new version yapf
* Implemented PPO
* debug
* merge BP
* yapfed
* merge master
* first build of MPNN
* merge master
* merge master
* building MPNN
* more yapf
* yapfing
* MPNN structures
* MPNN featurizer
* +docstrings
* reverted examples
* yapfed lots of stuff
* error bars and fixes
* Numpy Docstring not restructured
* yapf datasets
* Doc String
* Add Tests for new k-fold interface
* API simplification to RL
* Passing tests
* Use the new function
* Clean up and add a test
* debug
* Optimization to hindsight experience replay
* Implemented Hindsight Experience Replay
* Learning Decay Example
* Docker instructions w/ readme markdown
* Docker instructions w/ readme markdown
* Release notes
* Dockerfile version bump

1.2.0
-----

* Update index.rst
* for now..
* refinement
* parameter refinement
* unit test for BP and ANI
* Tweaking Readme
* cleaning up
* merge master
* Added options to Conv1D layer
* BPSymmetryFunction change
* minor changes
* ANI regression
* Error Handling in pdbbind grid
* yapfed lots of stuff
* Upgrade Yapf to 0.16.2
* yapf
* Change load defaults
* ANI debug
* refinement and debug
* debug
* tensorgraph refinement
* yapfed
* Update graph\_models.py
* Update datasets.py
* I hate yapf
* A3C supports Generalized Advantage Estimation
* Added normalizer\_fn option to Conv2D layer
* ANI Regression
* spelling error
* reversion and mpnn-s
* -r2\_score +test
* ANI-1 elements
* variety of optimizations and additions
* remove redundant codes
* GRU layer can be pickled
* A3C works with recurrent layers
* old-style implementation of BP
* fixed yapf
* fixed tox21 issue 3
* fixed pytorch graph conv issues
* change settings for DTNN
* debug and update
* Symmetry Function for QM7
* Moar tests
* Also RandomStratifiedSplitter
* Splitter code
* added pytorch graphconv and tox21 example
* No Yapf on Contrib folder
* TensorGraph GraphConv class
* release docs
* yapf
* Tests for pickling layers
* Changed scaling of A3C loss function
* Remove debug statement
* Axis=0 for concat
* Remove debug line
* Saving/Loading Weave Layers
* Changed Conv2d to Conv2D in test\_mnist.py
* Changing Conv2d to Conv2D in test\_mnist.py
* Changed Conv2d to Conv2D in test\_mnist.py
* test
* Update test\_mnist.py
* first commit 6/29/2017 9:13am
* One more doc shell for #631
* Adding basic dataset descriptions taken from massively multitask networks paper
* Adding in feedback from lilleswing
* Freeze scikit-learn version
* Flaky also
* remove print statement
* Lower learning rate of a3c test for robustness
* Fix for issue #632 - ensure find command is properly terminated
* yapf
* function signature
* yapf
* gogo
* Fixes for ACNN
* Get rid of scikit-learn deprecation warning
* Update README.md
* Adding more contributors
* Fixed failing test case
* Fixes to A3C
* Moving PDBBind example to correct folder
* Basic getting started guide for pdbbind
* Documentation fix for issue #613
* Fix asserts statements
* added section in README regarding easy install via conda
* Added more options to Conv2D layer
* yapf
* remove print
* distances not similarity
* Fingerprint splitter
* Running yapf for formatting
* Adding ArXiV citation
* Add selu activation
* test reload
* Better reload test
* Better reload test
* Babel cleanup
* MIT cleanup
* yapf
* Actually use learning rate
* Try to get a green build
* PDBBind Dataset Load Error #562 Fix hashing function more elaborate hashes can be added..
* PDBBind Dataset Load Error #562 Added fix to handle missing atoms in residues before assigning protonation
* deps fix
* Added test case for restore argument
* yapf
* Improved A3C checkpointing
* nottest
* Fix tests
* then
* Correct contributing url
* Lazy Load Changes
* yapf being broken
* Layers look up variables rather than storing them
* test docs
* More flaky tests
* Retry flaky test
* Yapf tests
* Create CODE\_OF\_CONDUCT.md
* debug
* yapfed
* coverage
* Follow best practices for learning rate
* Lower learning rate
* Cover the Squeeze layer
* Make multitask classifying even easier
* Lower Learning Rate
* yapf
* Fixed test case
* Various improvements to layers
* yapf
* Good enough to merge
* good ish
* Correct instructions for installing using conda env
* yapf
* something that will json
* Correct nvidia docker
* restore
* convergence check
* GPU docker support
* detect devices
* Enable GPU on docker
* lambda1
* a3c tic tac toe value search
* Lower learning rate for flaky test now that we have 1k epochs
* Get shapes right
* Fixed bug in ReduceMean layer
* yapf
* More realistic value\_weight
* Cleanup
* Can play tic tac toe
* Implement advantage
* Epsilon to loss function
* Small clarifications
* Layers try to automatically reshape their inputs
* yapf
* Look at travis
* Created some basic TensorGraph layers
* I do not like yapf
* Delete temp directories
* More yapf
* Reformatted with yapf
* State is represented as a list of arrays
* yapf
* Imports
* Fixed test failures
* A3C supports checkpointing
* Correct attr
* Import from correct location
* Move tests > 50 seconds to jenkins
* Created test case for A3C
* Time the tests
* Pin Random Seeds for Generator Evaluator Test
* See how it does
* Loosen evaluator test
* Continuing to implement A3C
* -y
* pin pandas to 0.19.2
* pin pandas to 0.19.2w
* Continuing to implement A3C algorithm
* Fix SDFLoader constructor args
* Membrane Permeability Data
* Membrain Permiability
* Beginnings of support for reinforcement learning
* fix for change
* minor changes
* Remove old TF version from install directions
* Try to make yapf happy
* Dense layer can omit biases
* Fixes to deepcrystal
* oomlats
* Check new formatting
* Fixing quote
* Shrink Deep Crystal logo to 150 pix
* Adds Corporate Supporters Section
* adding new logos
* Update install directions and version number
* Loosen Up requirements for Overfitting Tests
* Update Version On DockerFile

1.1.0
-----

* Fixing missed test
* layers own variables
* add test
* update meta.yaml
* make Model an sklearn BaseEstimator
* Added test cases
* Fixed failing test cases
* Fixed error
* temp save
* Added missing keyword arguments to graph layers
* dag transformer
* Commented out obsolete code
* Fixed some names and imports
* Ran yapf to update formatting
* Converted multitask fit regressor to tensorgraph
* fix empty transformers.pkl dump problem
* add seed into parse argument
* compare methods for qm
* Make jenkins continue to do tox21 instead of hyper parameter smashing
* Implemented weight decay
* L2LossLayer -> L2Loss
* gogo travis
* pass travis tests
* loosen
* PR feedback
* Lossen overfitting requirements'
* Atomic Convs Cleanup
* Can set the optimizer used by TensorGraph
* Implemented dropout and parameter initialization
* Merged changes from main branch
* Bugfixes
* benchmark\_seed\_change
* Fixed queue issues (hopefully)
* Fixing tests
* Yapf
* Rename test\_docking to test\_nbr\_list
* Convert layers and add tests
* Lazy xgboost
* fix for failure
* fix test failure
* molnet metrics change
* fix auPR
* Starting to convert layers
* auPR metric
* docs and format refinement
* Basic phantom atom test passing
* fix test failure
* fix bug in benchmark
* fix bug and yapf
* small fix
* update DAG
* moving DAG into tensorgraph
* Manual yapf
* yapf
* merge conflicts
* 1D tests passing
* More debugging
* moving into tensorgraph
* test\_overfit with higher learning rate
* Progress debugging 1D, but still buggy
* more tests
* Yapf and cleanup
* Yapf
* Changes
* Give More Room For On Evaluator Tests
* Basic vina test passing
* Began converting fully connected models to tensorgraph
* Naming Updates From PR
* yapf
* Weight Initialization and Shared Layers
* refining DTNN
* Fixed bug in tensorgraph
* First impl of Vina in Tensorgraph
* More layers and API updates
* Adding layers
* local changes
* Very crude first pass
* Link to published one shot learning paper
* refractor DTNN
* Give more leeway for correctness testing
* correct constructor for L2LossLayer
* Final Test Fixes
* Manual yapf fix
* fix for failure
* Test fixes
* Tests passing locally
* Don't use six, just use zip
* Remove Names from Tox21 GraphConv
* Move MNIST tests to examples
* Only Untar When Needed
* CR Comments
* Manual yapf fix
* YAPF
* More documentation
* Added Documentation
* yapfed
* wrap up
* YAPF
* Add in data files
* Fix bug
* Forgot to add
* pack->stack
* Ready For PR
* yapf
* Balanced accuracy score
* EZ download script
* EZ download script
* Some dataset utilities
* +mpnn
* +mpnn
* YAPF
* Turn it into a prediction
* Small bugfixes for atomic convs
* GPU porting
* examples and yapfed
* moving into contrib folder
* MIT update
* Atomic convolutional networks and scripts
* temp save
* recover change
* temp save
* temp save
* small update on readme.md
* Revert Graph Conv For tox21
* merging
* temp save
* Formatting
* CR updates
* adding weave loader
* Formatting
* Formatting
* Lazy Import
* Better GraphConvs
* update gaussian membership function
* fix
* yapfed
* add source
* weave model first draft
* fixing bugs
* weave model first draft
* save and load function
* initialize weave build
* Update README.md
* Fix hopv\_datasets customize featurizer input
* Add new datasets to 3P benchmark
* weave build
* Install Bioconda without interaction
* extend parameters
* dataset cache and new models
* building weave layers
* temporary save
* Update test\_overfit.py
* fix failure
* yapfed
* update unit tests
* DAGTransformer rebuild
* Change to single-quoted symbol
* Add default split method and fix some yapf prob
* solving conflicts
* update
* Yet more attempts at getting yapf to stop complaining
* Formatting
* docs change
* remove files
* Ignore hanging test for now
* Merged changes from master branch
* Fixed failing test cases
* Still trying to make yapf happy
* Fix bad merge with personal feature branch on the Input Layer
* Save things for queue creation
* to\_one\_hot safe
* Fix unittests by defaulting n\_classes=2
* Make yapf happy
* Formatting
* PR Updates
* Update \_\_init\_\_.py
* Added queue to TensorflowMultiTaskFitTransformRegressor
* add docs
* rebuild DAG
* yapf
* fixing faults
* CR Updates
* modify unit test
* Ready to be merged
* Update Dockerfile at same time
* Benchmark work
* fix test failure
* fixing bugs
* add masking
* update performance chart
* yapf
* add xgboost raw results

1.0.0
-----

* add benchmark\_xgboost.py
* update doc
* switch verbose to false
* update performances
* Raise Learning Rate for IRV
* update performances
* Install keras correctly
* add version to readme
* Use queue in TensorflowGraphModel
* Formatting
* Upgrade script
* Tensorflow 1.0.1
* TF 1.0.1
* update performance chart
* Vina loss now defined (minor issues remain, punting on those)
* First def of vina architecture. Broken
* Make featurizer positional
* recover changes
* Prototype new benchmark design
* fixing test failure and bug
* before merge
* Neighbor list shape tests now pass
* output reforming
* fix
* run yapf
* test\_generalize for xgboost
* minor update
* little fix
* partial fixes, but still broken
* First nbr-list impl. Tests fail
* style change
* low data benchmark
* minor update
* missing import
* install xgboost via conda
* add xgboost models
* low\_data benchmark
* refining module
* adding new datasets
* Set correct license in setup.cfg
* Small README updates
* Readme for docker image
* fix python 2 to 3 compatibility problem of adme benchmark. fix convolution parameter of chemb graph conv example
* Bugfix
* fix for failure
* style change
* unit test for DTNN
* recover changes
* yapfed
* added readme file
* example codes change
* refining model
* add in to molnet
* added adme benchmark
* multitask DTNN
* recover breaking changes
* pytorch multitask models
* Install with 'develop' and don't run nosetests
* GOGO
* Install libxrender1
* Small updates'
* yapf
* Install dependencies into \`root\` conda environment
* GOGO
* tmp
* Install deepchem from git head instead
* GOGO
* License Swap
* Update CONTRIBUTING.md
* Make link to License Agreement Work
* CLA added
* Continued neighbors work
* Add Dockerfile
* Continuing work on Vina model
* DTNN regressor
* 'batch\_to\_feed\_dict'
* DTNN build
* Prototype Custom Benchmark report
* Trying to make yapf happy
* Added option for checkpoint interval
* bug fixing
* 441 No Babel: Remove All Open Babel Dependencies
* fix for failure
* Fixed broken PCBA example
* fix style
* test modification
* style fixing
* unit test for molnet
* Change pdbfixer to conda install
* n\_features initialization
* quick fix for dc->deepchem
* Update instruction index
* Add openmm and pdbfixer installation instruction
* remove with g.as\_default() lines since these are not required no longer. formatted with yapf
* Ran yapf to adjust formatting
* Optimized one hot encoding
* style fixing
* fix new GraphConv methods' arguments bug
* debugging
* style change
* little fix
* molnet first draft
* adding raw featurizer
* First commit of vina code
* reconstruct molnet structure
* Added HOPV dataset and models
* Run yapf on qm8 example
* Added Coulomb Matrix QM8 TF-MT regressor example
* Correct return value from jenkins script for failure
* yapf again
* YAPF
* Changes
* Do Core
* Formatting
* CR Updates
* PR cleanup
* Now do it in memory
* more formatting
* Formatting:
* Go To CR
* Renames and PR cleanups
* Formatting
* No Openbabel in pdbbind benchmark
* fix style failure
* little fix
* add qm9 performances
* Code changes
* Low data updates
* small fix
* benchmark with qm9
* Added MoleculeNet to papers list
* Reorder atoms before featurizing
* Run yapf on qm9
* Add qm9 example
* Yapf run
* Updated graph conv models
* fix for tf sessions
* docs and comments on irv transformer
* update performance chart
* Install from conda instead of anaconda
* Move to deepchem master for coverage
* Update README.md
* Add badges
* Forgot to install coveralls
* First Attempt
* CR comments + pin keras=1.1.1
* CR comments + pin keras=1.1.1
* style change
* irv&lr fix
* Fix imports on tests
* Update docstrings to numpy format
* Trying to get keras and travis to play nice
* Remove OneHotTransformer
* Go To CR
* fix bug in lr
* add in hiv
* Formatting fixes
* Cleaned up some tests
* removing unneeded file
* yapf and bugfixes
* minor change
* IRV handle large dataset
* Partial fixes to tests
* style change
* fix test failure
* performance table change
* performance table update and description for IRV transformer
* qm7 add in
* classifier test overfit
* transformer test
* include rf regression
* 'update\_performance'
* Formatting
* Increase Blacklist Size
* missing butina splitter
* gdb7=>qm7
* benchmark style change
* style change
* merging master branch
* little modification
* modification of description
* implementation of IRV
* 378: Add Doctests To Travis
* 'simple\_IRV'
* Unify all CI and Readme to install via scripts/install\_deepchem\_conda.sh to install dependencies
* Add ButinaSplitter class
* Add versions to yapf
* Don't output the formatted diff twice
* Forgot to trim to only python files
* Update .style to remove bogus log line
* 394: Auto Format Using .yapf
* No more files hanging around after nosetests
* Ready For PR
* Update QM7 example and add QM7b
* Add documentation to SingletaskStratifiedSplitter
* Update Readme.md
* Update Readme.md
* Update Readme.md
* Create Readme.md
* Rename gdb7 to qm7
* Add SingletaskStratifiedSplitter test
* Implemented SingletaskStratifiedSplitter
* GDB7 to QM7; add QM7b dataset
* Jenkins.sh now removes old results before running
* GOGO
* Freeze Tensorflow
* Change results and documentation
* Stable sorting for scaffolds
* Update jenkins.sh
* Better exception logging
* Hardcode python=3.5
* Proper results location
* docs
* Go To Jenkins
* Code cleanup
* Go to test it out
* tox21
* Jenkins gogo
* Jenkins.sh
* Update Readme For scripts/install\_deepchem\_conda.sh
* Formatting
* No More gdb7
* Add ButinaSplitter class
* Add versions to yapf
* This fixes deepchem/deepchem#402
* This fixes deepchem/deecphem#402
* Don't output the formatted diff twice
* Forgot to trim to only python files
* Recommiting to get around travis flakyness
* Update .style to remove bogus log line
* 394: Auto Format Using .yapf
* Install Deepchem EZ
* No more files hanging around after nosetests
* Ready For PR
* Update QM7 example and add QM7b
* Add documentation to SingletaskStratifiedSplitter
* Back
* Update Readme.md
* Update Readme.md
* Update Readme.md
* Create Readme.md
* Rename gdb7 to qm7
* Add SingletaskStratifiedSplitter test
* Implemented SingletaskStratifiedSplitter
* GDB7 to QM7; add QM7b dataset
* Jenkins.sh now removes old results before running
* Update readme instructions
* debugging
* double equals
* No GPU on travis
* Simpler syntax try
* Try again with simpler syntax
* Don't force tensorflow -- need older protobuf
* GOGO
* Freeze Tensorflow
* Export specific tensorflow url
* Change results and documentation
* Stable sorting for scaffolds
* Uncomment out segfault code
* IRV\_classifier
* IRV transformer
* Update jenkins.sh
* CR cleanup
* GOGOGO
* IRV
* Better exception logging
* Hardcode python=3.5
* Proper results location
* docs
* Go To Jenkins
* Code cleanup
* Go to test it out
* tox21
* Jenkins gogo
* Jenkins.sh
* Install correct protobuf first
* Pin protobuf to 3.1.0
* Python36Tests: Small Changes For Python 3.6 compatability
* Fixing small bug in eval
* Merge
* PR comments update
* AbsoluteReferences
* Updates for final draft
* Hardcode RDKit Descriptors used for compatibility purposes
* Remove unnecessary exception
* Add additional tests for transforming unlabelled datasets
* Updated docs for ClippingTransformer
* Add a test and unlabelled csv file
* Unlabelled dataset support WIP
* Fix ClippingTransformer and add unit tests
* Add segfault warning after instructions
* Gpu install of tensorflow
* document performance on clintox benchmark in README.md
* register clintox dataset in benchmark.py
* scripts for training multitask and graphconv models on clintox dataset
* initial commit of clintox dataset
* little fix
* little fix
* SAMPL performance
* refractor changes
* Add conda env instructions to README.md
* gdb7
* adding SAMPL
* Update GDB7 example
* Update FitTransformRegressor tests and example
* Update Coulomb Matrix featurizer tests and examples
* Clean up transformers; add test and example for CoulombFitTransformer
* Fixes
* UV changes
* Kinase changes
* Factors files
* Core changes
* Factors update
* Kaggle changes
* Kinase changes
* UV additions
* factors changes
* Saving changes
* Saving changes
* Fixed transformations on chembl and kaggle datasets
* Partial debugging progress
* Fit works in sequential
* Ongoing refactor
* Update gdb7 benchmark with user-defined splits
* Add TensorflowCoulombMatrixRegressor and update example
* Added in cross-validation splits from reference paper
* Fix inconsistent tab error again
* Fix inconsistent tab error
* Update GDB7 tf model script and benchmark
* Modify CoulombMatrix init call in tests
* Update GDB7 example to use CoulombFitTransformer
* Add CoulombFitTransformer
* Add random sampling to predict in FitTransformRegressor
* Update FitTransformRegressor for changes in GraphModel
* Turn off some vina docking in test-suite
* Update gdb7 benchmark to use FitTransformRegressor
* FitTransformRegressor and FitTransformers now functional
* Add CoulombMatrix to dc.feat import
* Update gdb7 tf fit\_transform example
* Add self.pad\_batches parameter to Tensorflow models; tests passing
* Binding pocket specification
* Move batch padding funcs from Model to TensorflowGraphModel
* Update evaluate for pad\_batch
* Bug fix for pad\_batch in models.py; Remove gradient fcns
* Update to fit\_transformers
* Update imports and script
* Update CoulombMatrix featurizer
* Update gdb7 tf example with fit\_transformers
* fix for test
* little modification
* update performance table
* Implement CoulombRandomizationFitTransformer
* Initial implementation of TensorflowMultiTaskFitTransformRegressor
* Update KRR kernel for GDB7
* merge in gdb7 to benchmark
* Fix ValueError syntax
* indice file
* indice splitting
* Fixed bug for NormalizationTransformer on singletask datasets
* Added ValueError exception for joblib loader
* chembl into benchmark
* gdb7 modification
* Changes for updated support classifiers
* Modifications for revision
* First graph-conv file
* Removing files not used in paper
* Remove keras and update Tensorflow Command
* Removing old import
* Cleanup
* Removing \_SESSION global var
* Experimenting with disabling automatic init
* Fixing string issues for py2
* Add gitter link to readme
* Fixed sets
* Fixed graphconv
* Increased ChEMBL dataset size, and added year split
* Reverted n\_feat to 75 and nci\_rf fix
* Adding back in missing import
* More cleanup and bugfixes
* Bugfixes
* Fixing broken syntax from mask removal
* Removed mask support
* Add in missing \_normalize\_axis
* Handle floatx
* Some more import fixes
* Fixing some more imports
* Cleaning up bad imports
* Bugfix
* Fix import error
* Dealing with merge conflicts
* Removed keras dependency (first try)
* Removing Keras dependencies
* Remove dimension checks from layers
* Some bugfixese
* Removed Theano refs from comments
* Removing config support. Save/restore models through tf
* Slowly start integrating with test suite
* Fixing some indenting issues
* Starting on digesting keras code
* Some bugfixes
* Update chembl\_datasets.py
* Update chembl\_graph\_conv.py
* Update chembl\_tf\_models.py
* Added ChEMBL dataset with examples
* removed nci progressive
* Added NCI progressive MTNN example Fixed bug in delaney graph conv example
* Removed redundant and deprecated function calls from examples
* gdb7 modification
* Some progress in refactor
* Update TF install cmd in .travis.yml
* little change
* 'gdb7\_modification'
* Partial progress
* Progress in removing keras deps
* Renaming tf\_keras\_models to tf\_new\_models
* Start refactor
* tf0.12 changes
* add in performance of pdbbind
* little change
* pdbbind fix
* Add gdb7 tensorflow model
* Update hyperparameters for sklearn model
* Fix SDF reader
* Add initial sklearn GDB7 example
* Adding in factors/kinase/uv code
* Cleanup
* little change
* modify nci performance scores
* Fixing typo
* Missing py3 guardrail
* Turn down exhuastiveness and add on py3 guards
* Adding barriers for python 3
* Adding RF powered pocket selector
* Comments
* remove redundant samples in nci
* Preliminary binding pocket dataset
* little fix
* test modification
* little modification to low data benchmark
* append '-c' option to wget commands
* Saving binding pocket feat
* Bugfix and cleanup
* Pocket detector final draft
* Finds all possible binding pockets on protein
* Removes some unneeded installation steps
* Adding some more int casts
* Dealing with forgotten import statement
* Adding tests for python 3
* Loosening overfit to deal with failing test
* Adding abstract superclasses
* Changing file load
* Full deep-docking examples
* Added Docking class and test
* Initial commit of pose scorer and featurized dataset
* Adding in Vina pose generation
* small fix
* max deg increased to 10
* Commenting out defunct scripts
* Prelim dc.dock setup
* grid-featurizer updates
* Debugging
* Changing DiskDataset constructor
* Adding support for refined/full sets
* Cleanup
* Commenting out LogisticRegression
* Commenting out segfaulting tests
* small changes
* Preliminary PDBbind implementation
* add in nci dataset to benchmark
* Fixed error loading dataset without weights
* little fix
* add in test\_overfit and performance data
* Tweak to see if Docs Push works now
* small fix
* Prune old requirements and add pylint command
* add in graphconvreg
* Bugfixes
* Cleaning up some imports
* Debugging statements for docs
* Added perf link
* Cleanup
* Debugging more tests
* Debugging more tests. Added add\_shard() to DiskDataset
* adding low data results
* Some progress on fixing tests broken by refactor
* Cleanup
* updating random splitting results
* Refactoring dataloader API
* Cleanup
* Removing verbosity from deepchem
* Remove verbose
* Removing import
* Updating examples
* Fixing some import issues
* Refactoring DiskDataset
* Refactor start
* add in cross validation args
* import low data benchmark
* Update deprecated inialize\_all\_variables and op\_scope functions
* Fix checkpoint reloading
* write\_data\_to\_disk() tried to compute statistics even with compute\_feature\_statistics=False
* Kaggle bugfix
* progressive fix
* delaney bugfix
* Update README.md
* updating data
* fixing dataset position
* fixing import issue
* rename to benchmark\_hyperparam search
* parameter configuration
* fix bugs
* fix for import error
* regression model merged in benchmark
* fix for benchmark running scripts
* Updating index splitting number
* Setting to tensorflow .10 for now
* Kaggle example bugfixes
* Cleanup
* Initial delaney solubility models
* Adding Kaggle example
* Progressive multitask and joint progressive multitask more functional
* Update README.md
* Update README.md
* little fix
* adding performance chart
* explanation of args
* splitting function included in benchmark
* Progressive debugging
* little change
* adding choice of splitting function
* Removing commented out keras tests
* Adding test for frozen weights
* Adding overfit and det. prediction progressive tests
* Hopefully fixing the multiple graph issue
* Removing left-over test
* Removing more keras code
* Starting removal of Keras
* Progressive model passes basic sanity tests
* Fits without crashing
* Trying to debug progressive fit. Still broken
* fix for the seed
* Initial commit of progressive networks
* benchmark modified
* banchmark changed
* Cleanup
* Adding in run-all-benchmarks file
* Bugfix
* Dropout fix and debugging
* Added in seeds
* Leftover bugfixes
* Fix some broken tests
* DeepChem tf changes
* Update best\_results.csv
* add robust multitask classifier
* add robust multitask classifier
* add n\_tasks and n\_samples
* y-transform and untransform for CDF and power transformers
* Fix some old featurization notes
* fix for failure
* fix for test script
* add time data
* fix for benchmark script
* update of time data
* fix for test failure
* update benchmark score
* Added one-shot learning paper to publications list
* little changes
* little changes
* little changes
* little changes
* little changes
* little changes
* benchmark upgraded
* description added for logreg
* merged with new master
* Dataset loading merged, best results included
* Sider from tox
* Changes for experiments
* Benchmark modified
* Benchmark modified
* Benchmark modified
* Benchmark modified
* Benchmark modified to dc
* Benchmark modified to dc
* MUV models+load+splits
* Updated models
* Cleanup and test fix
* Cleaned up and fixed some tests
* Fixes for metric issues
* Potential fix for 1-active case
* Faster fit and fix for support sampling with missing data
* Some minor fixes to Tox21 models
* Fixing some leftover changes in test\_hyperparam\_opt
* Renaming files for deepchem->dc transition
* Fix to missed transformer
* Some more dataset loading fixes
* Fixes to transformers
* More test fixes
* Debugging failing tests
* More refactor
* Refactoring continues!
* Update README.md
* Update README.md
* Benchmark
* stratified splitter error
* fixing temp files in rfs
* changing stratified split to random stratified split
* editing tmp directories
* moving in sider sweet and toxcast
* Benchmark
* Benchmark
* Benchmark script added
* Some tweaks
* Test fixes and res model experiments
* Resi-LSTM overfit test passes
* deepchem->dc many tests
* Changes
* Continuing deepchem->dc transition
* Loosening regression to make tests more stable
* More shuffling for new import dc API
* First graph-conv example on large dataset
* Siamese model performance still poor with more training
* First support model numbers (few epochs, bad numbers)
* Adding dataset featurization code
* First attempts at siamese model
* Initial commit of low-data RFs
* Transformers use Dataset.transform()
* Adding fixed random seeds to stabilize overfit tests
* Loosening bounds on graph-conv test
* Setting random seed in tf/np for graph/support tests
* Task Splitter implementation
* time function change
* Preliminary commit of task splits
* Changes to support transformers with NumpyDataset
* Benchmark included
* Two more zip instances
* Handle zip py3
* Cleanup and py3 support and prelim resi-lstm tests
* Partial fixes for python3 failures
* Attempting to add fixed graph to prevent test runner issues
* updated openbabel install command
* Fixes for crashing tests
* Basic overfit tests now pass meaningfully
* Support models overfit with no training... Not sure if due to support/test overlap
* Overfit AttnLSTM test runs to completion, fails due to accuracy
* AttnLSTM overfit runs, but doesn't eval (failing)
* Graph topology example broken somewhere. Need to debug
* Test reveals padding issue for batches. Not sure how to fix yet
* Support generator passes basic tests
* Add in support models and simple tests (failing)
* Graph Conv Overfit and preliminary support tests
* Accuracy is nonzero now..
* Overfit test runs but fails (save/load issues I believe)
* Adding in multitask classifier
* Added sequential example topology to tests
* Added in keras layers and more tests
* benchmark
* adding benchmark test
* Cleaned up tests for ConvMolFeaturizer
* More changes
* Initial commit of graph conv code
* Local changes
* change path of dataset loading functions
* change path of dataset loading functions
* Shrinking the size to make example run faster
* Removing xrange for python3
* First commit of robust models
* First commit of robust models
* Cleanup
* Remove doubled softmax and handle keras edge case
* Fixed tensorflow predict
* circumvent the path problem of dataset loading
* change path for dataloading parts
* Changes for support models
* Minor update to documentation
* CDF and Power X transforms
* Preliminary CDF and Power Transform work
* Merging in upstream changes
* Fixed errors related to padding and Tensorflow
* Some more predict fixes
* Adding guide for contributors
* Adding table of contents
* Removing old binary file
* Removing broken example
* Local script changes
* Debugging push
* Attempting to figure out why environment vars not seen
* Trying with test environment variable
* Trying again with encrypted variables
* Attempting to get travis s3 variables set
* Moving conf into source directory
* Adding conf into correct place
* Attempting to move docs generation onto travis
* Moving scripts out of installed part of deepchem
* Getting changes together
* Removing a number of outdated RST files
* Some more cleanups and deletions
* Some more file removals
* Many changes
* Update index.rst
* Update README with "About Us"
* Handling merge
* Use mdtraj to build neighbor lists
* Bug fix
* Fixed error on Python 2
* Continuing Dataset refactoring
* Continuing refactoring of Dataset
* Some changes for vanilla graph-conv
* Beginning of Dataset refactoring
* Readme tweaks
* Activated docs-pushes on PRs
* Debugging why docs aren't getting updated
* Cleanup
* Thought better of using miniconda
* First attempt at fixes
* Anaconda instructions
* Update README to mention python 3.5 support
* Reenabled tests in test\_datasets.py
* Possible fix for error on travis
* kerasify changes
* Debugging problems with travis
* CDF Transformer (WIP)
* Support Python 3
* CDF Transformer (WIP)
* Fix FAQ
* Added openbabel failure to FAQ
* Updates to splitters
* Splitter tests now passing
* Preliminary splits implementation. Still buggy
* Bugfix
* Updating examples
* Small fix to loosen overfit test
* Should have fixed (almost) all tests
* Removing cruft
* Fix some more broken model tests
* Fixed generalization tests
* Ported overfit tests
* Porting singletask-to-multitask initial
* Partial fixes to hyperparameter opt
* Basic tensorflow test passes
* Continuing refactor of TensorflowModel
* Continuing refactor of tensorflow models
* Basic tensorflow test passes now
* cleanup
* Removing model\_params
* Progres refactoring keras and sklearn models
* Update backend information
* First step of Model refactor
* Create README.md
* Cleanup
* Getting started section
* Adding MKL FAQ
* Fixes to nblist featurization
* Update README.md
* Update README.md
* Update README.md
* Fixing bugs
* First attempt at Complex Featurizer
* Cleanup
* Fixed broken pdbbind example
* Starting refactor of complex support
* Sparse shuffle support
* Update README.md
* Update README.md
* Cleanup
* Attempted test\_api fix. Turning off dropout
* Updates to build
* Attempt at tensorflow
* Cleanup
* Cleanup
* Running all tests with Theano
* Accidentally removed keras install. Put back in
* Using theano git head
* Adding Theano support from head
* Trying to explicitly set theano
* Turning off tensorflow keras backend
* Running more tests
* Run all overfit tests
* Another test
* Wrong command
* Minimal travis config for debug
* Removing theano backend
* Swapping up to latest keras
* Fix to padding
* Fixed README for scikit-learn and nose
* Cleanup
* Potential fixes
* Padding batches
* Some test fixes and cleanup
* Preliminary commit for arbitrary object featurizers
* Changed file directory in test cases for feat\_multitask\_example
* Updated implementation of LogTransformer with base case
* Implementation of log transform with selection options for features and tasks
* Cleanup
* Adds NeighborListAtomicCoordinates and tests
* Adding tests for neighborlist. Still bugs
* Implementation of Neighbor-list featurization in progress
* New comments and cleanup
* Cleanup and some test fixes
* Cleanup and hyperparameter fix incorporation
* Batch of changes
* Cleanup
* Removing det\_iterbatches
* Singletask DNN initial
* removed space
* tabs
* style fixes
* more bugs
* minor bug:
* tidying up
* init syntax error
* decomposed to ensure valid and test split have hits. need to test
* split currently works, but fails valid split. decomposing to avoid repeating code
* fixing tests
* more testing
* test stuff
* more
* more fixes
* more fixing
* fixing test bug
* rewrote code -- changed from pandas implementation to numpy
* test
* rewriting
* Cleanup
* Bug fix in Dataset select function
* test
* trying to fix tests
* running testsg
* fixing merge issues -- fixed
* init
* edited csv
* more
* more tests
* more
* more debugging
* trying to fix test
* Commented out sparsity test to verify integrity of y array
* testing
* sparse
* sp
* Sparse
* stuff
* sparse
* sparse
* Sparse
* updating sparsity test
* adding test to test for initial sparsity
* edited author
* finished tests -- passes
* tests
* testing
* adding robustness
* numpy split issue
* fixes
* fixing tests
* fixing and adding tests
* fixed bugs in tests, but not done
* stratified splitter code
* update
* sparse stuff
* testing something
* Adding multiple rounds of reshard shuffle
* Shuffle each shard added
* Variants of shuffling
* First attempts at faster shuffling routine
* Fixing small bug in datasets
* Fixes to metrics/datasets
* fixes to multitask handling
* Cleanup
* Leftover changes
* Renamed DataFeaturizer to DataLoader
* Some bugfixes
* Some debugging progress
* Simple shape fix
* Small debugging progress. Continue in follow-on commits
* Potential speedups
* Debugging broken tests
* Some test fixes
* Simplifying user defined features
* First draft of stripped down featurization
* Some debug statements to profile
* Fixing minor break
* Fixed some bugs
* First draft of new featurization attempt
* Final edits (hopefully)
* Attempting to fix spacing issues
* Committing latest change
* Updated installation direction
* Cleanup
* Better multitask data splits
* Cleanup
* Splitting seems to work reasonably on NCI dataset now
* Added select feature to dataset
* Fixing broken tests
* Fixing one of broken tests. Couple more remain
* Fixes to parallel featurization
* Some fixes to NCI datasets/loading
* Making it easier to process sharded datasets
* fixing small issues
* changed load disk method to accept list of multiple csv files and other random small issues
* wrote load from two files function to handle nci dataset
* Removing debugging cruft
* Removing yet another logging import
* Removing obsolete logging import that's causing problems
* Yet another config tweak for travis
* More fiddling with travis
* Trying to handle travis issues
* nci data and rf & dnn scripts
* Bag of recent changes
* Cleanup
* next round of edits
* Fixes
* Fixes to multitask data loading
* Some bugfixes
* Sample pdbbind
* Grab-bag of changes
* Fixes to get examples running again
* Cleanup
* Fixes to datasets tests
* Fixed test\_load
* Fixes to tox21 sklearn example
* Fixes to more tests
* More test refactorings
* Still more test fixes
* test fixes
* Splits on datasets
* Yet more refactoring
* Partial fix for data split issues
* Fixed some of the tests
* First round of refactoring
* PCBA TF Example
* Cleanup
* PCBA Logistic models
* Cleanup
* Fix tricky error with transformers
* Fixed broken transformers
* First pass at fix for relative paths
* Now have failing test case
* Remove old sklearn models example
* Remove debug flag
* GPL changes
* MUV models
* Cleanup
* Potential fix to leakage bug
* Add tests for proper dropping of unparseable compounds
* Update QuantumMachine notebook with sanely performing models and results
* Bug fix for CoulombMatrix class
* Fix sdf reader test description
* Add .sdf reader test
* Removed unneeded lines in featurizers/\_\_init\_\_.py
* New QuantumMachine notebook with featurization
* SDF input file reader functional
* Cleanup
* Some cleanup and minor-bugfixes on tox21 examples
* Potential bugfix
* Finalizing BACE DNN example
* Final draft of bace\_rf
* BACE models
* Loading bace data
* Trying new keras/theano out
* Cruft cleanup
* Fixing some broken tests
* Cleaning cruft
* Moving code in to start testing process
* Debugging of multitask
* Turns out reload tests weren't committed
* Cleanup and bug fixes
* Multitask tests
* Cleanedup examples
* Cleaned up MUV simple example
* Comment out \_pad\_batch
* Cleanup of cruft code
* Debug fix for regression
* Many changes
* Added restore test which tensorflow models pass\!
* Moved dataset reload tests to datasets/tests
* A few functions for processing and merging .CSV files
* Some last renaming issues
* Some more issues from renaming
* Fix relative path in test lookup
* Remove cruft tf files and do rename
* First round of refactoring to tests
* Rename
* Cleanup pass
* Simplifying tests
* Sparse ROC-AUC tests pass
* Believe now that loss functions for keras/tf don't weight positives. Need test case
* Fixes to Metrics. Really need Metrics tests..
* Fixes to featurization code
* Cleaned up some leftover comments
* Fixed some more bugs with multitasking output sizes
* Fixing some sizing bugs and conventions for models
* Some bugfixes
* Deleting content
* Finished adding basic overfit tests. Need to clean up
* Have a tensorflow overfit test failing..
* Add simple overfit test for sklearn. Still broken
* Added simple TF overfit test. Currently failing..
* Potential fixes
* Fixing uncovered bug in Dataset.from\_numpy()
* Add prediction printing back in
* Fix for 0d numpy arrays
* added molecular convolution models
* Fix most broken tests. One last broken test remains
* Cleanup of code. Some tests still broken
* Some more debugging
* Some fixes for sklearn models
* More bugfixes
* Some more test fixes
* First steps in debuggin
* Singletask numbers on MUV are now functional
* Fix to multitask/classification metrics
* Fixing some more broken tests
* Fixing broken tests
* Add new multitask order tests
* Some test debugging
* Add tasks parameter to models to ensure tasks retain ordering
* Fixes for broken tests
* Debugging singletask models
* Fix bug
* Fix comment in Model.predict
* Small fix to MolecularWeightSplitter
* Test fixes and cleanup
* Some bugfixes
* Basic molecular weight splitter class
* Remove Model and Transformer debug code
* Initial MW splitter framework
* Singletask models on MUV
* Cleaning up dynamic transform on fit/predict
* Reloading test and bugfix
* Added missing import back in
* Added SingletaskToMultitask
* Fix broken tests
* Some cleanup
* Some fixes to tests
* Forgot to add in new files
* First commit of Splitter class
* New BalancingTransformer + tests
* Basic transformers test suite
* Fix regressor cost
* Transform-on-batch in memory
* Fix merge conflict
* Transform on predict
* Dynamic transform on batch works with a data\_shape trick
* update\_state flag added to CoulombBinarizationTransform
* More test renaming and a fix in hyperparamopt
* Fix sklearn models with fit\_transformers
* Fixed API test descriptions
* Fix for HyperparamOpt with no fit\_transformers
* Update KerasModel and SKlearnModel for fit\_transformers
* Update HyperparamOpt for fit\_transformers
* Empty dataset creation + batch dataset creation
* Remove unneeded moments calculation
* Starting transform\_on\_batch
* Removed print statement
* Safe normalization for CoulombBinarizationTransformer
* Merging in with recent changes
* Adding tests for dataset statistics
* Dynamically update Transformer stats
* Write dataset moments to disk
* Add feature-wise max to binarization transform
* Minimal dataset test suite
* Update quantum machine notebook
* Forgot to commit new tests
* Fixes for broken tests
* Removed some print statements
* Fixes to get MUV models to run to completion. Bad results though
* Final version of processing script
* Added generated versions of datasets
* Non-cleaned up final draft
* Fixed some indexing and printing issues
* Some more memory overhead trimming
* Using new version
* Some updates to scripts
* Fix X,y reading for all transformer classes
* Add update\_moments function to Dataset
* Add Coulomb Transformers
* Some fixes to tests
* Fix HyperparamOpt for Keras models
* Cleanup
* Adds multitask metric support
* Added multiprocessing support to vs script
* First commit of vs-datasets processing scripts
* Adding initial (failing) multitask hyperparam opt test
* Changed print statements to log statements
* Forgot to add actual tests
* Basic tests for HyperparamOpt class
* Added metrics class
* Cleanup of some commented out code
* Some more test fixes
* added docking convenience scripts
* fixed problems with docking
* Some test fixes
* Finished writing TensorflowGraph class. Now debugging tests
* Update .travis.yml
* Started untangling tf graphs from tf models
* Updated quantum\_machine.ipynb
* Initial commit of MUV notebook
* Add Quantum Machine example and dataset
* Add MAE metric to evaluator
* Remove outstanding reference to ModelConfig
* Removing proto conversion script
* Removing some unneeded model\_config files
* Some cleanup and renaming
* Cleanup
* Forgot to add in test\_tf\_api
* Trying trusty build
* Trying to upgrade g++
* Trying conda tensorflow for tests
* Tests passing locally
* generalized vina to
* py3 for datasets/construct\_pdbbind\_df.py
* Update \_\_init\_\_.py
* added check to see if already done job
* added a combination of primitives
* added ability to dock to DUD-E
* Able to run tf models in prediction mode. Still crashes due to tf/deepchem eval mismatch
* Removed use of ModelConfig class
* Started phasing out ModelConfig objects
* Now crashing at save step
* Some progress in debugging tfvs tests
* Added iterbatches to Dataset
* Did lots of surgery for tensorflow models. Now passing simplest possible tests
* Adding crystal datastructure
* tests now pass
* Continuing tf integration
* Beginning incorporation of tfvs code into deepchem
* Removing print statements
* Another fix
* Small type fix
* Most recent version of code
* Adjusted selection strings to work with NGL
* Couple more edits
* fix indentation
* fix link for keras
* Added classifiers to BACE notebook
* Handling merge conflicts
* Committing before merge from upstream
* added some visualization convenience functions
* Delete qm\_user-defined.py
* Delete .qm\_user-defined.py.swp
* Add User-Defined API test
* Updated BACE notebook
* Added new test and BACE ipynb
* Started fixing bugs in protein-ligand-complex tutorial
* Fixed solubility notebook and added test
* Nosetests now passing for new transforms
* Forgot to add transformers file
* First commit of transformer code
* removed openMP parallelization as option
* fixed travis.yml
* reverted nnscore.py
* removed tutorial\_checkpoint and reverted nnscore.py
* deleted unncessary files
* updated travis and coulomb\_matrices
* added ipython parallelization scripts
* Move \_add\_user\_specified\_features into \_standardize\_df.  Cleaned up some prints
* User\_specified\_features
* added ipyparallel parallelization
* Added featurizer CoulombMatrixEig + tests
* Fix broken tests
* Adding sudo:required to see if build probs go away
* Fixed \_standardize\_df for non-user defined features.  Removed print statements from deep.py
* Fixed user\_defined\_features usage in featurize.py.  Fixed usage of featurize function in pdbbind\_nnscore.py
* Added complex backup
* Local changes
* Saved solubility printed
* fixed tutorial issue
* added compelx featurization to tutorial
* Changes to website
* Remove modeler
* Saving notebook
* First commit of completed model. Will rerun on GPU before final commit
* Committing first draft of solubility ipynb
* Local changes for solubility tutorial
* Fixing py3 shift broken by merge
* Merging with new API
* Fixing travis issues
* Partial python 3 fixes
* created tutorial
* merged changes from master
* fixed multitask case
* added ability to use any sklearn model
* Fixing typo in AWS bucket name
* Making secure vars global
* Adding print statements to push to debug secure-env vars
* Updating secure travis env variables
* uncommenting PR check
* A few fixes to docs generation
* Adding many local docs files to PR
* Misnamed sphinx-build
* Adding s3cmd install back in
* Removing unnecessary after\_success build
* Changing after\_success to test s3 docs deployment
* Cleanup
* Removed use of tempdir
* Trying to debug missing path issue
* Yet another alteration
* Yet another alteration
* Moving stuff back into .travis.yml
* Trying to debug import failures
* Forgot to add in install file
* Cleaning up .travis.yml. Still debugging travis breakage
* First attempt at automatic docs-build+push

0.0.4
-----

* Yet another setup change

0.0.3
-----

* Moving to pbr for install

0.0.2
-----

* Making non-develop install possible

0.0.1
-----

* Removing old-style prints and making build only on py 2.7
* One more try at debugging
* Removed RDKIT dep and fixed broken tests
* Only testing on python 2.7 due to various python 3 issues
* First version of travis build
* merged grid featurization into deepchem
* added hyperparameter search, fixed memory errors
* Removed ob\_utils
* surgery
* pylint/nosestests fixes
* fixes to multitask
* Fixes to integration tests
* Some local docs changes
* fixed failing tests
* added nnscore featurization and nosetest
* First reasonable version of docs
* Dummy sphinx generated
* Gzipped to compress
* Adding CSV datasets for muv/tox21
* Pylinted all the code
* Changes for external data eval
* Adding features to allow prediction workflow
* Passing singletask/multitask test suite
* Adding preliminary multitask tests
* Debugged issue in df\_to\_numpy
* Added simple API test for singletask vector models
* Small merge conflict fix
* Removed some print statements
* removed print statements
* miscellaneous OOP fixes
* added dataset
* solved some bugs
* Eval bug now looks fixed. Need to fix fit() to handle minibatches
* Fixed insidious typo in train\_test\_split causing eval issues. Some NaN issues now though
* Fixed some bugs in sklearn model usage
* Cleaned up modeler, but eval still broken
* API fully converted. Eval still broken though..
* Fixed bug in normalization. Still bug in train/test eval
* STDNN now runs to completion, but numbers look a little suspect
* Debugged Sample class. Still crashes downstream
* Cleaned up modeler some
* First pass of Samples class
* Halfway through refactoring data-load/featurization code
* Added abstract base KerasModel class
* First stage of cleanup
* First stage of cleanup
* Save/load integrated into class
* Rename deep\_chem to deepchem
* More progress in OO. Debugging model stats
* Continuing OO refactor
* Simple FeaturizedDataset tests are passing
* Basic structure of FeaturizedDataset
* Added Vanilla DNN Model impl. Stil debugging eval
* improved normalization and added parallelization
* added additional sharding to deal with GPU mem limit
* fixed issue with border mode
* fixed convolutional 3D fitting and eval
* Fixed previous commit. Now crashing on 3D CNN's
* major refactor. added eval\_on\_batch
* added new model and fit framework
* merged changes
* started making accept multiple feature files
* Cleanup
* Multitask fixes
* Multitask eval runs to completion. Need to fix csv saving still
* pylint fixes and python3 upgrades
* Further changes to preprocess
* Singletask sklearn/keras models training
* Singletask now running, but need to handle missing values cogently
* Initial commit of refactored dataset handling
* Pause before design review on avoiding feature-array dup in singletask
* Fixed merge conflicts
* Fixes to multitask loading pipeline
* made data munging more efficient
* More pylint for featurize
* Some more pylint fixes
* pylint fixes on modeler
* Extra fixes to make model construction easier from cmdline
* Made a few changes to make it easier to invoke model from shell script wrapper
* model command now builds basic models
* Laying further groundwork for model command
* Added first version of model command. Need to wire in connections to make it run
* Changes to linux installation
* Fixed hyperlinks in linux installation guide
* Fixed some formatting issues with the linux installation guide
* Added linux installation guide to README.md
* Fixed issues that came up in analyzing BACE dataset
* Some cleanup to remove cruft code
* Finally fixed last bugs in undoing transform
* Fixed bugs in undo\_transform\_outputs
* Undoing transforms is partially debugged
* Initial changes to save store transformed data
* Added ability to save keras models
* Now saving train/test data separately. Allows for eval of model on train and on test separately
* Removed extraneous imports and updated CSV files to display molecular IDs
* Minor changes for CANVAS loading
* Got model to report correct R^2
* Narrowing down bug to something wrong in modeler eval
* First stab at an added transform command
* More cleanup. Last commit before start of some API surgery
* Some cleanup in preparation for PR
* Some more loading changes
* Made featurization use vs\_utils API instead of calling script
* Added saving capabilities (for sklearn) and got models to train and evaluate. Still buggy though
* required changes to load CANVAS features
* Added vs\_utils to README
* First round of changes for subcommand architecture
* changes to standard
* Factored out evaluation code into separate function
* removed print and deprecated functions
* removed pycs, added .gitignore
* removed txt files
* removed pyc files
* improved functionality for featurization
* Resolved merge issues
* compatibility with 3d grid features
* fixed data processing
* Readded the code that removed the first line of csv
* Added -delimiter flag for csv input. Other fixes
* Last changes
* Adding CSV output support
* Fixed a few .csv and .xlsx file processing bugs
* Specified train/test splits now work. Thresholding for regression datasets now works
* Second batch of changes. Descriptors now work. Code for specified train/test in place, but not working yet
* Large batch of changes for descriptors. Changes broke vanilla deep-model training
* Making changes for end of day
* Responses to reviews
* Fixed some lint
* Batch of changes to fix vanilla multitask networks
* Removed unneeded import
* Changes in response to review
* SDF processing
* More tweaks
* Able to train and evaluate 3D CNNs
* first commit
* Next batch of changes required for 3D CNNs
* First steps for 3D\_CNN support
* Removing duplicated public data files
* Adding preliminary 3D models
* Moved back to eval\_models
* Deep Docking Changes
* Added changes to process scripts
* Changes required to run PCBA (without fixing CV split issue.)
* Removed defunct add\_descriptor support
* Local changes
* Added support for weighting positives
* Local improvements
* Changes required to run RFs on globavir data
* Added beginnings of dataset-processing code
* First version that should be runnable on sherlock
* Added singletask/multitask support
* First run-through to completion
* First round of changes to run from package
* Adding \_\_init\_\_.py files
* Forgot to add \_\_init\_\_.py files
* First round of refactoring to fit new structure
* Bulk movement of code from private repo
* Adding license and setup file
* first commit
