!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module _wdm_lib ! in 
    interface  ! in :wdm
!        subroutine wdsysd(idate) ! in :wdm:DTTM90.f
!            integer dimension(4) :: idate
!        end subroutine wdsysd
!        subroutine sydatm(yr,mo,dy,hr,mn,sc) ! in :wdm:DTTM90.f
!            integer :: yr
!            integer :: mo
!            integer :: dy
!            integer :: hr
!            integer :: mn
!            integer :: sc
!        end subroutine sydatm
!        subroutine sydate(yr,mo,da) ! in :wdm:DTTM90.f
!            integer :: yr
!            integer :: mo
!            integer :: da
!        end subroutine sydate
!        subroutine sytime(hr,mn,sc) ! in :wdm:DTTM90.f
!            integer :: hr
!            integer :: mn
!            integer :: sc
!        end subroutine sytime
!        subroutine tsbtim(tunit,tstep,dtrans,qualfg) ! in :wdm:TSBUFR.f
!            integer :: tunit
!            integer :: tstep
!            integer :: dtrans
!            integer :: qualfg
!            integer :: cfilun
!            integer :: cdsn
!            integer :: ctu
!            integer :: cts
!            integer :: ctrans
!            integer :: cqual
!            integer dimension(300) :: bfilun
!            integer dimension(300) :: bdsn
!            integer dimension(300) :: btu
!            integer dimension(300) :: bts
!            integer dimension(300) :: btrans
!            integer dimension(300) :: bqual
!            integer dimension(6,300) :: bsdate
!            integer dimension(300) :: bnval
!            integer dimension(300) :: bsrec
!            integer dimension(300) :: bnrec
!            integer dimension(300) :: bdatid
!            real dimension(768,300) :: tsbuf
!            integer :: numid
!            integer :: frerec
!            common /ctsbuf/ cfilun,cdsn,ctu,cts,ctrans,cqual,bfilun,bdsn,btu,bts,btrans,bqual,bsdate,bnval,bsrec,bnrec,bdatid,tsbuf,numid,frerec
!        end subroutine tsbtim
!        subroutine tsbwds(wdmsfl,dsn) ! in :wdm:TSBUFR.f
!            integer :: wdmsfl
!            integer :: dsn
!            integer :: cfilun
!            integer :: cdsn
!            integer :: ctu
!            integer :: cts
!            integer :: ctrans
!            integer :: cqual
!            integer dimension(300) :: bfilun
!            integer dimension(300) :: bdsn
!            integer dimension(300) :: btu
!            integer dimension(300) :: bts
!            integer dimension(300) :: btrans
!            integer dimension(300) :: bqual
!            integer dimension(6,300) :: bsdate
!            integer dimension(300) :: bnval
!            integer dimension(300) :: bsrec
!            integer dimension(300) :: bnrec
!            integer dimension(300) :: bdatid
!            real dimension(768,300) :: tsbuf
!            integer :: numid
!            integer :: frerec
!            common /ctsbuf/ cfilun,cdsn,ctu,cts,ctrans,cqual,bfilun,bdsn,btu,bts,btrans,bqual,bsdate,bnval,bsrec,bnrec,bdatid,tsbuf,numid,frerec
!        end subroutine tsbwds
!        subroutine tsbget(sdate,nval,rval,retcod) ! in :wdm:TSBUFR.f
!            integer dimension(6) :: sdate
!            integer, optional,check(len(rval)>=nval),depend(rval) :: nval=len(rval)
!            real dimension(nval) :: rval
!            integer :: retcod
!            integer :: cfilun
!            integer :: cdsn
!            integer :: ctu
!            integer :: cts
!            integer :: ctrans
!            integer :: cqual
!            integer dimension(300) :: bfilun
!            integer dimension(300) :: bdsn
!            integer dimension(300) :: btu
!            integer dimension(300) :: bts
!            integer dimension(300) :: btrans
!            integer dimension(300) :: bqual
!            integer dimension(6,300) :: bsdate
!            integer dimension(300) :: bnval
!            integer dimension(300) :: bsrec
!            integer dimension(300) :: bnrec
!            integer dimension(300) :: bdatid
!            real dimension(768,300) :: tsbuf
!            integer :: numid
!            integer :: frerec
!            common /ctsbuf/ cfilun,cdsn,ctu,cts,ctrans,cqual,bfilun,bdsn,btu,bts,btrans,bqual,bsdate,bnval,bsrec,bnrec,bdatid,tsbuf,numid,frerec
!        end subroutine tsbget
!        subroutine wdbase(wdmsfl,dsn,sdate,tbsdat,tgroup,grsdat,gredat,maxgrp,retcod) ! in :wdm:TSBUFR.f
!            integer :: wdmsfl
!            integer :: dsn
!            integer dimension(6) :: sdate
!            integer dimension(6) :: tbsdat
!            integer :: tgroup
!            integer dimension(6) :: grsdat
!            integer dimension(6) :: gredat
!            integer :: maxgrp
!            integer :: retcod
!        end subroutine wdbase
!        subroutine tsbclr(wdmsfl,dsn) ! in :wdm:TSBUFR.f
!            integer :: wdmsfl
!            integer :: dsn
!            integer :: cfilun
!            integer :: cdsn
!            integer :: ctu
!            integer :: cts
!            integer :: ctrans
!            integer :: cqual
!            integer dimension(300) :: bfilun
!            integer dimension(300) :: bdsn
!            integer dimension(300) :: btu
!            integer dimension(300) :: bts
!            integer dimension(300) :: btrans
!            integer dimension(300) :: bqual
!            integer dimension(6,300) :: bsdate
!            integer dimension(300) :: bnval
!            integer dimension(300) :: bsrec
!            integer dimension(300) :: bnrec
!            integer dimension(300) :: bdatid
!            real dimension(768,300) :: tsbuf
!            integer :: numid
!            integer :: frerec
!            common /ctsbuf/ cfilun,cdsn,ctu,cts,ctrans,cqual,bfilun,bdsn,btu,bts,btrans,bqual,bsdate,bnval,bsrec,bnrec,bdatid,tsbuf,numid,frerec
!        end subroutine tsbclr
!        subroutine tsbini ! in :wdm:TSBUFR.f
!            integer :: cfilun
!            integer :: cdsn
!            integer :: ctu
!            integer :: cts
!            integer :: ctrans
!            integer :: cqual
!            integer dimension(300) :: bfilun
!            integer dimension(300) :: bdsn
!            integer dimension(300) :: btu
!            integer dimension(300) :: bts
!            integer dimension(300) :: btrans
!            integer dimension(300) :: bqual
!            integer dimension(6,300) :: bsdate
!            integer dimension(300) :: bnval
!            integer dimension(300) :: bsrec
!            integer dimension(300) :: bnrec
!            integer dimension(300) :: bdatid
!            real dimension(768,300) :: tsbuf
!            integer :: numid
!            integer :: frerec
!            common /ctsbuf/ cfilun,cdsn,ctu,cts,ctrans,cqual,bfilun,bdsn,btu,bts,btrans,bqual,bsdate,bnval,bsrec,bnrec,bdatid,tsbuf,numid,frerec
!        end subroutine tsbini
!        subroutine carvar(lena,cary,lenv,cvar) ! in :wdm:UTCHAR.f
!            integer, optional,check(len(cary)>=lena),depend(cary) :: lena=len(cary)
!            character(len=1) dimension(lena) :: cary
!            integer :: lenv
!            character*(*) :: cvar
!        end subroutine carvar
!        subroutine chdece(len_bn,str,rval,errflg) ! in :wdm:UTCHAR.f
!            integer, optional,check(len(str)>=len_bn),depend(str) :: len_bn=len(str)
!            character(len=1) dimension(len_bn) :: str
!            real :: rval
!            integer :: errflg
!            real(kind=8) :: d0min
!            real(kind=8) :: dp1min
!            real(kind=8) :: d0max
!            integer(kind=4) :: rprec
!            integer(kind=4) :: dprec
!            real(kind=4) :: r0min
!            real(kind=4) :: rp1min
!            real(kind=4) :: r0max
!            common /dconst/ d0min,dp1min,d0max
!            common /iconst/ rprec,dprec
!            common /rconst/ r0min,rp1min,r0max
!        end subroutine chdece
!        subroutine chinte(len_bn,str,ival,errflg) ! in :wdm:UTCHAR.f
!            integer, optional,check(len(str)>=len_bn),depend(str) :: len_bn=len(str)
!            character(len=1) dimension(len_bn) :: str
!            integer :: ival
!            integer :: errflg
!        end subroutine chinte
!        function chkstr(len_bn,nstr,str1,str2) ! in :wdm:UTCHAR.f
!            integer, optional,check(len(str1)>=len_bn),depend(str1) :: len_bn=len(str1)
!            integer, optional,check(shape(str2,1)==nstr),depend(str2) :: nstr=shape(str2,1)
!            character(len=1) dimension(len_bn) :: str1
!            character(len=1) dimension(len_bn,nstr),depend(len_bn) :: str2
!            integer :: chkstr
!        end function chkstr
!        subroutine chrchr(len_bn,str1,str2) ! in :wdm:UTCHAR.f
!            integer, optional,check(len(str1)>=len_bn),depend(str1) :: len_bn=len(str1)
!            character(len=1) dimension(len_bn) :: str1
!            character(len=1) dimension(len_bn),depend(len_bn) :: str2
!        end subroutine chrchr
!        function chrdec(len_bn,str) ! in :wdm:UTCHAR.f
!            integer, optional,check(len(str)>=len_bn),depend(str) :: len_bn=len(str)
!            character(len=1) dimension(len_bn) :: str
!            real(kind=8) :: d0min
!            real(kind=8) :: dp1min
!            real(kind=8) :: d0max
!            integer(kind=4) :: rprec
!            integer(kind=4) :: dprec
!            real(kind=4) :: r0min
!            real(kind=4) :: rp1min
!            real(kind=4) :: r0max
!            real :: chrdec
!            common /dconst/ d0min,dp1min,d0max
!            common /iconst/ rprec,dprec
!            common /rconst/ r0min,rp1min,r0max
!        end function chrdec
!        function chrdpr(len_bn,str) ! in :wdm:UTCHAR.f
!            integer, optional,check(len(str)>=len_bn),depend(str) :: len_bn=len(str)
!            character(len=1) dimension(len_bn) :: str
!            real(kind=8) :: d0min
!            real(kind=8) :: dp1min
!            real(kind=8) :: d0max
!            integer(kind=4) :: rprec
!            integer(kind=4) :: dprec
!            real(kind=4) :: r0min
!            real(kind=4) :: rp1min
!            real(kind=4) :: r0max
!            double precision :: chrdpr
!            common /dconst/ d0min,dp1min,d0max
!            common /iconst/ rprec,dprec
!            common /rconst/ r0min,rp1min,r0max
!        end function chrdpr
!        subroutine chrdel(len_bn,pos,string_bn) ! in :wdm:UTCHAR.f
!            integer, optional,check(len(string_bn)>=len_bn),depend(string_bn) :: len_bn=len(string_bn)
!            integer :: pos
!            character(len=1) dimension(len_bn) :: string_bn
!        end subroutine chrdel
!        function chrdig(chr) ! in :wdm:UTCHAR.f
!            character*1 :: chr
!            integer :: chrdig
!        end function chrdig
!        subroutine chrins(len_bn,col,char_bn,string_bn) ! in :wdm:UTCHAR.f
!            integer, optional,check(len(string_bn)>=len_bn),depend(string_bn) :: len_bn=len(string_bn)
!            integer :: col
!            character*1 :: char_bn
!            character(len=1) dimension(len_bn) :: string_bn
!        end subroutine chrins
!        function chrint(len_bn,str) ! in :wdm:UTCHAR.f
!            integer, optional,check(len(str)>=len_bn),depend(str) :: len_bn=len(str)
!            character(len=1) dimension(len_bn) :: str
!            integer :: chrint
!        end function chrint
!        function cknblk(len_bn,cbuf) ! in :wdm:UTCHAR.f
!            integer, optional,check(len(cbuf)>=len_bn),depend(cbuf) :: len_bn=len(cbuf)
!            character(len=1) dimension(len_bn) :: cbuf
!            integer :: cknblk
!        end function cknblk
!        function crinte(errint,len_bn,str) ! in :wdm:UTCHAR.f
!            integer(kind=4) :: errint
!            integer(kind=4), optional,check(len(str)>=len_bn),depend(str) :: len_bn=len(str)
!            character(len=1) dimension(len_bn) :: str
!            integer :: crinte
!        end function crinte
!        function crintx(len_bn,str) ! in :wdm:UTCHAR.f
!            integer, optional,check(len(str)>=len_bn),depend(str) :: len_bn=len(str)
!            character(len=1) dimension(len_bn) :: str
!            integer :: crintx
!        end function crintx
!        subroutine ctrstr(len_bn,title) ! in :wdm:UTCHAR.f
!            integer, optional,check(len(title)>=len_bn),depend(title) :: len_bn=len(title)
!            character(len=1) dimension(len_bn) :: title
!        end subroutine ctrstr
!        subroutine cvarar(lenv,cvar,lena,cary) ! in :wdm:UTCHAR.f
!            integer :: lenv
!            character*(*) :: cvar
!            integer, optional,check(len(cary)>=lena),depend(cary) :: lena=len(cary)
!            character(len=1) dimension(lena) :: cary
!        end subroutine cvarar
!        subroutine datchr(yr,mo,dy,olen,dbuff) ! in :wdm:UTCHAR.f
!            integer :: yr
!            integer :: mo
!            integer :: dy
!            integer :: olen
!            character(len=1) dimension(10) :: dbuff
!        end subroutine datchr
!        subroutine datlst(date,dstrng,len_bn,errcod) ! in :wdm:UTCHAR.f
!            integer dimension(6) :: date
!            character(len=1) dimension(21) :: dstrng
!            integer :: len_bn
!            integer :: errcod
!        end subroutine datlst
!        subroutine decchr(reain,length,just,jlen,str) ! in :wdm:UTCHAR.f
!            real :: reain
!            integer, optional,check(len(str)>=length),depend(str) :: length=len(str)
!            integer :: just
!            integer :: jlen
!            character(len=1) dimension(length) :: str
!            real(kind=8) :: d0min
!            real(kind=8) :: dp1min
!            real(kind=8) :: d0max
!            integer(kind=4) :: rprec
!            integer(kind=4) :: dprec
!            real(kind=4) :: r0min
!            real(kind=4) :: rp1min
!            real(kind=4) :: r0max
!            common /dconst/ d0min,dp1min,d0max
!            common /iconst/ rprec,dprec
!            common /rconst/ r0min,rp1min,r0max
!        end subroutine decchr
!        subroutine dprchr(dprin,length,just,jlen,str) ! in :wdm:UTCHAR.f
!            double precision :: dprin
!            integer, optional,check(len(str)>=length),depend(str) :: length=len(str)
!            integer :: just
!            integer :: jlen
!            character(len=1) dimension(length) :: str
!            real(kind=8) :: d0min
!            real(kind=8) :: dp1min
!            real(kind=8) :: d0max
!            integer(kind=4) :: rprec
!            integer(kind=4) :: dprec
!            real(kind=4) :: r0min
!            real(kind=4) :: rp1min
!            real(kind=4) :: r0max
!            common /dconst/ d0min,dp1min,d0max
!            common /iconst/ rprec,dprec
!            common /rconst/ r0min,rp1min,r0max
!        end subroutine dprchr
!        function rwdigs(rval) ! in :wdm:UTCHAR.f
!            real :: rval
!            integer :: rwdigs
!        end function rwdigs
!        function dwdigs(dval) ! in :wdm:UTCHAR.f
!            double precision :: dval
!            integer :: dwdigs
!        end function dwdigs
!        subroutine decchx(reain,len_bn,sigdig,decpla,str) ! in :wdm:UTCHAR.f
!            real :: reain
!            integer, optional,check(len(str)>=len_bn),depend(str) :: len_bn=len(str)
!            integer :: sigdig
!            integer :: decpla
!            character(len=1) dimension(len_bn) :: str
!        end subroutine decchx
!        function digchr(dig) ! in :wdm:UTCHAR.f
!            integer :: dig
!            character(len=1) :: digchr
!        end function digchr
!        subroutine intchr(intin,lena,just,jlen,strng) ! in :wdm:UTCHAR.f
!            integer :: intin
!            integer, optional,check(len(strng)>=lena),depend(strng) :: lena=len(strng)
!            integer :: just
!            integer :: jlen
!            character(len=1) dimension(lena) :: strng
!        end subroutine intchr
!        function lenstr(len_bn,str) ! in :wdm:UTCHAR.f
!            integer, optional,check(len(str)>=len_bn),depend(str) :: len_bn=len(str)
!            character(len=1) dimension(len_bn) :: str
!            integer :: lenstr
!        end function lenstr
!        subroutine lftstr(len_bn,title) ! in :wdm:UTCHAR.f
!            integer, optional,check(len(title)>=len_bn),depend(title) :: len_bn=len(title)
!            character(len=1) dimension(len_bn) :: title
!        end subroutine lftstr
!        subroutine prtlin(date,numdsn,data,wdth,sgfd,dpla,thrsh,olen,tbuff) ! in :wdm:UTCHAR.f
!            integer dimension(6) :: date
!            integer, optional,check(len(data)>=numdsn),depend(data) :: numdsn=len(data)
!            real dimension(numdsn) :: data
!            integer :: wdth
!            integer :: sgfd
!            integer :: dpla
!            real dimension(2) :: thrsh
!            integer :: olen
!            character(len=1) dimension(250) :: tbuff
!        end subroutine prtlin
!        subroutine prtlno(date,numdsn,data,wdth,sgfd,dpla,dtfg,olen,tbuff) ! in :wdm:UTCHAR.f
!            integer dimension(6) :: date
!            integer, optional,check(len(data)>=numdsn),depend(data) :: numdsn=len(data)
!            real dimension(numdsn) :: data
!            integer :: wdth
!            integer :: sgfd
!            integer :: dpla
!            integer dimension(numdsn),depend(numdsn) :: dtfg
!            integer :: olen
!            character(len=1) dimension(250) :: tbuff
!        end subroutine prtlno
!        function strfnd(len_bn,str,flen_bn,fstr) ! in :wdm:UTCHAR.f
!            integer, optional,check(len(str)>=len_bn),depend(str) :: len_bn=len(str)
!            character(len=1) dimension(len_bn) :: str
!            integer, optional,check(len(fstr)>=flen_bn),depend(fstr) :: flen_bn=len(fstr)
!            character(len=1) dimension(flen_bn) :: fstr
!            integer :: strfnd
!        end function strfnd
!        function strlnx(npts,buff) ! in :wdm:UTCHAR.f
!            integer, optional,check(len(buff)>=npts),depend(buff) :: npts=len(buff)
!            character(len=1) dimension(npts) :: buff
!            integer :: strlnx
!        end function strlnx
!        subroutine zljust(string_bn) ! in :wdm:UTCHAR.f
!            character*(*) :: string_bn
!        end subroutine zljust
!        subroutine prtstr(funit,len_bn,str) ! in :wdm:UTCHAR.f
!            integer :: funit
!            integer, optional,check(len(str)>=len_bn),depend(str) :: len_bn=len(str)
!            character(len=1) dimension(len_bn) :: str
!        end subroutine prtstr
!        function zlntxt(string_bn) ! in :wdm:UTCHAR.f
!            character*(*) :: string_bn
!            integer :: zlntxt
!        end function zlntxt
!        subroutine ztrim(string_bn) ! in :wdm:UTCHAR.f
!            character*(*) :: string_bn
!        end subroutine ztrim
!        subroutine qupcas(len_bn,string_bn) ! in :wdm:UTCHAR.f
!            integer, optional,check(len(string_bn)>=len_bn),depend(string_bn) :: len_bn=len(string_bn)
!            character(len=1) dimension(len_bn) :: string_bn
!        end subroutine qupcas
!        function cknblv(len_bn,cbuf) ! in :wdm:UTCHAR.f
!            integer, optional,check(len(cbuf)>=len_bn),depend(cbuf) :: len_bn=len(cbuf)
!            character(len=1) dimension(len_bn) :: cbuf
!            integer :: cknblv
!        end function cknblv
!        subroutine rhtstr(len_bn,title) ! in :wdm:UTCHAR.f
!            integer, optional,check(len(title)>=len_bn),depend(title) :: len_bn=len(title)
!            character(len=1) dimension(len_bn) :: title
!        end subroutine rhtstr
!        subroutine adcoma(len_bn,str) ! in :wdm:UTCHAR.f
!            integer, optional,check(len(str)>=len_bn),depend(str) :: len_bn=len(str)
!            character(len=1) dimension(len_bn) :: str
!        end subroutine adcoma
!        subroutine copyc(len_bn,zip,x) ! in :wdm:UTCP90.f
!            integer, optional,check(len(zip)>=len_bn),depend(zip) :: len_bn=len(zip)
!            character(len=1) dimension(len_bn) :: zip
!            character(len=1) dimension(len_bn),depend(len_bn) :: x
!        end subroutine copyc
!        subroutine copyd(len_bn,zip,x) ! in :wdm:UTCP90.f
!            integer, optional,check(len(zip)>=len_bn),depend(zip) :: len_bn=len(zip)
!            double precision dimension(len_bn) :: zip
!            double precision dimension(len_bn),depend(len_bn) :: x
!        end subroutine copyd
!        subroutine copyi(len_bn,zip,x) ! in :wdm:UTCP90.f
!            integer, optional,check(len(zip)>=len_bn),depend(zip) :: len_bn=len(zip)
!            integer dimension(len_bn) :: zip
!            integer dimension(len_bn),depend(len_bn) :: x
!        end subroutine copyi
!        subroutine copyr(len_bn,zip,x) ! in :wdm:UTCP90.f
!            integer, optional,check(len(zip)>=len_bn),depend(zip) :: len_bn=len(zip)
!            real dimension(len_bn) :: zip
!            real dimension(len_bn),depend(len_bn) :: x
!        end subroutine copyr
!        subroutine zipc(len_bn,zip,x) ! in :wdm:UTCP90.f
!            integer, optional,check(len(x)>=len_bn),depend(x) :: len_bn=len(x)
!            character*1 :: zip
!            character(len=1) dimension(len_bn) :: x
!        end subroutine zipc
!        subroutine zipd(len_bn,zip,x) ! in :wdm:UTCP90.f
!            integer, optional,check(len(x)>=len_bn),depend(x) :: len_bn=len(x)
!            double precision :: zip
!            double precision dimension(len_bn) :: x
!        end subroutine zipd
!        subroutine zipi(len_bn,zip,x) ! in :wdm:UTCP90.f
!            integer, optional,check(len(x)>=len_bn),depend(x) :: len_bn=len(x)
!            integer :: zip
!            integer dimension(len_bn) :: x
!        end subroutine zipi
!        subroutine zipr(len_bn,zip,x) ! in :wdm:UTCP90.f
!            integer, optional,check(len(x)>=len_bn),depend(x) :: len_bn=len(x)
!            real :: zip
!            real dimension(len_bn) :: x
!        end subroutine zipr
!        subroutine ckdate(date1,date2,flag) ! in :wdm:UTDATE.f
!            integer dimension(6) :: date1
!            integer dimension(6) :: date2
!            integer :: flag
!        end subroutine ckdate
!        subroutine cmptim(tcode1,tstep1,tcode2,tstep2,tstepf,tcdcmp) ! in :wdm:UTDATE.f
!            integer :: tcode1
!            integer :: tstep1
!            integer :: tcode2
!            integer :: tstep2
!            integer :: tstepf
!            integer :: tcdcmp
!        end subroutine cmptim
!        subroutine cmptm2(tc1,ts1,tc2,ts2,tstepf,tcdcmp) ! in :wdm:UTDATE.f
!            integer :: tc1
!            integer :: ts1
!            integer :: tc2
!            integer :: ts2
!            integer :: tstepf
!            integer :: tcdcmp
!        end subroutine cmptm2
!        subroutine datchk(date,error) ! in :wdm:UTDATE.f
!            integer dimension(6) :: date
!            integer dimension(6) :: error
!        end subroutine datchk
!        subroutine datnxt(intrvl,upback,date) ! in :wdm:UTDATE.f
!            integer(kind=4) :: intrvl
!            integer :: upback
!            integer dimension(6) :: date
!        end subroutine datnxt
!        function daymon(yr,mon) ! in :wdm:UTDATE.f
!            integer :: yr
!            integer :: mon
!            integer :: daymon
!        end function daymon
!        subroutine dlimit(dates,ndsn,fsls,date) ! in :wdm:UTDATE.f
!            integer dimension(6,ndsn) :: dates
!            integer, optional,check(shape(dates,1)==ndsn),depend(dates) :: ndsn=shape(dates,1)
!            integer :: fsls
!            integer dimension(6) :: date
!        end subroutine dlimit
!        subroutine jdmody(year,jday,mon,day) ! in :wdm:UTDATE.f
!            integer :: year
!            integer :: jday
!            integer :: mon
!            integer :: day
!        end subroutine jdmody
!        subroutine numpts(date1,date2,delt,npts) ! in :wdm:UTDATE.f
!            integer dimension(6) :: date1
!            integer dimension(6) :: date2
!            integer :: delt
!            integer :: npts
!        end subroutine numpts
!        subroutine timadd(date1,tcode,tstep,nvals,date2) ! in :wdm:UTDATE.f
!            integer dimension(6) :: date1
!            integer :: tcode
!            integer :: tstep
!            integer :: nvals
!            integer dimension(6) :: date2
!        end subroutine timadd
!        subroutine timbak(tcode,date) ! in :wdm:UTDATE.f
!            integer :: tcode
!            integer dimension(6) :: date
!        end subroutine timbak
!        function timchk(date1,date2) ! in :wdm:UTDATE.f
!            integer dimension(6) :: date1
!            integer dimension(6) :: date2
!            integer :: timchk
!        end function timchk
!        subroutine timcnv(date) ! in :wdm:UTDATE.f
!            integer dimension(6) :: date
!        end subroutine timcnv
        subroutine timcvt(date) ! in :wdm:UTDATE.f
            integer intent(inout), dimension(6) :: date
        end subroutine timcvt
        subroutine timdif(date1,date2,tcode,tstep,nvals) ! in :wdm:UTDATE.f
            integer dimension(6) :: date1
            integer dimension(6) :: date2
            integer :: tcode
            integer :: tstep
            integer intent(out) :: nvals
        end subroutine timdif
!        subroutine timdfx(date1,date2,nvals,tcode,tstep) ! in :wdm:UTDATE.f
!            integer dimension(6) :: date1
!            integer dimension(6) :: date2
!            integer(kind=4) :: nvals
!            integer :: tcode
!            integer :: tstep
!        end subroutine timdfx
!        subroutine dtmcmn(ndat,strt,stop,tstep,tcode,sdat,edat,ts,tc,retcod) ! in :wdm:UTDATE.f
!            integer, optional,check(shape(strt,1)==ndat),depend(strt) :: ndat=shape(strt,1)
!            integer dimension(6,ndat) :: strt
!            integer dimension(6,ndat),depend(ndat) :: stop
!            integer dimension(ndat),depend(ndat) :: tstep
!            integer dimension(ndat),depend(ndat) :: tcode
!            integer dimension(6) :: sdat
!            integer dimension(6) :: edat
!            integer :: ts
!            integer :: tc
!            integer :: retcod
!        end subroutine dtmcmn
!        subroutine datcmn(ndat,strt,stop,sdat,edat,retcod) ! in :wdm:UTDATE.f
!            integer, optional,check(shape(strt,1)==ndat),depend(strt) :: ndat=shape(strt,1)
!            integer dimension(6,ndat) :: strt
!            integer dimension(6,ndat),depend(ndat) :: stop
!            integer dimension(6) :: sdat
!            integer dimension(6) :: edat
!            integer :: retcod
!        end subroutine datcmn
!        subroutine gtmonc(indx,len_bn,loru,leno,month) ! in :wdm:UTDATE.f
!            integer :: indx
!            integer, optional,check(len(month)>=len_bn),depend(month) :: len_bn=len(month)
!            integer :: loru
!            integer :: leno
!            character(len=1) dimension(len_bn) :: month
!        end subroutine gtmonc
!        subroutine dhleap(datbgn,stmo,edmo,lpday,lpyrs) ! in :wdm:UTDATE.f
!            integer dimension(6) :: datbgn
!            integer :: stmo
!            integer :: edmo
!            integer :: lpday
!            integer :: lpyrs
!        end subroutine dhleap
!        subroutine dhbegn(datbgn,datend,stmo,edmo,season,seasbg,seasnd,ipt) ! in :wdm:UTDATE.f
!            integer dimension(6) :: datbgn
!            integer dimension(6) :: datend
!            integer :: stmo
!            integer :: edmo
!            integer dimension(12) :: season
!            integer dimension(6) :: seasbg
!            integer dimension(6) :: seasnd
!            integer :: ipt
!        end subroutine dhbegn
!        subroutine dhincr(seasbg,seasnd,datbgn,datend,season,more) ! in :wdm:UTDATE.f
!            integer dimension(6) :: seasbg
!            integer dimension(6) :: seasnd
!            integer dimension(6) :: datbgn
!            integer dimension(6) :: datend
!            integer dimension(12) :: season
!            integer :: more
!        end subroutine dhincr
!        subroutine dbndry(fwdbak,date) ! in :wdm:UTDATE.f
!            integer :: fwdbak
!            integer dimension(6) :: date
!        end subroutine dbndry
!        subroutine dcalct(ind) ! in :wdm:UTDATE.f
!            integer :: ind
!        end subroutine dcalct
!        function dhlpyr(year) ! in :wdm:UTDATE.f
!            integer :: year
!            integer :: dhlpyr
!        end function dhlpyr
!        subroutine sbndry(fwdbak,mon,day,date) ! in :wdm:UTDATE.f
!            integer :: fwdbak
!            integer :: mon
!            integer :: day
!            integer dimension(3) :: date
!        end subroutine sbndry
!        subroutine chkint(imin,imax,idef,ival,ichk) ! in :wdm:UTNUMB.f
!            integer :: imin
!            integer :: imax
!            integer :: idef
!            integer :: ival
!            integer :: ichk
!        end subroutine chkint
!        subroutine chkrea(rmin,rmax,rdef,rval,rchk) ! in :wdm:UTNUMB.f
!            real :: rmin
!            real :: rmax
!            real :: rdef
!            real :: rval
!            integer :: rchk
!            real(kind=8) :: d0min
!            real(kind=8) :: dp1min
!            real(kind=8) :: d0max
!            integer(kind=4) :: rprec
!            integer(kind=4) :: dprec
!            real(kind=4) :: r0min
!            real(kind=4) :: rp1min
!            real(kind=4) :: r0max
!            common /dconst/ d0min,dp1min,d0max
!            common /iconst/ rprec,dprec
!            common /rconst/ r0min,rp1min,r0max
!        end subroutine chkrea
!        subroutine chkdpr(dmin,dmax,ddef,dval,dchk) ! in :wdm:UTNUMB.f
!            double precision :: dmin
!            double precision :: dmax
!            double precision :: ddef
!            double precision :: dval
!            integer :: dchk
!            real(kind=8) :: d0min
!            real(kind=8) :: dp1min
!            real(kind=8) :: d0max
!            integer(kind=4) :: rprec
!            integer(kind=4) :: dprec
!            real(kind=4) :: r0min
!            real(kind=4) :: rp1min
!            real(kind=4) :: r0max
!            common /dconst/ d0min,dp1min,d0max
!            common /iconst/ rprec,dprec
!            common /rconst/ r0min,rp1min,r0max
!        end subroutine chkdpr
!        subroutine numini ! in :wdm:UTNUMB.f
!            real(kind=8) :: d0min
!            real(kind=8) :: dp1min
!            real(kind=8) :: d0max
!            integer(kind=4) :: rprec
!            integer(kind=4) :: dprec
!            real(kind=4) :: r0min
!            real(kind=4) :: rp1min
!            real(kind=4) :: r0max
!            common /dconst/ d0min,dp1min,d0max
!            common /iconst/ rprec,dprec
!            common /rconst/ r0min,rp1min,r0max
!        end subroutine numini
!        subroutine decprc(sigdig,decpla,rval) ! in :wdm:UTNUMB.f
!            integer :: sigdig
!            integer :: decpla
!            real :: rval
!        end subroutine decprc
!        subroutine shiftd(len_bn,val,valtol,x,ipos) ! in :wdm:UTNUMB.f
!            integer, optional,check(len(x)>=len_bn),depend(x) :: len_bn=len(x)
!            double precision :: val
!            double precision :: valtol
!            double precision dimension(len_bn) :: x
!            integer :: ipos
!        end subroutine shiftd
!        subroutine shifti(len_bn,val,valtol,x,ipos) ! in :wdm:UTNUMB.f
!            integer, optional,check(len(x)>=len_bn),depend(x) :: len_bn=len(x)
!            integer :: val
!            integer :: valtol
!            integer dimension(len_bn) :: x
!            integer :: ipos
!        end subroutine shifti
!        subroutine shiftr(len_bn,val,valtol,x,ipos) ! in :wdm:UTNUMB.f
!            integer, optional,check(len(x)>=len_bn),depend(x) :: len_bn=len(x)
!            real :: val
!            real :: valtol
!            real dimension(len_bn) :: x
!            integer :: ipos
!        end subroutine shiftr
!        subroutine utvrsn ! in :wdm:UTNUMB.f
!        end subroutine utvrsn
!        function wdrcgo(wdmsfl,rrec) ! in :wdm:UTWDMD.f
!            integer :: wdmsfl
!            integer :: rrec
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            integer :: wdrcgo
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end function wdrcgo
!        subroutine wdflck(wdmsfl,retcod) ! in :wdm:UTWDMD.f
!            integer :: wdmsfl
!            integer intent(out) :: retcod
!            integer :: pfname
!            integer :: pmxrec
!            integer :: pfrrec
!            integer :: ptsnum
!            integer :: pdirpt
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cdrloc/ pfname,pmxrec,pfrrec,ptsnum,pdirpt
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wdflck
        subroutine wdflcl(wdmsfl,retcod) ! in :wdm:UTWDMD.f
            integer :: wdmsfl
            integer intent(out) :: retcod
            integer(kind=4) dimension(512,10) :: wibuff
            integer dimension(10) :: recno
            integer dimension(10) :: wdmfun
            integer dimension(10) :: nxtpos
            integer dimension(10) :: prepos
            integer :: frepos
            integer :: wdmcnt
            integer dimension(5) :: wdmopn
            integer dimension(5) :: maxrec
            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
        end subroutine wdflcl
!        subroutine wdflnu(wdmsfl) ! in :wdm:UTWDMD.f
!            integer :: wdmsfl
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wdflnu
!        subroutine wdrcup(wdmsfl,rind) ! in :wdm:UTWDMD.f
!            integer :: wdmsfl
!            integer :: rind
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wdrcup
!        function wdrcgn(wdmsfl,prprrc,scprrc) ! in :wdm:UTWDMD.f
!            integer :: wdmsfl
!            integer :: prprrc
!            integer :: scprrc
!            integer :: pfname
!            integer :: pmxrec
!            integer :: pfrrec
!            integer :: ptsnum
!            integer :: pdirpt
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            integer :: wdrcgn
!            common /cdrloc/ pfname,pmxrec,pfrrec,ptsnum,pdirpt
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end function wdrcgn
!        function wdrcgx(wdmsfl,prprrc,scprrc) ! in :wdm:UTWDMD.f
!            integer :: wdmsfl
!            integer :: prprrc
!            integer :: scprrc
!            integer :: wdrcgx
!        end function wdrcgx
!        subroutine wdrcad(wdmsfl,numadd,frerec) ! in :wdm:UTWDMD.f
!            integer :: wdmsfl
!            integer :: numadd
!            integer :: frerec
!            integer :: pfname
!            integer :: pmxrec
!            integer :: pfrrec
!            integer :: ptsnum
!            integer :: pdirpt
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cdrloc/ pfname,pmxrec,pfrrec,ptsnum,pdirpt
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wdrcad
!        function wddrrc(wdmsfl,dsn,opt) ! in :wdm:UTWDMD.f
!            integer :: wdmsfl
!            integer :: dsn
!            integer :: opt
!            integer :: pfname
!            integer :: pmxrec
!            integer :: pfrrec
!            integer :: ptsnum
!            integer :: pdirpt
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            integer :: wddrrc
!            common /cdrloc/ pfname,pmxrec,pfrrec,ptsnum,pdirpt
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end function wddrrc
!        subroutine wdschk(wdmsfl,dsn,dstyp,lrec,grcnt,retcod) ! in :wdm:UTWDMD.f
!            integer :: wdmsfl
!            integer :: dsn
!            integer :: dstyp
!            integer :: lrec
!            integer :: grcnt
!            integer :: retcod
!        end subroutine wdschk
!        subroutine wdscha(wdmsfl,dsn,dstyp,gpflg,lrec,grcnt,retcod) ! in :wdm:UTWDMD.f
!            integer :: wdmsfl
!            integer :: dsn
!            integer :: dstyp
!            integer :: gpflg
!            integer :: lrec
!            integer :: grcnt
!            integer :: retcod
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wdscha
        function wdckdt(wdmsfl,dsn) ! in :wdm:UTWDMD.f
            integer :: wdmsfl
            integer :: dsn
            integer(kind=4) dimension(512,10) :: wibuff
            integer dimension(10) :: recno
            integer dimension(10) :: wdmfun
            integer dimension(10) :: nxtpos
            integer dimension(10) :: prepos
            integer :: frepos
            integer :: wdmcnt
            integer dimension(5) :: wdmopn
            integer dimension(5) :: maxrec
            integer :: wdckdt
            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
        end function wdckdt
!        subroutine wddsck(wdmsfl,dsn,drec,retcod) ! in :wdm:UTWDMD.f
!            integer :: wdmsfl
!            integer :: dsn
!            integer :: drec
!            integer :: retcod
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wddsck
!        subroutine wdbfin ! in :wdm:UTWDMD.f
!            integer :: pfname
!            integer :: pmxrec
!            integer :: pfrrec
!            integer :: ptsnum
!            integer :: pdirpt
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cdrloc/ pfname,pmxrec,pfrrec,ptsnum,pdirpt
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wdbfin
!        subroutine wdcrea(wdmsfl) ! in :wdm:UTWDMD.f
!            integer :: wdmsfl
!            integer :: pfname
!            integer :: pmxrec
!            integer :: pfrrec
!            integer :: ptsnum
!            integer :: pdirpt
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cdrloc/ pfname,pmxrec,pfrrec,ptsnum,pdirpt
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wdcrea
!        function wdsasv(saind,tibuff) ! in :wdm:UTWDMD.f
!            integer :: saind
!            integer(kind=4) dimension(512) :: tibuff
!            integer :: wdsasv
!        end function wdsasv
!        function wdgivl(wdmsfl,rec,pos) ! in :wdm:UTWDMD.f
!            integer :: wdmsfl
!            integer :: rec
!            integer :: pos
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            integer :: wdgivl
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end function wdgivl
!        function wdgrvl(wdmsfl,rec,pos) ! in :wdm:UTWDMD.f
!            integer :: wdmsfl
!            integer :: rec
!            integer :: pos
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            real :: wdgrvl
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end function wdgrvl
!        function wdgcvl(wdmsfl,rec,pos) ! in :wdm:UTWDMD.f
!            integer :: wdmsfl
!            integer :: rec
!            integer :: pos
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            character(len=4) :: wdgcvl
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end function wdgcvl
!        subroutine wdgdrt(lptsnm) ! in :wdm:UTWDMD.f
!            integer :: lptsnm
!            integer :: pfname
!            integer :: pmxrec
!            integer :: pfrrec
!            integer :: ptsnum
!            integer :: pdirpt
!            common /cdrloc/ pfname,pmxrec,pfrrec,ptsnum,pdirpt
!        end subroutine wdgdrt
!        subroutine wddsnx(wdmsfl,dsn) ! in :wdm:UTWDMD.f
!            integer :: wdmsfl
!            integer :: dsn
!        end subroutine wddsnx
!        subroutine awvrsn ! in :wdm:UTWDMD.f
!        end subroutine awvrsn
!        subroutine wddsnp(wdmsfl,incr,dsn) ! in :wdm:UTWDMD.f
!            integer :: wdmsfl
!            integer :: incr
!            integer :: dsn
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wddsnp
!        subroutine wmsqck(wdmsfl,dsn,gnum,qchk) ! in :wdm:UTWDMF.f
!            integer :: wdmsfl
!            integer :: dsn
!            integer :: gnum
!            integer :: qchk
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wmsqck
!        subroutine wmsang(wdmsfl,dsn,gnum,lrec,drec,dpos,grcnt,pdat,pdatvl,retcod) ! in :wdm:UTWDMF.f
!            integer :: wdmsfl
!            integer :: dsn
!            integer :: gnum
!            integer :: lrec
!            integer :: drec
!            integer :: dpos
!            integer :: grcnt
!            integer :: pdat
!            integer :: pdatvl
!            integer :: retcod
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wmsang
!        subroutine wmsadi(wdmsfl,dsn,gnum,class,id,order,ilen,ibuff,inum,ival,iflg) ! in :wdm:UTWDMF.f
!            integer :: wdmsfl
!            integer :: dsn
!            integer :: gnum
!            integer :: class
!            integer :: id
!            integer :: order
!            integer, optional,check(len(ibuff)>=ilen),depend(ibuff) :: ilen=len(ibuff)
!            character(len=1) dimension(ilen) :: ibuff
!            integer, optional,check(len(ival)>=inum),depend(ival) :: inum=len(ival)
!            integer dimension(inum) :: ival
!            integer :: iflg
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wmsadi
!        subroutine wdnxps(wdmsfl,rdwrfg,drec,dpos,dind) ! in :wdm:UTWDMF.f
!            integer :: wdmsfl
!            integer :: rdwrfg
!            integer :: drec
!            integer :: dpos
!            integer :: dind
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wdnxps
!        subroutine wdnxdv(wdmsfl,drec,dpos,dval) ! in :wdm:UTWDMF.f
!            integer :: wdmsfl
!            integer :: drec
!            integer :: dpos
!            integer :: dval
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wdnxdv
!        subroutine wdprps(wdmsfl,drec,dpos,dind) ! in :wdm:UTWDMF.f
!            integer :: wdmsfl
!            integer :: drec
!            integer :: dpos
!            integer :: dind
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wdprps
!        subroutine wmspte(wdmsfl,ctlen,ibuff,drec,dpos,glen) ! in :wdm:UTWDMF.f
!            integer :: wdmsfl
!            integer, optional,check(len(ibuff)>=ctlen),depend(ibuff) :: ctlen=len(ibuff)
!            character(len=1) dimension(ctlen) :: ibuff
!            integer :: drec
!            integer :: dpos
!            integer :: glen
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wmspte
!        subroutine wmsgte(wdmsfl,tlen,llen,drec,dpos,glen,mlen,olen,obuff,cont) ! in :wdm:UTWDMF.f
!            integer :: wdmsfl
!            integer :: tlen
!            integer, optional,check(len(obuff)>=llen),depend(obuff) :: llen=len(obuff)
!            integer :: drec
!            integer :: dpos
!            integer :: glen
!            integer :: mlen
!            integer :: olen
!            character(len=1) dimension(llen) :: obuff
!            integer :: cont
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wmsgte
!        subroutine wmsbtr(wdmsfl,nrec,drec,dpos,mlen,glen,topfg) ! in :wdm:UTWDMF.f
!            integer :: wdmsfl
!            integer :: nrec
!            integer :: drec
!            integer :: dpos
!            integer :: mlen
!            integer :: glen
!            integer :: topfg
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wmsbtr
!        subroutine wmsgto(wdmsfl,sucifl,tlen,drec,dpos) ! in :wdm:UTWDMF.f
!            integer :: wdmsfl
!            integer :: sucifl
!            integer :: tlen
!            integer :: drec
!            integer :: dpos
!        end subroutine wmsgto
!        subroutine wmsbcx(wdmsfl,bcwptr,drec,dpos,class,id,order,tlen) ! in :wdm:UTWDMF.f
!            integer :: wdmsfl
!            integer :: bcwptr
!            integer :: drec
!            integer :: dpos
!            integer :: class
!            integer :: id
!            integer :: order
!            integer :: tlen
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wmsbcx
!        subroutine wmsfbc(wdmsfl,dsn,gnum,drec,dpos,bcword) ! in :wdm:UTWDMF.f
!            integer :: wdmsfl
!            integer :: dsn
!            integer :: gnum
!            integer :: drec
!            integer :: dpos
!            integer :: bcword
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wmsfbc
!        subroutine wmsidp(wdmsfl,dsn,gnum,id,drec,dpos) ! in :wdm:UTWDMF.f
!            integer :: wdmsfl
!            integer :: dsn
!            integer :: gnum
!            integer :: id
!            integer :: drec
!            integer :: dpos
!        end subroutine wmsidp
!        subroutine wmsskb(wdmsfl,tlen,drec,dpos) ! in :wdm:UTWDMF.f
!            integer :: wdmsfl
!            integer :: tlen
!            integer :: drec
!            integer :: dpos
!        end subroutine wmsskb
!        function wdptcl(prec,poff) ! in :wdm:UTWDT1.f
!            integer :: prec
!            integer :: poff
!            integer(kind=4) :: wdptcl
!        end function wdptcl
!        subroutine wdptsp(ptr,prec,poff) ! in :wdm:UTWDT1.f
!            integer(kind=4) :: ptr
!            integer :: prec
!            integer :: poff
!        end subroutine wdptsp
!        subroutine wbcwsp(bcw,nov,tstep,tcode,compcd,qualcd) ! in :wdm:UTWDT1.f
!            integer(kind=4) :: bcw
!            integer(kind=4) :: nov
!            integer :: tstep
!            integer :: tcode
!            integer :: compcd
!            integer :: qualcd
!        end subroutine wbcwsp
!        function wbcwcl(nov,tstep,tcode,compcd,qualcd) ! in :wdm:UTWDT1.f
!            integer(kind=4) :: nov
!            integer :: tstep
!            integer :: tcode
!            integer :: compcd
!            integer :: qualcd
!            integer(kind=4) :: wbcwcl
!        end function wbcwcl
!        subroutine wdatsp(datwrd,dat) ! in :wdm:UTWDT1.f
!            integer(kind=4) :: datwrd
!            integer dimension(4) :: dat
!        end subroutine wdatsp
!        function wdatcl(dat) ! in :wdm:UTWDT1.f
!            integer dimension(4) :: dat
!            integer(kind=4) :: wdatcl
!        end function wdatcl
!        function wtbicl(msflid,mclu,mgrp) ! in :wdm:UTWDT1.f
!            character(len=1) dimension(2) :: msflid
!            integer :: mclu
!            integer :: mgrp
!            integer(kind=4) :: wtbicl
!        end function wtbicl
!        subroutine wtbisp(tabid,msflid,mclu,mgrp) ! in :wdm:UTWDT1.f
!            integer :: tabid
!            character(len=1) dimension(2) :: msflid
!            integer :: mclu
!            integer :: mgrp
!        end subroutine wtbisp
!        function wtbdcl(tabind,nrow,ncol,next) ! in :wdm:UTWDT1.f
!            integer :: tabind
!            integer :: nrow
!            integer :: ncol
!            integer :: next
!            integer(kind=4) :: wtbdcl
!        end function wtbdcl
!        subroutine wtbdsp(tabdim,tabind,nrow,ncol,next) ! in :wdm:UTWDT1.f
!            integer :: tabdim
!            integer :: tabind
!            integer :: nrow
!            integer :: ncol
!            integer :: next
!        end subroutine wtbdsp
!        subroutine wbcwsq(bcw,nov,tstep,tcode,compcd,qualcd) ! in :wdm:UTWDT1.f
!            integer(kind=4) :: bcw
!            integer(kind=4) :: nov
!            integer :: tstep
!            integer :: tcode
!            integer :: compcd
!            integer :: qualcd
!        end subroutine wbcwsq
!        function wmsbcv(class,id,order,tlen) ! in :wdm:UTWDT1.f
!            integer :: class
!            integer :: id
!            integer :: order
!            integer :: tlen
!            integer(kind=4) :: wmsbcv
!        end function wmsbcv
!        subroutine wmsbcs(qword,class,id,order,tlen) ! in :wdm:UTWDT1.f
!            integer :: qword
!            integer :: class
!            integer :: id
!            integer :: order
!            integer :: tlen
!        end subroutine wmsbcs
!        function wmsmnv(ival) ! in :wdm:UTWDT1.f
!            integer dimension(5) :: ival
!            integer(kind=4) :: wmsmnv
!        end function wmsmnv
!        subroutine wmsmns(imnval,idef,ilen,innu,iwid,icol) ! in :wdm:UTWDT1.f
!            integer :: imnval
!            integer :: idef
!            integer :: ilen
!            integer :: innu
!            integer :: iwid
!            integer :: icol
!        end subroutine wmsmns
!        function wmspiv(ivl1,ivl2) ! in :wdm:UTWDT1.f
!            integer :: ivl1
!            integer :: ivl2
!            integer(kind=4) :: wmspiv
!        end function wmspiv
!        subroutine wmspis(ival,ivl1,ivl2) ! in :wdm:UTWDT1.f
!            integer :: ival
!            integer :: ivl1
!            integer :: ivl2
!        end subroutine wmspis
!        function wmsp2v(ftyp,flen_bn,forder,fprot,fcol) ! in :wdm:UTWDT1.f
!            integer :: ftyp
!            integer :: flen_bn
!            integer :: forder
!            integer :: fprot
!            integer :: fcol
!            integer(kind=4) :: wmsp2v
!        end function wmsp2v
!        subroutine wmsp2s(ip2val,ftyp,flen_bn,forder,fprot,fcol) ! in :wdm:UTWDT1.f
!            integer :: ip2val
!            integer :: ftyp
!            integer :: flen_bn
!            integer :: forder
!            integer :: fprot
!            integer :: fcol
!        end subroutine wmsp2s
!        function wdlicv(itype,att1,att2,blcnt) ! in :wdm:UTWDT1.f
!            integer :: itype
!            integer :: att1
!            integer :: att2
!            integer :: blcnt
!            integer(kind=4) :: wdlicv
!        end function wdlicv
!        subroutine wdlisp(iword,itype,att1,att2,blcnt) ! in :wdm:UTWDT1.f
!            integer :: iword
!            integer :: itype
!            integer :: att1
!            integer :: att2
!            integer :: blcnt
!        end subroutine wdlisp
!        function wdlbcv(id,dtype,inum,ilen) ! in :wdm:UTWDT1.f
!            integer :: id
!            integer :: dtype
!            integer :: inum
!            integer :: ilen
!            integer(kind=4) :: wdlbcv
!        end function wdlbcv
!        subroutine wdlbsp(bword,id,dtype,inum,ilen) ! in :wdm:UTWDT1.f
!            integer :: bword
!            integer :: id
!            integer :: dtype
!            integer :: inum
!            integer :: ilen
!        end subroutine wdlbsp
!        function wattcl(attyp,atlen,atuse,atupd) ! in :wdm:UTWDT1.f
!            integer :: attyp
!            integer :: atlen
!            integer dimension(10) :: atuse
!            integer :: atupd
!            integer(kind=4) :: wattcl
!        end function wattcl
!        subroutine wattsp(iatvl,attyp,atlen,atuse,atupd) ! in :wdm:UTWDT1.f
!            integer :: iatvl
!            integer :: attyp
!            integer :: atlen
!            integer :: atuse
!            integer :: atupd
!        end subroutine wattsp
!        subroutine wattus(atuswd,atuse) ! in :wdm:UTWDT1.f
!            integer :: atuswd
!            integer dimension(10) :: atuse
!        end subroutine wattus
!        function watwdc(ival1,ival2) ! in :wdm:UTWDT1.f
!            integer :: ival1
!            integer :: ival2
!            integer :: watwdc
!        end function watwdc
!        subroutine watwds(iword,ival1,ival2) ! in :wdm:UTWDT1.f
!            integer :: iword
!            integer :: ival1
!            integer :: ival2
!        end subroutine watwds
!        function wstgcl(stmin,stsec,tunits,tstep,nov) ! in :wdm:UTWDT1.f
!            integer :: stmin
!            integer :: stsec
!            integer :: tunits
!            integer :: tstep
!            integer :: nov
!            integer(kind=4) :: wstgcl
!        end function wstgcl
!        subroutine wstgsp(gcw,stmin,stsec,tunits,tstep,nov) ! in :wdm:UTWDT1.f
!            integer :: gcw
!            integer :: stmin
!            integer :: stsec
!            integer :: tunits
!            integer :: tstep
!            integer :: nov
!        end subroutine wstgsp
!        function wmspov(opset,opstno,opdef,opwid,ophide,opbox) ! in :wdm:UTWDT1.f
!            integer :: opset
!            integer :: opstno
!            integer :: opdef
!            integer :: opwid
!            integer :: ophide
!            integer :: opbox
!            integer(kind=4) :: wmspov
!        end function wmspov
!        subroutine wmspos(iopval,opset,opstno,opdef,opwid,ophide,opbox) ! in :wdm:UTWDT1.f
!            integer :: iopval
!            integer :: opset
!            integer :: opstno
!            integer :: opdef
!            integer :: opwid
!            integer :: ophide
!            integer :: opbox
!        end subroutine wmspos
!        function wopwdc(ival1,ival2,ival3,ival4) ! in :wdm:UTWDT1.f
!            integer :: ival1
!            integer :: ival2
!            integer :: ival3
!            integer :: ival4
!            integer(kind=4) :: wopwdc
!        end function wopwdc
!        subroutine wopwds(opword,ival1,ival2,ival3,ival4) ! in :wdm:UTWDT1.f
!            integer :: opword
!            integer :: ival1
!            integer :: ival2
!            integer :: ival3
!            integer :: ival4
!        end subroutine wopwds
!        subroutine wadqck(messfl,dsn,atind,atchk) ! in :wdm:WDATM1.f
!            integer :: messfl
!            integer :: dsn
!            integer :: atind
!            integer :: atchk
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wadqck
!        subroutine wadnsa(messfl,dsinit,saind) ! in :wdm:WDATM1.f
!            integer :: messfl
!            integer :: dsinit
!            integer :: saind
!        end subroutine wadnsa
!        subroutine wadadi(messfl,dsn,atind,id,ilen,ibuff,inum,ival) ! in :wdm:WDATM1.f
!            integer :: messfl
!            integer :: dsn
!            integer :: atind
!            integer :: id
!            integer, optional,check(len(ibuff)>=ilen),depend(ibuff) :: ilen=len(ibuff)
!            character(len=1) dimension(ilen) :: ibuff
!            integer, optional,check(len(ival)>=inum),depend(ival) :: inum=len(ival)
!            integer dimension(inum) :: ival
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wadadi
!        subroutine wadgtl(messfl,dsn,atind,atnam,dptr,attyp,atlen,atuswd,atupd) ! in :wdm:WDATM1.f
!            integer :: messfl
!            integer :: dsn
!            integer :: atind
!            character(len=1) dimension(6) :: atnam
!            integer :: dptr
!            integer :: attyp
!            integer :: atlen
!            integer :: atuswd
!            integer :: atupd
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wadgtl
!        subroutine waddsi(messfl,dsnmax,dsncnt,dsn,attind) ! in :wdm:WDATM1.f
!            integer :: messfl
!            integer, optional,check(len(dsn)>=dsnmax),depend(dsn) :: dsnmax=len(dsn)
!            integer :: dsncnt
!            integer dimension(dsnmax) :: dsn
!            integer dimension(2,dsnmax),depend(dsnmax) :: attind
!            integer :: pfname
!            integer :: pmxrec
!            integer :: pfrrec
!            integer :: ptsnum
!            integer :: pdirpt
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cdrloc/ pfname,pmxrec,pfrrec,ptsnum,pdirpt
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine waddsi
!        subroutine wdcrdt(wdmsfl,dsn) ! in :wdm:WDATM1.f
!            integer :: wdmsfl
!            integer :: dsn
!        end subroutine wdcrdt
!        subroutine wdmodt(wdmsfl,dsn) ! in :wdm:WDATM1.f
!            integer :: wdmsfl
!            integer :: dsn
!        end subroutine wdmodt
!        subroutine wdsetd(wdmsfl,dsn,saind,date) ! in :wdm:WDATM1.f
!            integer :: wdmsfl
!            integer :: dsn
!            integer :: saind
!            integer dimension(4) :: date
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wdsetd
!        subroutine wadgtn(messfl,atind,atnam) ! in :wdm:WDATM2.f
!            integer :: messfl
!            integer :: atind
!            character(len=1) dimension(6) :: atnam
!        end subroutine wadgtn
!        subroutine wadgra(messfl,dptr,attyp,atmin,atmax) ! in :wdm:WDATM2.f
!            integer :: messfl
!            integer :: dptr
!            integer :: attyp
!            real :: atmin
!            real :: atmax
!        end subroutine wadgra
!        subroutine wadgva(messfl,dptr,mxlen,clen,satval) ! in :wdm:WDATM2.f
!            integer :: messfl
!            integer :: dptr
!            integer, optional,check(len(satval)>=mxlen),depend(satval) :: mxlen=len(satval)
!            integer :: clen
!            character(len=1) dimension(mxlen) :: satval
!        end subroutine wadgva
!        subroutine wadgdf(messfl,dptr,attyp,atdef) ! in :wdm:WDATM2.f
!            integer :: messfl
!            integer :: dptr
!            integer :: attyp
!            real :: atdef
!        end subroutine wadgdf
!        subroutine wadgds(messfl,dptr,sadesc) ! in :wdm:WDATM2.f
!            integer :: messfl
!            integer :: dptr
!            character(len=1) dimension(47) :: sadesc
!        end subroutine wadgds
!        subroutine wadghl(messfl,dptr,tlen,drec,dpos) ! in :wdm:WDATM2.f
!            integer :: messfl
!            integer :: dptr
!            integer :: tlen
!            integer :: drec
!            integer :: dpos
!        end subroutine wadghl
!        subroutine wdsagy(messfl,saind,sanam,dptr,satyp,salen,sarqwd,saupfg) ! in :wdm:WDATRB.f
!            integer :: messfl
!            integer :: saind
!            character(len=1) dimension(6) :: sanam
!            integer :: dptr
!            integer :: satyp
!            integer :: salen
!            integer :: sarqwd
!            integer :: saupfg
!        end subroutine wdsagy
        subroutine wdbsac(wdmsfl,dsn,messfl,saind,salen,saval,retcod) ! in :wdm:WDATRB.f
            integer :: wdmsfl
            integer :: dsn
            integer :: messfl
            integer :: saind
            integer depend(saval) :: salen
            character(len=1) dimension(salen) :: saval
            integer intent(out) :: retcod
            integer(kind=4) dimension(512,10) :: wibuff
            integer dimension(10) :: recno
            integer dimension(10) :: wdmfun
            integer dimension(10) :: nxtpos
            integer dimension(10) :: prepos
            integer :: frepos
            integer :: wdmcnt
            integer dimension(5) :: wdmopn
            integer dimension(5) :: maxrec
            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
        end subroutine wdbsac
        subroutine wdbsai(wdmsfl,dsn,messfl,saind,salen,saval,retcod) ! in :wdm:WDATRB.f
            integer :: wdmsfl
            integer :: dsn
            integer :: messfl
            integer :: saind
            integer depend(saval) :: salen
            integer dimension(salen) :: saval
            integer intent(out) :: retcod
            integer(kind=4) dimension(512,10) :: wibuff
            integer dimension(10) :: recno
            integer dimension(10) :: wdmfun
            integer dimension(10) :: nxtpos
            integer dimension(10) :: prepos
            integer :: frepos
            integer :: wdmcnt
            integer dimension(5) :: wdmopn
            integer dimension(5) :: maxrec
            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
        end subroutine wdbsai
        subroutine wdbsar(wdmsfl,dsn,messfl,saind,salen,saval,retcod) ! in :wdm:WDATRB.f
            integer :: wdmsfl
            integer :: dsn
            integer :: messfl
            integer :: saind
            integer depend(saval) :: salen
            real dimension(salen) :: saval
            integer intent(out) :: retcod
            integer(kind=4) dimension(512,10) :: wibuff
            integer dimension(10) :: recno
            integer dimension(10) :: wdmfun
            integer dimension(10) :: nxtpos
            integer dimension(10) :: prepos
            integer :: frepos
            integer :: wdmcnt
            integer dimension(5) :: wdmopn
            integer dimension(5) :: maxrec
            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
        end subroutine wdbsar
!        subroutine wdbsad(wdmsfl,dsn,saind,saupfg,sarqwd,salen,retcod) ! in :wdm:WDATRB.f
!            integer :: wdmsfl
!            integer :: dsn
!            integer :: saind
!            integer :: saupfg
!            integer :: sarqwd
!            integer :: salen
!            integer :: retcod
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wdbsad
!        subroutine wdsafl(saind,tibuff,sapos,retcod) ! in :wdm:WDATRB.f
!            integer :: saind
!            integer(kind=4) dimension(512) :: tibuff
!            integer :: sapos
!            integer :: retcod
!        end subroutine wdsafl
!        subroutine wddpar(rrec,sarqwd,saupfg,tibuff,delfg,retcod) ! in :wdm:WDATRB.f
!            integer :: rrec
!            integer :: sarqwd
!            integer :: saupfg
!            integer(kind=4) dimension(512) :: tibuff
!            integer :: delfg
!            integer :: retcod
!        end subroutine wddpar
!        subroutine wdsafi(messfl,safnam,saind,sanam,retcod) ! in :wdm:WDATRB.f
!            integer :: messfl
!            character(len=1) dimension(6) :: safnam
!            integer :: saind
!            character(len=1) dimension(6) :: sanam
!            integer :: retcod
!        end subroutine wdsafi
!        subroutine wdbsgx(messfl,sanam,saind,satyp,salen) ! in :wdm:WDATRB.f
!            integer :: messfl
!            character(len=1) dimension(6) :: sanam
!            integer :: saind
!            integer :: satyp
!            integer :: salen
!        end subroutine wdbsgx
!        subroutine wdfnds(wdmsfl,type_bn,sacnt,saind,satyp,sabeg,saval,salen,saimin,saimax,sarmin,sarmax,sacond,saor,maxdsn,dsnmin,dsnmax,dsn,dsncnt,dsbful) ! in :wdm:WDATRB.f
!            integer :: wdmsfl
!            integer :: type_bn
!            integer :: sacnt
!            integer dimension(*) :: saind
!            integer dimension(*) :: satyp
!            integer dimension(*) :: sabeg
!            integer(kind=4) dimension(30) :: saval
!            integer dimension(*) :: salen
!            integer dimension(*) :: saimin
!            integer dimension(*) :: saimax
!            real dimension(*) :: sarmin
!            real dimension(*) :: sarmax
!            integer dimension(*) :: sacond
!            integer dimension(*) :: saor
!            integer, optional,check(len(dsn)>=maxdsn),depend(dsn) :: maxdsn=len(dsn)
!            integer :: dsnmin
!            integer :: dsnmax
!            integer dimension(maxdsn) :: dsn
!            integer :: dsncnt
!            integer :: dsbful
!            integer :: pfname
!            integer :: pmxrec
!            integer :: pfrrec
!            integer :: ptsnum
!            integer :: pdirpt
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cdrloc/ pfname,pmxrec,pfrrec,ptsnum,pdirpt
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wdfnds
!        subroutine wdfnck(dsntmp,tibuff,trbuff,sacnt,saind,satyp,sabeg,saval,salen,saimin,saimax,sarmin,sarmax,sacond,saor,maxdsn,nosa,nomat,nochk,noadd,dsn,dsncnt,dsbful) ! in :wdm:WDATRB.f
!            integer :: dsntmp
!            integer(kind=4) dimension(512) :: tibuff
!            real dimension(512) :: trbuff
!            integer :: sacnt
!            integer dimension(*) :: saind
!            integer dimension(*) :: satyp
!            integer dimension(*) :: sabeg
!            integer(kind=4) dimension(30) :: saval
!            integer dimension(*) :: salen
!            integer dimension(*) :: saimin
!            integer dimension(*) :: saimax
!            real dimension(*) :: sarmin
!            real dimension(*) :: sarmax
!            integer dimension(*) :: sacond
!            integer dimension(*) :: saor
!            integer, optional,check(len(dsn)>=maxdsn),depend(dsn) :: maxdsn=len(dsn)
!            integer :: nosa
!            integer :: nomat
!            integer :: nochk
!            integer :: noadd
!            integer dimension(maxdsn) :: dsn
!            integer :: dsncnt
!            integer :: dsbful
!        end subroutine wdfnck
!        subroutine wdvrsn ! in :wdm:WDATRB.f
!        end subroutine wdvrsn
!        subroutine wdbcrl(wdmsfl,dsn,dstype,retcod) ! in :wdm:WDBTCH.f
!            integer :: wdmsfl
!            integer :: dsn
!            integer :: dstype
!            integer :: retcod
!        end subroutine wdbcrl
        subroutine wdbsgc(wdmsfl,dsn,saind,salen,saval,retcod) ! in :wdm:WDBTCH.f
            integer :: wdmsfl
            integer :: dsn
            integer :: saind
            integer intent(in) :: salen
            character(len=1) intent(out), dimension(salen) :: saval
            integer intent(out) :: retcod
            integer(kind=4) dimension(512,10) :: wibuff
            integer dimension(10) :: recno
            integer dimension(10) :: wdmfun
            integer dimension(10) :: nxtpos
            integer dimension(10) :: prepos
            integer :: frepos
            integer :: wdmcnt
            integer dimension(5) :: wdmopn
            integer dimension(5) :: maxrec
            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
        end subroutine wdbsgc
        subroutine wdbsgi(wdmsfl,dsn,saind,salen,saval,retcod) ! in :wdm:WDBTCH.f
            integer :: wdmsfl
            integer :: dsn
            integer :: saind
            integer intent(in) :: salen
            integer intent(out), dimension(salen) :: saval
            integer intent(out) :: retcod
            integer(kind=4) dimension(512,10) :: wibuff
            integer dimension(10) :: recno
            integer dimension(10) :: wdmfun
            integer dimension(10) :: nxtpos
            integer dimension(10) :: prepos
            integer :: frepos
            integer :: wdmcnt
            integer dimension(5) :: wdmopn
            integer dimension(5) :: maxrec
            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
        end subroutine wdbsgi
        subroutine wdbsgr(wdmsfl,dsn,saind,salen,saval,retcod) ! in :wdm:WDBTCH.f
            integer :: wdmsfl
            integer :: dsn
            integer :: saind
            integer intent(in) :: salen
            real intent(out), dimension(salen) :: saval
            integer intent(out) :: retcod
            integer(kind=4) dimension(512,10) :: wibuff
            integer dimension(10) :: recno
            integer dimension(10) :: wdmfun
            integer dimension(10) :: nxtpos
            integer dimension(10) :: prepos
            integer :: frepos
            integer :: wdmcnt
            integer dimension(5) :: wdmopn
            integer dimension(5) :: maxrec
            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
        end subroutine wdbsgr
        subroutine wddsrn(wdmsfl,odsn,ndsn,retcod) ! in :wdm:WDBTCH.f
            integer :: wdmsfl
            integer :: odsn
            integer :: ndsn
            integer intent(out) :: retcod
            integer :: pfname
            integer :: pmxrec
            integer :: pfrrec
            integer :: ptsnum
            integer :: pdirpt
            integer(kind=4) dimension(512,10) :: wibuff
            integer dimension(10) :: recno
            integer dimension(10) :: wdmfun
            integer dimension(10) :: nxtpos
            integer dimension(10) :: prepos
            integer :: frepos
            integer :: wdmcnt
            integer dimension(5) :: wdmopn
            integer dimension(5) :: maxrec
            common /cdrloc/ pfname,pmxrec,pfrrec,ptsnum,pdirpt
            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
        end subroutine wddsrn
        subroutine wddscl(owdmfl,odsn,nwdmfl,ndsn,ntype,retcod) ! in :wdm:WDBTCH.f
            integer :: owdmfl
            integer :: odsn
            integer :: nwdmfl
            integer :: ndsn
            integer :: ntype
            integer intent(out) :: retcod
            integer(kind=4) dimension(512,10) :: wibuff
            integer dimension(10) :: recno
            integer dimension(10) :: wdmfun
            integer dimension(10) :: nxtpos
            integer dimension(10) :: prepos
            integer :: frepos
            integer :: wdmcnt
            integer dimension(5) :: wdmopn
            integer dimension(5) :: maxrec
            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
        end subroutine wddscl
!        subroutine wdlbad(wdmsfl,dsn,dstype,psa) ! in :wdm:WDBTCH.f
!            integer :: wdmsfl
!            integer :: dsn
!            integer :: dstype
!            integer :: psa
!        end subroutine wdlbad
        subroutine wddsdl(wdmsfl,dsn,retcod) ! in :wdm:WDMESS.f
            integer :: wdmsfl
            integer :: dsn
            integer intent(out) :: retcod
            integer(kind=4) dimension(512,10) :: wibuff
            integer dimension(10) :: recno
            integer dimension(10) :: wdmfun
            integer dimension(10) :: nxtpos
            integer dimension(10) :: prepos
            integer :: frepos
            integer :: wdmcnt
            integer dimension(5) :: wdmopn
            integer dimension(5) :: maxrec
            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
        end subroutine wddsdl
!        subroutine wdsasp(saind,salen,satyp,tibuff,psaval,retcod) ! in :wdm:WDMESS.f
!            integer :: saind
!            integer :: salen
!            integer :: satyp
!            integer(kind=4) dimension(512) :: tibuff
!            integer :: psaval
!            integer :: retcod
!        end subroutine wdsasp
!        function wddtfg(drec,tibuff) ! in :wdm:WDMESS.f
!            integer :: drec
!            integer(kind=4) dimension(512) :: tibuff
!            integer :: wddtfg
!        end function wddtfg
!        subroutine wdfdup(wdmsfl,dsn,dsfrec) ! in :wdm:WDMESS.f
!            integer :: wdmsfl
!            integer :: dsn
!            integer :: dsfrec
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wdfdup
!        subroutine wdfcup(wdmsfl,dstype,dsn,opt) ! in :wdm:WDMESS.f
!            integer :: wdmsfl
!            integer :: dstype
!            integer :: dsn
!            integer :: opt
!            integer :: pfname
!            integer :: pmxrec
!            integer :: pfrrec
!            integer :: ptsnum
!            integer :: pdirpt
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cdrloc/ pfname,pmxrec,pfrrec,ptsnum,pdirpt
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wdfcup
!        function wdrcdl(wdmsfl,drec) ! in :wdm:WDMESS.f
!            integer :: wdmsfl
!            integer :: drec
!            integer :: pfname
!            integer :: pmxrec
!            integer :: pfrrec
!            integer :: ptsnum
!            integer :: pdirpt
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            integer :: wdrcdl
!            common /cdrloc/ pfname,pmxrec,pfrrec,ptsnum,pdirpt
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end function wdrcdl
        subroutine wdlbax(wdmsfl,dsn,dstype,ndn,nup,nsa,nsasp,ndp,psa) ! in :wdm:WDMESS.f
            integer :: wdmsfl
            integer :: dsn
            integer :: dstype
            integer :: ndn
            integer :: nup
            integer :: nsa
            integer :: nsasp
            integer :: ndp
            integer intent(out) :: psa
            integer(kind=4) dimension(512,10) :: wibuff
            integer dimension(10) :: recno
            integer dimension(10) :: wdmfun
            integer dimension(10) :: nxtpos
            integer dimension(10) :: prepos
            integer :: frepos
            integer :: wdmcnt
            integer dimension(5) :: wdmopn
            integer dimension(5) :: maxrec
            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
        end subroutine wdlbax
!        subroutine wdgtat(wdmsfl,dsn,sapos,saind,saval) ! in :wdm:WDMESS.f
!            integer :: wdmsfl
!            integer :: dsn
!            integer :: sapos
!            integer :: saind
!            integer dimension(256) :: saval
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wdgtat
!        subroutine wdiini ! in :wdm:WDMID.f
!            integer :: widcnt
!            integer dimension(5) :: widfun
!            integer dimension(5) :: widbse
!            character(len=4) dimension(5) :: widnam
!            common /cwdmid/ widcnt,widfun,widbse
!            common /cwdmic/ widnam
!        end subroutine wdiini
!        subroutine widadd(wdmsfl,mxdsn,wdid) ! in :wdm:WDMID.f
!            integer :: wdmsfl
!            integer :: mxdsn
!            character*4 :: wdid
!            integer :: widcnt
!            integer dimension(5) :: widfun
!            integer dimension(5) :: widbse
!            character(len=4) dimension(5) :: widnam
!            common /cwdmid/ widcnt,widfun,widbse
!            common /cwdmic/ widnam
!        end subroutine widadd
!        subroutine wud2id(wdmsfl,dsn,id) ! in :wdm:WDMID.f
!            integer :: wdmsfl
!            integer :: dsn
!            integer :: id
!            integer :: widcnt
!            integer dimension(5) :: widfun
!            integer dimension(5) :: widbse
!            character(len=4) dimension(5) :: widnam
!            common /cwdmid/ widcnt,widfun,widbse
!            common /cwdmic/ widnam
!        end subroutine wud2id
!        subroutine wua2id(wdmsfl,dsn,wdid,id) ! in :wdm:WDMID.f
!            integer :: wdmsfl
!            integer :: dsn
!            character*4 :: wdid
!            integer :: id
!            integer :: widcnt
!            integer dimension(5) :: widfun
!            integer dimension(5) :: widbse
!            character(len=4) dimension(5) :: widnam
!            common /cwdmid/ widcnt,widfun,widbse
!            common /cwdmic/ widnam
!        end subroutine wua2id
!        subroutine wid2ud(wdflg,id,wdmsfl,dsn) ! in :wdm:WDMID.f
!            integer :: wdflg
!            integer :: id
!            integer :: wdmsfl
!            integer :: dsn
!        end subroutine wid2ud
!        subroutine wid2ua(wdflg,id,wdmsfl,dsn,wdid) ! in :wdm:WDMID.f
!            integer :: wdflg
!            integer :: id
!            integer :: wdmsfl
!            integer :: dsn
!            character*4 :: wdid
!            integer :: widcnt
!            integer dimension(5) :: widfun
!            integer dimension(5) :: widbse
!            character(len=4) dimension(5) :: widnam
!            common /cwdmid/ widcnt,widfun,widbse
!            common /cwdmic/ widnam
!        end subroutine wid2ua
!        subroutine wch2ud(wdid,wdmsfl) ! in :wdm:WDMID.f
!            character*4 :: wdid
!            integer :: wdmsfl
!            integer :: widcnt
!            integer dimension(5) :: widfun
!            integer dimension(5) :: widbse
!            character(len=4) dimension(5) :: widnam
!            common /cwdmid/ widcnt,widfun,widbse
!            common /cwdmic/ widnam
!        end subroutine wch2ud
        subroutine wdbopn(wdmsfl,wdname,ronwfg,retcod) ! in :wdm:WDOP.f
            integer :: wdmsfl
            character*(*) :: wdname
            integer :: ronwfg
            integer intent(out) :: retcod
        end subroutine wdbopn
        subroutine wdtget(wdmsfl,dsn,delt,dates,nval,dtran,qualfg,tunits,rval,retcod) ! in :wdm:WDTMS1.f
            integer :: wdmsfl
            integer :: dsn
            integer :: delt
            integer dimension(6) :: dates
            integer :: nval
            integer :: dtran
            integer :: qualfg
            integer :: tunits
            real intent(out), dimension(nval), depend(nval) :: rval
            integer intent(out) :: retcod
            integer(kind=4) dimension(512,10) :: wibuff
            integer dimension(10) :: recno
            integer dimension(10) :: wdmfun
            integer dimension(10) :: nxtpos
            integer dimension(10) :: prepos
            integer :: frepos
            integer :: wdmcnt
            integer dimension(5) :: wdmopn
            integer dimension(5) :: maxrec
            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
        end subroutine wdtget
!        subroutine wtscsc(tunits,tsstep,tspsec) ! in :wdm:WDTMS1.f
!            integer :: tunits
!            integer :: tsstep
!            integer :: tspsec
!        end subroutine wtscsc
!        subroutine wtpmck(gpflg,dxx,dates,nval,qualvl,ltstep,ltunit,retcod) ! in :wdm:WDTMS1.f
!            integer :: gpflg
!            integer :: dxx
!            integer dimension(6) :: dates
!            integer :: nval
!            integer :: qualvl
!            integer :: ltstep
!            integer :: ltunit
!            integer :: retcod
!        end subroutine wtpmck
!        subroutine wtfndg(wdmsfl,dsn,gpflg,dates,ltstep,ltunit,i4nval,tdsfrc,tsfill,tgroup,tolr,tsptad,gposst,gposen,gpsdat,enddat,retcod) ! in :wdm:WDTMS1.f
!            integer :: wdmsfl
!            integer :: dsn
!            integer :: gpflg
!            integer dimension(6) :: dates
!            integer :: ltstep
!            integer :: ltunit
!            integer(kind=4) :: i4nval
!            integer :: tdsfrc
!            real :: tsfill
!            integer :: tgroup
!            real :: tolr
!            integer :: tsptad
!            integer :: gposst
!            integer :: gposen
!            integer dimension(6) :: gpsdat
!            integer dimension(6) :: enddat
!            integer :: retcod
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wtfndg
!        subroutine wtdspm(wdmsfl,tibuff,trbuff,tsfill,tgroup,tolr,tbsdat,tsptad) ! in :wdm:WDTMS1.f
!            integer :: wdmsfl
!            integer(kind=4) dimension(512) :: tibuff
!            real dimension(512) :: trbuff
!            real :: tsfill
!            integer :: tgroup
!            real :: tolr
!            integer dimension(6) :: tbsdat
!            integer :: tsptad
!        end subroutine wtdspm
!        subroutine wtbyfx(wdmsfl,dsn,tgroup,tbsyr) ! in :wdm:WDTMS1.f
!            integer :: wdmsfl
!            integer :: dsn
!            integer :: tgroup
!            integer :: tbsyr
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wtbyfx
!        subroutine wtdspx(tibuff,compfg,tsform,vbtime,tsstep,tcode) ! in :wdm:WDTMS1.f
!            integer(kind=4) dimension(512) :: tibuff
!            integer :: compfg
!            integer :: tsform
!            integer :: vbtime
!            integer :: tsstep
!            integer :: tcode
!        end subroutine wtdspx
!        subroutine wtskvl(wdmsfl,gpind,gpsdat,stdat,tdsfrc,tsfill,tgroup,badjfg,addafg,vbtime,currec,curbks,curpos,curnov,curval,preval,curtst,curtun,curcmp,curqua,curcnt,curdat,retcod) ! in :wdm:WDTMS1.f
!            integer :: wdmsfl
!            integer :: gpind
!            integer dimension(6) :: gpsdat
!            integer dimension(6) :: stdat
!            integer :: tdsfrc
!            real :: tsfill
!            integer :: tgroup
!            integer :: badjfg
!            integer :: addafg
!            integer :: vbtime
!            integer :: currec
!            integer :: curbks
!            integer :: curpos
!            integer(kind=4) :: curnov
!            real :: curval
!            real :: preval
!            integer :: curtst
!            integer :: curtun
!            integer :: curcmp
!            integer :: curqua
!            integer(kind=4) :: curcnt
!            integer dimension(6) :: curdat
!            integer :: retcod
!        end subroutine wtskvl
!        subroutine wtskvx(wdmsfl,gpind,gpsdat,stdat,tdsfrc,tsfill,tgroup,badjfg,addafg,vbtime,currec,curbks,curpos,curnov,curval,preval,curtst,curtun,curcmp,curqua,curcnt,curdat,retcod,blsdat,bledat) ! in :wdm:WDTMS1.f
!            integer :: wdmsfl
!            integer :: gpind
!            integer dimension(6) :: gpsdat
!            integer dimension(6) :: stdat
!            integer :: tdsfrc
!            real :: tsfill
!            integer :: tgroup
!            integer :: badjfg
!            integer :: addafg
!            integer :: vbtime
!            integer :: currec
!            integer :: curbks
!            integer :: curpos
!            integer(kind=4) :: curnov
!            real :: curval
!            real :: preval
!            integer :: curtst
!            integer :: curtun
!            integer :: curcmp
!            integer :: curqua
!            integer(kind=4) :: curcnt
!            integer dimension(6) :: curdat
!            integer :: retcod
!            integer dimension(6) :: blsdat
!            integer dimension(6) :: bledat
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wtskvx
!        subroutine wdskbk(wdmsfl,numskp,currec,curpos) ! in :wdm:WDTMS1.f
!            integer :: wdmsfl
!            integer(kind=4) :: numskp
!            integer :: currec
!            integer :: curpos
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wdskbk
!        subroutine wtgtvl(wdmsfl,dsn,gposen,nval,gttun,gttst,gttrn,qualfg,enddat,tdsfrc,tsfill,tgroup,getqk,getqra,vbtime,rval,getdat,gpsdat,gpind,retcod) ! in :wdm:WDTMS1.f
!            integer :: wdmsfl
!            integer :: dsn
!            integer :: gposen
!            integer, optional,check(len(rval)>=nval),depend(rval) :: nval=len(rval)
!            integer :: gttun
!            integer :: gttst
!            integer :: gttrn
!            integer :: qualfg
!            integer dimension(6) :: enddat
!            integer :: tdsfrc
!            real :: tsfill
!            integer :: tgroup
!            integer :: getqk
!            real :: getqra
!            integer :: vbtime
!            real dimension(nval) :: rval
!            integer dimension(6) :: getdat
!            integer dimension(6) :: gpsdat
!            integer :: gpind
!            integer :: retcod
!            integer :: currec
!            integer :: curbks
!            integer :: curpos
!            integer(kind=4) :: curnov
!            integer :: curtst
!            integer :: curtun
!            integer :: curcmp
!            integer :: curqua
!            integer(kind=4) :: curcnt
!            integer dimension(6) :: curdat
!            real :: curval
!            real :: preval
!            common /cwtsds/ currec,curbks,curpos,curnov,curtst,curtun,curcmp,curqua,curcnt,curdat,curval,preval
!        end subroutine wtgtvl
!        subroutine wtgtnv(wdmsfl,curcnt,curnov,curcmp,currec,curbks,curtst,curtun,curqua,curpos,curdat,curval,curnxt) ! in :wdm:WDTMS1.f
!            integer :: wdmsfl
!            integer(kind=4) :: curcnt
!            integer(kind=4) :: curnov
!            integer :: curcmp
!            integer :: currec
!            integer :: curbks
!            integer :: curtst
!            integer :: curtun
!            integer :: curqua
!            integer :: curpos
!            integer dimension(6) :: curdat
!            real :: curval
!            integer dimension(6) :: curnxt
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wtgtnv
!        subroutine wdtpfx(wdmsfl,dsn,delt,dates,nval,dtovwr,qualfg,tunits,rval,retcod) ! in :wdm:WDTMS1.f
!            integer :: wdmsfl
!            integer :: dsn
!            integer :: delt
!            integer dimension(6) :: dates
!            integer, optional,check(len(rval)>=nval),depend(rval) :: nval=len(rval)
!            integer :: dtovwr
!            integer :: qualfg
!            integer :: tunits
!            real dimension(nval) :: rval
!            integer :: retcod
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            integer :: currec
!            integer :: curbks
!            integer :: curpos
!            integer(kind=4) :: curnov
!            integer :: curtst
!            integer :: curtun
!            integer :: curcmp
!            integer :: curqua
!            integer(kind=4) :: curcnt
!            integer dimension(6) :: curdat
!            real :: curval
!            real :: preval
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!            common /cwtsds/ currec,curbks,curpos,curnov,curtst,curtun,curcmp,curqua,curcnt,curdat,curval,preval
!        end subroutine wdtpfx
!        subroutine wtgpck(wdmsfl,gpind,gpsdat,datnow,ltunit,tdsfrc,tsfill,tgroup,vbtime,currec,curbks,curpos,curnov,curval,preval,curtst,curtun,curcmp,curqua,curcnt,curdat,retcod) ! in :wdm:WDTMS1.f
!            integer :: wdmsfl
!            integer :: gpind
!            integer dimension(6) :: gpsdat
!            integer dimension(6) :: datnow
!            integer :: ltunit
!            integer :: tdsfrc
!            real :: tsfill
!            integer :: tgroup
!            integer :: vbtime
!            integer :: currec
!            integer :: curbks
!            integer :: curpos
!            integer(kind=4) :: curnov
!            real :: curval
!            real :: preval
!            integer :: curtst
!            integer :: curtun
!            integer :: curcmp
!            integer :: curqua
!            integer(kind=4) :: curcnt
!            integer dimension(6) :: curdat
!            integer :: retcod
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wtgpck
!        subroutine wtptvl(wdmsfl,nval,ltunit,ltstep,tdsfrc,tsfill,tolr,qualfg,rval,tval,tsptad,gpedat,compfg,currec,curbks,curpos,curnov,curval,preval,curtst,curtun,curcmp,curqua,curdat,dpos,remtun,remtst,remval) ! in :wdm:WDTMS1.f
!            integer :: wdmsfl
!            integer, optional,check(len(rval)>=nval),depend(rval) :: nval=len(rval)
!            integer :: ltunit
!            integer :: ltstep
!            integer :: tdsfrc
!            real :: tsfill
!            real :: tolr
!            integer :: qualfg
!            real dimension(nval) :: rval
!            integer(kind=4) :: tval
!            integer :: tsptad
!            integer dimension(6) :: gpedat
!            integer :: compfg
!            integer :: currec
!            integer :: curbks
!            integer :: curpos
!            integer(kind=4) :: curnov
!            real :: curval
!            real :: preval
!            integer :: curtst
!            integer :: curtun
!            integer :: curcmp
!            integer :: curqua
!            integer dimension(6) :: curdat
!            integer(kind=4) :: dpos
!            integer :: remtun
!            integer :: remtst
!            real :: remval
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wtptvl
!        subroutine wtnwbk(wdmsfl,currec,curpos,curbks) ! in :wdm:WDTMS1.f
!            integer :: wdmsfl
!            integer :: currec
!            integer :: curpos
!            integer :: curbks
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wtnwbk
        subroutine wdtput(wdmsfl,dsn,delt,dates,nval,dtovwr,qualfg,tunits,rval,retcod) ! in :wdm:WDTMS1.f
            integer :: wdmsfl
            integer :: dsn
            integer :: delt
            integer dimension(6) :: dates
            integer :: nval
            integer :: dtovwr
            integer :: qualfg
            integer :: tunits
            real dimension(nval), depend(nval) :: rval
            integer intent(out) :: retcod
            integer(kind=4) dimension(512,10) :: wibuff
            integer dimension(10) :: recno
            integer dimension(10) :: wdmfun
            integer dimension(10) :: nxtpos
            integer dimension(10) :: prepos
            integer :: frepos
            integer :: wdmcnt
            integer dimension(5) :: wdmopn
            integer dimension(5) :: maxrec
            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
        end subroutine wdtput
        subroutine wtfndt(wdmsfl,dsn,gpflg,tdsfrc,sdat,edat,retcod) ! in :wdm:WDTMS2.f
            integer :: wdmsfl
            integer :: dsn
            integer :: gpflg
            integer intent(out) :: tdsfrc
            integer intent(out), dimension(6) :: sdat
            integer intent(out), dimension(6) :: edat
            integer intent(out) :: retcod
            integer(kind=4) dimension(512,10) :: wibuff
            integer dimension(10) :: recno
            integer dimension(10) :: wdmfun
            integer dimension(10) :: nxtpos
            integer dimension(10) :: prepos
            integer :: frepos
            integer :: wdmcnt
            integer dimension(5) :: wdmopn
            integer dimension(5) :: maxrec
            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
        end subroutine wtfndt
!        subroutine wtdscu(swdsfl,sdsn,twdsfl,tdsn,uptfl,gsdat,gedat,nrval,rval,retcod) ! in :wdm:WDTMS2.f
!            integer :: swdsfl
!            integer :: sdsn
!            integer :: twdsfl
!            integer :: tdsn
!            integer :: uptfl
!            integer dimension(6) :: gsdat
!            integer dimension(6) :: gedat
!            integer, optional,check(len(rval)>=nrval),depend(rval) :: nrval=len(rval)
!            real dimension(nrval) :: rval
!            integer :: retcod
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wtdscu
!        subroutine wtddel(wdmsfl,dsn,deldat,allflg,retcod) ! in :wdm:WDTMS2.f
!            integer :: wdmsfl
!            integer :: dsn
!            integer dimension(6) :: deldat
!            integer :: allflg
!            integer :: retcod
!            integer(kind=4) dimension(512,10) :: wibuff
!            integer dimension(10) :: recno
!            integer dimension(10) :: wdmfun
!            integer dimension(10) :: nxtpos
!            integer dimension(10) :: prepos
!            integer :: frepos
!            integer :: wdmcnt
!            integer dimension(5) :: wdmopn
!            integer dimension(5) :: maxrec
!            common /cfbuff/ wibuff,recno,wdmfun,nxtpos,prepos,frepos,wdmcnt,wdmopn,maxrec
!        end subroutine wtddel
!        subroutine wtegrp(dat,tgroup,egrdat) ! in :wdm:WDTMS2.f
!            integer dimension(6) :: dat
!            integer :: tgroup
!            integer dimension(6) :: egrdat
!        end subroutine wtegrp
!        subroutine wtsgrp(dat,tgroup,sgrdat) ! in :wdm:WDTMS2.f
!            integer dimension(6) :: dat
!            integer :: tgroup
!            integer dimension(6) :: sgrdat
!        end subroutine wtsgrp
!        subroutine wdatcp(odat,ndat) ! in :wdm:WDTMS2.f
!            integer dimension(6) :: odat
!            integer dimension(6) :: ndat
!        end subroutine wdatcp
!        subroutine wtdate(wdmfl,dsncnt,dsn,cmmxfg,sdate,edate,errcod) ! in :wdm:WDTMS2.f
!            integer :: wdmfl
!            integer, optional,check(len(dsn)>=dsncnt),depend(dsn) :: dsncnt=len(dsn)
!            integer dimension(dsncnt) :: dsn
!            integer :: cmmxfg
!            integer dimension(6) :: sdate
!            integer dimension(6) :: edate
!            integer :: errcod
!        end subroutine wtdate
!        subroutine wdatim(wdmsfl,dsn,strt,stop,tstep,tcode,retcod) ! in :wdm:WDTMS2.f
!            integer :: wdmsfl
!            integer :: dsn
!            integer dimension(6) :: strt
!            integer dimension(6) :: stop
!            integer :: tstep
!            integer :: tcode
!            integer :: retcod
!        end subroutine wdatim
!        subroutine wdainf(wdmsfl,dsn,numi,numr,indxi,indxr,dates,atribi,atribr,retcod) ! in :wdm:WDTMS2.f
!            integer :: wdmsfl
!            integer :: dsn
!            integer :: numi
!            integer :: numr
!            integer dimension(*) :: indxi
!            integer dimension(*) :: indxr
!            integer dimension(6,2) :: dates
!            integer dimension(*) :: atribi
!            real dimension(*) :: atribr
!            integer :: retcod
!        end subroutine wdainf
    end interface 
end python module _wdm_lib

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
