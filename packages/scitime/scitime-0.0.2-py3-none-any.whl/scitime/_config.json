{
  "supported_meta_algos": [
    "RF",
    "NN"
  ],
  "random_search_params": {
    "hidden_layer_sizes": [
      [
        50,
        50,
        50
      ],
      [
        50,
        100,
        50
      ],
      [
        100
      ],
      [
        50
      ],
      [
        20
      ],
      [
        100,
        50
      ]
    ],
    "activation": [
      "tanh",
      "relu",
      "logistic"
    ],
    "solver": [
      "sgd",
      "adam"
    ],
    "alpha": [
      0.0001,
      0.0005,
      0.001
    ],
    "learning_rate": [
      "constant",
      "adaptive"
    ]
  },
  "supported_algos": [
    "RandomForestRegressor",
    "RandomForestClassifier",
    "SVC",
    "KMeans"
  ],
  "RandomForestRegressor": {
    "module": "sklearn.ensemble",
    "type": "regression",
    "internal_params": {
      "n_estimators": [
        10
      ],
      "max_depth": [
        null,
        10
      ],
      "min_samples_split": [
        2,
        4,
        10
      ],
      "min_samples_leaf": [
        1,
        5,
        10
      ],
      "min_weight_fraction_leaf": [
        0.1,
        0.5
      ],
      "max_features": [
        "auto",
        "log2",
        "sqrt",
        10,
        20,
        30,
        40,
        50,
        100,
        200
      ],
      "criterion": [
        "mae",
        "mse"
      ],
      "max_leaf_nodes": [
        null,
        2,
        10
      ],
      "min_impurity_decrease": [
        1,
        10
      ],
      "min_impurity_split": [
        null,
        1,
        10
      ],
      "bootstrap": [
        true,
        false
      ],
      "oob_score": [
        false
      ],
      "n_jobs": [
        1,
        2,
        8
      ]
    },
    "dummy_inputs": [
      "criterion"
    ],
    "semi_dummy_inputs": {
      "max_depth": [
        null
      ],
      "max_features": [
        "auto",
        "sqrt",
        "log2"
      ],
      "max_leaf_nodes": [
        null
      ],
      "min_impurity_split": [
        null
      ]
    },
    "external_params": {
      "num_rows": [
        1000
      ],
      "num_features": [
        20
      ]
    },
    "other_params": [
      "total_memory",
      "available_memory",
      "num_cpu"
    ]
  },
  "RandomForestClassifier": {
    "module": "sklearn.ensemble",
    "type": "classification",
    "internal_params": {
      "n_estimators": [
        10
      ],
      "max_depth": [
        null,
        10
      ],
      "min_samples_split": [
        2,
        4,
        10
      ],
      "min_samples_leaf": [
        1,
        5,
        10
      ],
      "min_weight_fraction_leaf": [
        0.1,
        0.5
      ],
      "max_features": [
        "auto",
        "log2",
        "sqrt",
        10,
        20,
        30,
        40,
        50,
        100,
        200
      ],
      "criterion": [
        "gini"
      ],
      "max_leaf_nodes": [
        null,
        2,
        10
      ],
      "min_impurity_decrease": [
        1,
        10
      ],
      "min_impurity_split": [
        null,
        1,
        10
      ],
      "bootstrap": [
        true,
        false
      ],
      "oob_score": [
        false
      ],
      "n_jobs": [
        1,
        2,
        8
      ]
    },
    "dummy_inputs": [
      "criterion"
    ],
    "semi_dummy_inputs": {
      "max_depth": [
        null
      ],
      "max_features": [
        "auto",
        "sqrt",
        "log2"
      ],
      "max_leaf_nodes": [
        null
      ],
      "min_impurity_split": [
        null
      ]
    },
    "external_params": {
      "num_rows": [
        1000
      ],
      "num_features": [
        20
      ],
      "num_categories": [
        2,
        3,
        5,
        10
      ]
    },
    "other_params": [
      "total_memory",
      "available_memory",
      "num_cpu"
    ]
  },
  "SVC": {
    "module": "sklearn.svm",
    "type": "classification",
    "internal_params": {
      "C": [
        0.5,
        1.0,
        1.5,
        2
      ],
      "cache_size": [
        50,
        100,
        200,
        500,
        1000
      ],
      "coef0": [
        0.0,
        1,
        2
      ],
      "decision_function_shape": [
        "ovr",
        "ovo"
      ],
      "degree": [
        2,
        3,
        4,
        5
      ],
      "gamma": [
        "auto"
      ],
      "kernel": [
        "linear",
        "poly",
        "rbf",
        "sigmoid"
      ],
      "max_iter": [
        10,
        20,
        100,
        200,
        -1
      ],
      "probability": [
        true,
        false
      ],
      "shrinking": [
        true,
        false
      ],
      "tol": [
        0.001,
        0.002,
        0.003
      ]
    },
    "dummy_inputs": [
      "kernel",
      "gamma",
      "decision_function_shape"
    ],
    "semi_dummy_inputs": {},
    "external_params": {
      "num_rows": [
        100,
        1000,
        10000
      ],
      "num_features": [
        5,
        50,
        100
      ],
      "num_categories": [
        2,
        3,
        5,
        10
      ]
    },
    "other_params": [
      "total_memory",
      "available_memory",
      "num_cpu"
    ]
  },
  "KMeans": {
    "module": "sklearn.cluster",
    "type": "unsupervised",
    "internal_params": {
      "algorithm": [
        "auto",
        "full",
        "elkan"
      ],
      "copy_x": [
        "True"
      ],
      "init": [
        "k-means++",
        "random"
      ],
      "max_iter": [
        10,
        20,
        50,
        100,
        300
      ],
      "n_clusters": [
        1,
        2,
        3,
        4,
        5,
        10,
        20,
        100
      ],
      "n_init": [
        10,
        20,
        30,
        50
      ],
      "n_jobs": [
        1,
        2,
        5,
        8
      ],
      "precompute_distances": [
        "auto",
        true,
        false
      ],
      "tol": [
        0.0001,
        0.0002,
        0.0003
      ]
    },
    "dummy_inputs": [
      "precompute_distances",
      "init",
      "algorithm"
    ],
    "semi_dummy_inputs": {},
    "external_params": {
      "num_rows": [
        100,
        1000,
        10000,
        100000,
        1000000
      ],
      "num_features": [
        5,
        50,
        100,
        200,
        500
      ]
    },
    "other_params": [
      "total_memory",
      "available_memory",
      "num_cpu"
    ]
  }
}
